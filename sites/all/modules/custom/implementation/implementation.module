<?php
//require_once DRUPAL_ROOT . '/modules/filter/filter.module';

function implementation_menu()
{
    $menu['implementation/add'] = array(
        'title' => 'implementation',
        'page callback' => 'implementation_add',
        'access arguments' => array(
            'add implementation items'
        ) ,
        'access callback' => true,
    );
    $menu['implementation/edit'] = array(
        'title' => 'implementation',
        'page callback' => 'implementation_page',
        'access callback' => true,
    );

    $menu['implementation/%implementation/edit'] = array(
        'title' => 'Edit',
        'page callback' => 'drupal_get_form',
        'page arguments' => array(
            'implementation_edit_item_form',1) ,
        'access arguments' => array(
            'edit implementation items'
        ) ,
        'access callback' => true,
        'type' => MENU_LOCAL_TASK,
        'weight' => - 1,
    );

     // save and component

        $menu['implementation/component'] = array(
        'title' => 'implementation',
        'page callback' => 'implementation_component',
        'access callback' => true,
        );

        $menu['implementation/%implementation/component'] = array(
        'title' => 'Edit',
        'page callback' => 'drupal_get_form',
        'page arguments' => array(
            'implementation_save_and_copy_form',1) ,
        'access callback' => true,
        );

// save and component menu ends


    $menu['implementation/delete'] = array(
        'title' => 'Delete',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('implementation_delete_item_form',1) ,
        'access arguments' => array('delete implementation items') ,
        'access callback' => true,
    );

    $menu['implementation/list'] = array(
        'title' => 'implementation',
        'page callback' => 'implementation_view_list_item_page',
        'page arguments' => array(
            1
        ) ,
        'access callback' => true,
    );

    $menu['implementation/%implementation'] = array(
        'title' => 'View implementation',
        'page callback' => 'implementation_view_item_page',
        'page arguments' => array(
            1
        ) ,
        'access callback' => true,
    );

    $menu['implementation/%implementation/view'] = array(
        'title' => 'View',
        'page callback' => 'drupal_get_form',
        'access callback' => true,
        'page arguments' => array(
            'implementation_item_view_form',
            1
        ) ,
        'access arguments' => array(
            'edit implementation items'
        ) ,
        'type' => MENU_LOCAL_TASK,
        'weight' => - 2,
    );
    return $menu;
}




function implementation_load($implementation_id)
{
    return db_query('SELECT implementation_id,contributing_factor_models,intervention_models,Strategies,csap_6,csap_7,startdatetime,enddatetime,Length_of_services,location,country,address_1,address_2,city,states,zip_code,number_adult_served,number_youth_served,Members_Invloved,personConductingContent,contact_person_conducting,description_of_purpose,description_of_outcome,Donation_select,Monetary_Value,Comment,Attachments_notes,Attachments_fid,intervention_id,contributing_factor_id,logic_model_title_link,is_pending,signature,user_id,created_at FROM {implementation_details} WHERE implementation_id = :implementation_id', array(
        ':implementation_id' => $implementation_id
    ))->fetchObject();
}



function implementation_add()
{
    $item = new StdClass;
    $item->implementation_id = false;
    $item->personConductingContent = '';
    $item->Strategies = '';
    $item->csap_6 = '';
    $item->csap_7 = '';
    $item->startdatetime = '';
    $item->enddatetime = '';
    $item->Length_of_services = '';
    $item->location = '';
    $item->capacity_address = '';
    $item->Country = '';
    $item->address_1 = '';
    $item->address_2 = '';
    $item->city = '';
    $item->states = '';
    $item->zip_code = '';
    $item->number_adult_served = '';
    $item->number_youth_served = '';
    $item->Members_Invloved = '';
    $item->description_of_purpose = '';
    $item->description_of_outcome = '';
    $item->Donation_select = '';
    $item->Monetary_Value = '';
    $item->Comment = '';
    $item->Attachments_fid = '';
    $item->Attachments_notes = '';
    $item->Alternative_Activities = '';
    $item->signature = '';
    return drupal_get_form('implementation_item_form', $item);
}

function implementation_page()
{
    $item = new StdClass;
    $item->implementation_id = '';
    $item->personConductingContent = '';
    $item->Strategies = '';
    $item->csap_6 = '';
    $item->csap_7 = '';
    $item->startdatetime = '';
    $item->enddatetime = '';
    $item->Length_of_services = '';
    $item->location = '';
    $item->capacity_address = '';
    $item->Country = '';
    $item->address_1 = '';
    $item->address_2 = '';
    $item->city = '';
    $item->states = '';
    $item->zip_code = '';
    $item->number_adult_served = '';
    $item->number_youth_served = '';
    $item->Members_Invloved = '';
    $item->intervention_id='';
    $item->contributing_factor_id='';
    $item->description_of_purpose = '';
    $item->description_of_outcome = '';
    $item->Donation_select = '';
    $item->Monetary_Value = '';
    $item->Comment = '';
    $item->Attachments_fid = '';
    $item->Attachments_notes = '';
    $item->signature = '';
    return drupal_get_form('implementation_edit_item_form', $item);
}



function implementation_component()
{
    $item = new StdClass;
    $item->implementation_id = '';
    $item->personConductingContent = '';
    $item->Strategies = '';
    $item->csap_6 = '';
    $item->csap_7 = '';
    $item->startdatetime = '';
    $item->enddatetime = '';
    $item->Length_of_services = '';
    $item->location = '';
    $item->capacity_address = '';
    $item->Country = '';
    $item->address_1 = '';
    $item->address_2 = '';
    $item->city = '';
    $item->states = '';
    $item->zip_code = '';
    $item->number_adult_served = '';
    $item->number_youth_served = '';
    $item->Members_Invloved = '';
    $item->description_of_purpose = '';
    $item->description_of_outcome = '';
    $item->Donation_select = '';
    $item->Monetary_Value = '';
    $item->Comment = '';
    $item->Attachments_fid = '';
    $item->Attachments_notes = '';
    $item->signature = '';
    return drupal_get_form('implementation_save_and_copy_form', $item);
}


// implemetation add


function implementation_item_form($form, &$form_state, $item)
{
  global $user;

    $media_ids = db_query('SELECT entity_id FROM {field_data_field_primary_sector} where field_primary_sector_tid=64')->fetchCol();


    $media_ids = db_query('SELECT organization ,reach_value FROM {estar_contacts_details} where primary_sector_select=64 AND secondary_sector_select=76')->fetchAll();


  if (isset($media_ids) && count($media_ids) > 0)
    {
        foreach ($media_ids as $nKey=> $mids)
        {

            if ($media_ids != '')
            {
                $media_company_names[$nKey] = $mids->organization;
                 $media_reach[$nKey] = $mids->reach_value;
            }
        }
    }

    $social_media_ids = db_query('SELECT organization FROM {estar_contacts_details} where primary_sector_select =206 AND secondary_sector_select=207')->fetchAll();


  if (isset($social_media_ids) && count($social_media_ids) > 0)
    {
        foreach ($social_media_ids as $mKey=> $mId)
        {

            if ($social_media_ids != '')
            {
                $social_media_data[$mKey] = $mId->organization;
            }
        }
    }


    global $user;
    $form = array();
    $form['#tree'] = true;
    $form['#attributes']['enctype'] = 'multipart/form-data';

    $base_url = $GLOBALS['base_url'];

    drupal_set_title("Implementation Add Page");


     $form['print'] = array(
                "#markup" => '
<div class="implementation-print" onclick="myFunction()" > <i class="fa fa-file-pdf-o fa-lg" aria-hidden="true"></i> Download as PDF</div>',
                );



    $contributing_factor = db_query("SELECT tid, name FROM {taxonomy_term_data} WHERE vid = 12")->fetchAll();

    $interventions = db_query("SELECT tid, name FROM {taxonomy_term_data} WHERE vid = 28")->fetchAll();

    $query = db_select('planning_details', 'a');
    $query->fields('a', array(
        'planning_id',
        'title'
    ));
    $query->orderBy('a.title', 'ASC');
    $planning_lists = $query->execute()
        ->fetchAll();
    $planCount = 0;
    $lmCount = 0;
    foreach ($planning_lists as $plankey => $planVal)
    {
        $plan_id = $planVal->planning_id;
        $plan_title = $planVal->title;
        $planning_data_lists = db_query("SELECT * FROM {planning_details} WHERE planning_id = " . $plan_id)->fetchAll();
        //echo "<pre>";print_r($planning_data_lists);die;
        $chkSerialize = @unserialize($planning_data_lists[0]->contributing_factor);
        if ($chkSerialize !== false)
        {
            $contributingFactor = unserialize($planning_data_lists[0]->contributing_factor);
            $interventionsCheckedItems = unserialize($planning_data_lists[0]->interventions);
            $logicModelCount = count($contributingFactor['contributingCollection']);
            //echo $logicModelCount."<pre>";print_r($contributingFactor);echo "<pre>";print_r($interventionsCheckedItems);die;
            $conSelectedItems = "";
            $intSelectedItems = "";
            //$contributingItems="";
            $contributingItems = '<div id="firstTable_' . $plankey . '" class="heading_tag">
    <h3><input type="radio" id="lm-title-link' . $planCount . '" class="form-radio" value="' . $plan_title . '" name="logic_model_title_link0_0" ' . $cfCheck . '> ' . $plan_title . '</h3>
      <div class="select_btn" style="display:none;">
        <div class="form-checkboxes">
          <div class="form-item form-type-checkbox"><label><input id="checkAllLogicModel" type="checkbox" class="form-checkbox" value="" name="contributing_factor" onchange="checkAllRadioFunc(this,' . $planCount . ')"> Select all/Select none</label>
          </div>
        </div>
      </div>
   </div>
   <div class="logicmodel_inter_con" id="logicmodel_inter_con_' . $planCount . '">';
            $planCount++;
            $ico = 1; //echo $logicModelCount;die;
            $stInvCount = "0_0";
            for ($i = 0;$i < $logicModelCount;$i++)
            {

                $ichange = $plankey . '_' . $i;
                $contributingItems .= '<div class="capacity_logic_section"><div id="conFactorTable_' . $i . '" class="conFactorTab">
                <div class="form-type-checkboxes"><label class="heading_label">Contributing Factor</label>';
                foreach ($contributing_factor as $fKey => $fVal)
                {
                    if ($fVal->name == trim($contributingFactor['contributingCollection']['contribCollection' . $i]))
                    {
                        $contributingItems .= '<div class="form-checkboxes">
                                <div class="form-item form-type-checkbox"><label><input style="display:none;" id="check-cont-' . $ichange . '" type="radio" class="form-radio" value="' . $fVal->tid . '" name="contributing_factor[]" ' . $cfCheck . '><span> ' . $fVal->name . '</span></label></div>
                     </div>';
                    }

                }
                $contributingItems .= '</div></div>
      <div id="intervTable_' . $i . '" class="interventions intervTab">
                            <div class="form-type-checkboxes"><label class="heading_label">Interventions</label>

      ';

                foreach ($interventions as $cKey => $cVal)
                {//echo "<pre>";print_r($interventions);die;
                    if (in_array($cVal->name, $interventionsCheckedItems['interventionCollection']['internCollection' . $i]))
                    {
                        $contributingItems .= '<div class="form-checkboxes">
                                <div class="form-item form-type-checkbox"><label><input id="check-inter' . $ichange . '" type="radio" value="' . $cVal->tid . '" class="form-radio form-intervention int-check-' . $plankey . ' required" name="interventions[]"><span> ' . $cVal->name . '</span></label></div>
                     </div>';
                    }

                }

                $contributingItems .= '</div></div></div>';

                //$contributingItems.='</table>';
                #--------------------------------------
                # create a "planning logic model" fieldset
                #--------------------------------------
                $form['planningLogicModel' . $plankey] = array(
                    '#type' => 'fieldset',
                    '#title' => t($plan_title . ' <span class="form-required" title="This field is required.">*</span>') ,
                    '#collapsible' => true,
                    '#collapsed' => ($plankey == "0") ? false : true,
                    '#attributes' => array(
                        'class' => array(
                            "planning-fieldset"
                        )
                    ) ,
                );

                $ico++;

            }

            $contributingItems .= '</div></table>';
            $form['planningLogicModel' . $plankey]['contributing_intervention' . $plankey] = array(
                "#title" => 'Logic model',
                "#markup" => $contributingItems,
                '#required' => true,
            );

            $form['table_count_id'] = array(
                '#type' => "hidden",
                '#value' => ($logicModelCount - 1) ,
                '#attributes' => array(
                    "id" => "LogicModelCountId"
                )
            );

            //echo "<pre>";print_r($contributingFactor);echo "<pre>";print_r($interventionsCheckedItems);die;

        }
        else
        { //echo $lmCount;die;
            $ichange = $plankey . '_' . $lmCount;
            $contributingFactor = $planning_data_lists[0]->contributing_factor;
            $interventionsCheckedItems = explode(",", $planning_data_lists[0]->interventions);

            $contributingItems = "";
            foreach ($contributing_factor as $fKey => $fVal)
            {
                if ($contributingFactor == $fVal->name)
                {
                    $contributingItems .= '<div class="form-checkboxes">
                                <div class="form-item form-type-checkbox"><label><input style="display:none;" id="check-cont-' . $ichange . '" type="radio" class="form-radio" value="' . $fVal->tid . '" name="contributing_factor[]" ' . $cfCheck . '><span> ' . $fVal->name . '</span><label></div>
                   </div>';
                }
            }

            $interventionsItems = "";
            foreach ($interventions as $cKey => $cVal)
            { //echo $cVal."<pre>";print_r($interventionsCheckedItems);die;
                if (in_array($cVal->name, $interventionsCheckedItems))
                {
                    $interventionsItems .= '<div class="form-checkboxes">
                                <div class="form-item form-type-checkbox"><label><input id="check-inter' . $ichange . '" type="radio" value="' . $cVal->tid . '" class="form-radio form-intervention int-check-' . $plankey . ' required" name="interventions[]"><span> ' . $cVal->name . '</span><label></div>
                   </div>';
                }
            }

            $form['planningLogicModel' . $plankey] = array(
                '#type' => 'fieldset',
                '#title' => t($plan_title . ' <span class="form-required" title="This field is required.">*</span>') ,
                '#collapsible' => true,
                '#collapsed' => ($plankey == "0") ? false : true,
                '#attributes' => array(
                    'class' => array(
                        "planning-fieldset"
                    )
                ) ,
            );

            $form['planningLogicModel' . $plankey]['contributing_intervention' . $plankey] = array(
                "#title" => 'Logic model',
                "#markup" => '
    <div id="firstTable' . $plankey . '" class="heading_tag">
      <h3><input type="radio" id="lm-title-link' . $planCount . '" class="form-radio" value="' . $plan_title . '" name="logic_model_title_link0_0" ' . $cfCheck . '> ' . $plan_title . '</h3>
      <div class="select_btn" style="display:none;">
        <div class="form-checkboxes">
          <div class="form-item form-type-checkbox">
            <label><input id="checkAllLogicModel" type="checkbox" value="" name="contributing_factor[]" class="form-checkbox" onchange="checkAllRadioFunc(this,' . $planCount . ')"> Select all/Select none</label>
          </div>
        </div>
      </div>
    </div>
    <div class="logicmodel_inter_con" id="logicmodel_inter_con_' . $planCount . '">
           <div class="capacity_logic_section">
               <div id="conFactorTab" class="conFactorTab">
          <div class="form-type-checkboxes">
            <label class="heading_label">Contributing Factor</label>
            ' . $contributingItems . '
          </div>
        </div>
        <div id="intervTab" class="interventions intervTab">
          <div class="form-type-checkboxes">
            <label class="heading_label">Interventions</label>
            ' . $interventionsItems . '
          </div>
        </div>
            </div>
        </div>
</table>'
            );

            $form['table_count_id'] = array(
                '#type' => "hidden",
                '#value' => 0,
                '#attributes' => array(
                    "id" => "LogicModelCountId"
                )
            );

            $planCount++;
            $lmCount++;

        }

    }

    $form['Strategies'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Strategies') ,
        '#required' => true,
        '#options' => array(
            ''=>"<--Select-->",
            'CSAP 6' => "CSAP 6",
            'CADCA 7' => "CADCA 7"
        ) ,
        '#attributes' => array(
               'required' => true,
            "onchange" => "showStrategiesBySelect(this)"
        )
    );

    $Strategies_CSAP_6 = db_query("SELECT name, name FROM {taxonomy_term_data} WHERE vid = 18")->fetchAllKeyed();

    $form['cons_block_start'] = array(
        '#markup' => "<div id='StrategiesCSAP6' style='display:none;'>"
    );

    $form['csap_6'] = array(
        '#type' => 'radios',
        '#title' => t('CSAP 6 <span class="form-required" title="This field is required.">*</span>') ,
        '#options' => $Strategies_CSAP_6,
        '#attributes' => array(
            "onclick" => "showcsap6(this)"
        )
    );

    $form['end_csap6'] = array(
        '#markup' => '</div>'
    );

    $form['Alternative_start'] = array(
        '#markup' => "<div id='Alternative_start' style='display:none;'>"
    );

    $form['Alternative_Activities'] = array(
        '#type' => 'textfield',
    '#title' => t('Title: Alternative Activities<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['Alternative_end'] = array(
        '#markup' => '</div>'
    );

    $form['Community_start'] = array(
        '#markup' => "<div id='community' style='display:none;'>"
    );

    $form['Community_based_Process'] = array(
        '#type' => 'textfield',
    '#title' => t('Title: Recruitment Effort<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['Community_end'] = array(
        '#markup' => '</div>'
    );

    $form['education_start'] = array(
        '#markup' => "<div id='education_csap6' style='display:none;'>"
    );

    $form['education_csap'] = array(
        '#type' => 'textfield',
        '#title' => t('Title: Education<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['education_end'] = array(
        '#markup' => '</div>'
    );

    $form['Environmental_start'] = array(
        '#markup' => "<div id='environmental' style='display:none;'>"
    );

    $form['environmental'] = array(
        '#type' => 'textfield',
        '#title' => t('Title: Environmental Changes<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['environmental_end'] = array(
        '#markup' => '</div>'
    );

    $form['Information_Dissemination_csap6_start'] = array(
        '#markup' => "<div id='Information_Dissemination_csap6' style='display:none;'>"
    );

    $form['Information_Dissemination_csap6'] = array(
        '#type' => 'textfield',
        '#title' => t('Title: Information Dissemination<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['Information_Dissemination_csap6_end'] = array(
        '#markup' => '</div>'
    );

    $form['Problem_Referral_start'] = array(
        '#markup' => "<div id='problem_referral' style='display:none;'>"
    );
    $form['problem_referral'] = array(
        '#markup' => '<h2>This report is currently not applicable and can not be completed</h2>'
    );
    $form['problem_referral_end'] = array(
        '#markup' => '</div>'
    );

    $form['information_start'] = array(
        '#markup' => "<div id='information_dissemination' style='display:none;'>"
    );
    $form['information_dissemination'] = array(

'#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Information Dissemination') ,
        '#options' => array(
            '' => "<--select-->",
            'Media' => "Media",
            'Social Media' => "Social Media",
            'Presentations' => "Presentations",
            'Distribution of Materials' => "Distribution of Materials"
        ) ,
        '#attributes' => array(
            "onclick" => "information(this)",

        ) ,
    );
    $form['information_end'] = array(
        '#markup' => '</div>'
    );

    $Strategies_CSAP_7 = db_query("SELECT name, name FROM {taxonomy_term_data} WHERE vid = 17")->fetchAllKeyed();

    $form['consump_block_start'] = array(
        '#markup' => "<div id='StrategiesCSAP7' style='display:none;'>"
    );
    $form['csap_7'] = array(
        '#type' => 'radios',
        '#title' => t('CADCA 7 <span class="form-required" title="This field is required.">*</span>') ,
        '#options' => $Strategies_CSAP_7,
        '#attributes' => array(
            "onclick" => "showcsap7(this)"
        )
    );
    $form['end_csap7'] = array(
        '#markup' => '</div>'
    );

    // fileds start cadca 7
    $form['Enhance_Skills_starts'] = array(
        '#markup' => "<div id='Enhance_Skills' style='display:none;'>"
    );
    $form['Enhance_Skills'] = array(
        '#type' => 'textfield',
           '#title' => 'Title: Enhance Skills<span class="form-required" title="This field is required.">*</span>',
    );

    $form['Enhance_Activity'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
          '#title' => 'Activity Type:<span class="form-required" title="This field is required.">*</span>',
        '#options' => array(
            '' => "<--select-->",
            'Youth Education Training Programs (providing information / skills)' => "Youth Education Training Programs (providing information / skills)",
            'Parent Education Training Programs' => "Parent Education Training Programs",
            'Teacher / Youth Worker Education and Training Programs' => "Teacher / Youth Worker Education and Training Programs",
            'Community Member Education and Training Programs' => "Community Member Education and Training Programs",
            'Business Training (e.g., responsible beverage service / vendor training [voluntary or mandatory])' => "Business Training (e.g., responsible beverage service / vendor training [voluntary or mandatory])",
            'Other' => "Other",
        ) ,

        '#attributes' => array(
            "onclick" => "enchance_other(this)"
        ) ,
    );

    $form['Enhance_Skills_end'] = array(
        '#markup' => '</div>'
    );

    $form['Providing_Support_starts'] = array(
        '#markup' => "<div id='Providing_Support' style='display:none;'>"
    );
    $form['Providing_Support'] = array(
        '#type' => 'textfield',
        '#title' => t('Title: Name of activity<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['Providing_Support_activity'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Activity Type: <span class="form-required" title="This field is required.">*</span>') ,
        '#options' => array(
            '' => "<--select-->",
            'Alternative/drug-free social events' => "Alternative/drug-free social events",
            'Youth organizations/ drop-in centers' => "Youth organizations/ drop-in centers",
            'Organized youth recreation programs (e.g., athletics, arts, outdoor activities)' => "Organized youth recreation programs (e.g., athletics, arts, outdoor activities)",
            'Youth/family community involvement (e.g., school or neighborhood cleanup)' => "Youth/family community involvement (e.g., school or neighborhood cleanup)",
            'Youth/family support groups' => "Youth/family support groups",
            'Other' => "Other",
        ) ,

        '#attributes' => array(
            "onclick" => "provide_other(this)"
        ) ,
    );

    $form['Providing_Support_end'] = array(
        '#markup' => '</div>'
    );

    $form['Provide_Information_starts'] = array(
        '#markup' => "<div id='Provide_Information' style='display:none;'>"
    );
    $form['Provide_Information'] = array(
        '#type' => 'textfield',
            '#title' => t('Title: Name of activity<span class="form-required" title="This field is required.">*</span>') ,
    );
    $form['Provide_Information_activity'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Activity Type: <span class="form-required" title="This field is required.">*</span>') ,
        '#options' => array(
            '' => "<--select-->",
            'Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),' => "Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),",
            'Informational materials prepared/ produced' => "Informational materials prepared/ produced",
            'Informational materials disseminated' => "Informational materials disseminated",
            'Social networking (Facebook, Twitter, etc.)' => "Social networking (Facebook, Twitter, etc.)",
            ' Information on DFC Coalition Web site' => " Information on DFC Coalition Web site",
            ' Direct face-to-face information sessions or Special events (e.g., fairs, community celebrations)' => " Direct face-to-face information sessions orSpecial events (e.g., fairs, community celebrations)",
            'Others' => "Others",
        ) ,
        '#attributes' => array(
            "onclick" => "provide_information(this)"
        ) ,
    );

    $form['Provide_Information_end'] = array(
        '#markup' => '</div>'
    );

    $form['Change_Consequences_starts'] = array(
        '#markup' => "<div id='Change_Consequences' style='display:none;'>"
    );
    $form['change_consequences'] = array(
        '#type' => 'textfield',
            '#title' => t('Title of the Change:<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['change_activity'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
                '#title' => t('Type of Change:<span class="form-required" title="This field is required.">*</span>') ,
        '#attributes' => array(
            "onclick" => "change_activity_others(this)"
        ) ,
        '#options' => array(
            '' => "<--select-->",
            'Strengthening Enforcement' => "Strengthening Enforcement",
            'Strengthening Surveillance' => "Strengthening Surveillance",
            'Recognition Programs' => "Recognition Programs",
            'Publicize Non-Compliance' => "Publicize Non-Compliance",
            'Other' => "Other",
        ) ,
    );

    $form['Change_Consequences_end'] = array(
        '#markup' => '</div>'
    );

    $form['Change_Access_starts'] = array(
        '#markup' => "<div id='Change_Access' style='display:none;'>"
    );
    $form['Change_Access'] = array(
        '#type' => 'textfield',
    '#title' => t('Title of the Change:<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['Change_Access_activity'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Type of Change:') ,
        '#attributes' => array(
            "onclick" => "Change_Access_activity_others(this)"
        ) ,
        '#options' => array(
            '' => "<--select-->",
            'Increased Access to Substance Use Services' => " Increased Access to Substance Use Services",
            'Reducing Home and Social Access to Alcohol and Other Substances' => "Reducing Home and Social Access to Alcohol and Other Substances",
            'Improve supports for service use' => "Improve supports for service use",
            'Improve access through culturally sensitive outreach' => "Improve access through culturally sensitive outreach",
            'Other' => "Other",
        ) ,
    );

    $form['Change_Access_end'] = array(
        '#markup' => '</div>'
    );

    $form['Change_Policies_starts'] = array(
        '#markup' => "<div id='Change_Policies' style='display:none;'>"
    );
    $form['Change_Policies'] = array(
        '#type' => 'textfield',
    '#title' => t('Title of the Change:<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['Change_Policies_activity'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Type of Change:') ,
        '#attributes' => array(
            "onclick" => "Change_Policies_activity_others(this)"
        ) ,
        '#options' => array(
            '' => "<--select-->",
            'Cost: Laws/public policies concerning cost (e.g. alcohol or tobacco tax, fees)' => "Cost: Laws/public policies concerning cost (e.g. alcohol or tobacco tax, fees)",
            'Underage Use: Laws/public policies targeting use, possession, or behavior under the influence of minors' => "Underage Use: Laws/public policies targeting use, possession, or behavior under the influence of minors",
            'Schools: Policies promoting drug-free schools' => "Schools: Policies promoting drug-free schools",
            'Treatment/Prevention: Laws/ public policies promoting treatment or prevention alternatives (e.g. diversion treatment programs for underage substance use offenders)' => "Treatment/Prevention: Laws/ public policies promoting treatment or prevention alternatives (e.g. diversion treatment programs for underage substance use offenders)",
            'Workplace: Policies promoting drug-free workplaces' => "Workplace: Policies promoting drug-free workplaces",
            'Citizen enabling/Liability: Laws/ public policies concerning adult (including parent) social enabling or liability (e.g. social host ordinances)' => "Citizen enabling/Liability: Laws/ public policies concerning adult (including parent) social enabling or liability (e.g. social host ordinances)",
            'Supplier Promotion/ Liability: Laws/ public policies concerning supplier advertising, promotion, liability (e.g. server liability, product placeent, happy hours, drink specials' => "Supplier Promotion/ Liability: Laws/ public policies concerning supplier advertising, promotion, liability (e.g. server liability, product placeent, happy hours, drink specials",
            'mandatory compliance checks, responsible beverage service' => "mandatory compliance checks, responsible beverage service",
            'Outlet Location / Density: Laws/ public policies concerning limitation and restrictions of location and density of alcohol outlets' => "Outlet Location / Density: Laws/ public policies concerning limitation and restrictions of location and density of alcohol outlets",
            'Sales Restrictions: Laws/ publicpolicies concerning restrictions on product sales (e.g., methamphetamine pre-cursor access, alcohol at gas stations)' => "Sales Restrictions: Laws/ publicpolicies concerning restrictions on product sales (e.g., methamphetamine pre-cursor access, alcohol at gas stations)",
            'Other' => "Other",
        ) ,
    );

    $form['Change_Policies_end'] = array(
        '#markup' => '</div>'
    );

    $form['Change_Consequences_end'] = array(
        '#markup' => '</div>'
    );

    $form['Physical_Design_starts'] = array(
        '#markup' => "<div id='Physical_Design' style='display:none;'>"
    );
    $form['Physical_Design'] = array(
        '#type' => 'textfield',
       '#title' => t('Title of the Change:<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['Physical_Design_activity'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Type of Change:') ,
        '#attributes' => array(
            "onclick" => "Physical_Design_activity_others(this)"
        ) ,
        '#options' => array(
            '' => "<--select-->",
            'Identify Physical Design Problems,' => "Identify Physical Design Problems,",
            'Cleanup and Beautification,' => "Cleanup and Beautification,",
            'Improve visibility/ease of surveillance in public places and substance use hotspots,' => "Improve visibility/ease of surveillance in public places and substance use hotspots,",
            'Promote improved signage / advetising/ practices by suppliers,' => "Promote improved signage / advetising/ practices by suppliers,",
            'Identify problem establishments for closure,' => "Identify problem establishments for closure,",
            'Encourage business/ supplier designation of "no alcohol" or "no tobacco" zones' => "Encourage business/ supplier designation of 'no alcohol' or 'no tobacco' zones",
            'Other' => "Other",
        ) ,
    );

    $form['Physical_Design_end'] = array(
        '#markup' => '</div>'
    );

    $form['others_starts'] = array(
        '#markup' => "<div id='others_for_all' style='display:none;'>"
    );
    $form['others_for_all'] = array(
        '#type' => 'textfield',

    '#title' => t('Others<span class="form-required" title="This field is required.">*</span>') ,
    );

    $form['others_end'] = array(
        '#markup' => '</div>'
    );

    $form['media_type_starts'] = array(
        '#markup' => "<div id='media_type' style='display:none;'>"
    );

    $form['media_type_information'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Type') ,
        '#options' => array(
            '' => "<--select-->",
            'Billboards/Bus Boards, Editorials' => "Billboards/Bus Boards, Editorials",
            'Media Campaign, News Articles' => "Media Campaign, News Articles",
            'Press Conferences' => "Press Conferences",
            'Press Releases' => "Press Releases",
            'PSA’s' => "PSA’s",
            'Radio Interviews' => "Radio Interviews",
            'Television Interview' => "Television Interview",
        ) ,
    );

    $form['media_type_end'] = array(
        '#markup' => '</div>'
    );

    $form['Media_Campaign_starts'] = array(
        '#markup' => "<div id='Media_Campaign' style='display:none;'>"
    );

    $form['Media_Campaign_information'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Type') ,
        '#options' => array(
            '' => "<--select-->",
            'Media Campaign' => "Media Campaign",
            'Media Coverage' => "Media Coverage",
        ) ,
    );

    $form['Media_Campaign_end'] = array(
        '#markup' => '</div>'
    );

    $form['media_start'] = array(
        '#markup' => "<table id='media' class='imp_media_table' style='display:none;'>
    <tr><th>Media outlets </th><th>Submitted </th><th>Date </th><th>Published </th><th>If yes, then Publication Date </th><th>Reach </th><th>Notes </th></tr><tr>"
    );

    // media information csap 6
    if (isset($media_company_names) && count($media_company_names) > 0)
    {
        $i = 0;
        foreach ($media_reach as $ikey => $ivalue) {

        foreach ($media_company_names as $mKey => $mNames)
        {

            $form['media_row_start' . $i] = array(
                '#markup' => "<tr>"
            );
            // media information csap 6
            $form['Media_outlet' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#value' => $mNames,
                '#attributes' => array(
                    'readonly' => 'readonly',
                    'name' => "media_outlet[$i]"
                ) ,
                '#suffix' => '</td>',
            );

            $form['Media_submit' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#attributes' => array(
                    'name' => "media_submit[$i]"
                ) ,
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
            );
            $form['media_date' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'date_popup',
                '#date_format' => 'm/d/Y',
                '#attributes' => array(
                    'name' => "media_date[$i]"
                ) ,
                '#suffix' => '</td>',
            );
            $form['Published' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#attributes' => array(
                    'name' => "published[$i]"
                ) ,
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
            );
            $form['if_yes_publication' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'date_popup',
                '#date_format' => 'm/d/Y',
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "media_publish[$i]"
                ) ,
            );
            $form['Reach' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#value' => $ivalue,
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "reach[$i]"
                ) ,
            );
            $form['media_notes' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textarea',
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "media_notes[$i]"
                ) ,
            );

            $form['media_row_end' . $i] = array(
                '#markup' => "</tr>"
            );

            $i++;
        }
        $form['media_end'] = array(
            '#markup' => '</tr></table>'
        );
    }
}

    // social media information csap 6
    $form['social_media_start'] = array(
        '#markup' => "<table id='social_media' class='imp_media_table' style='display:none;'>
        <tr><th>Social Media Outlets </th><th>submitted </th><th>Date </th><th>Impressions </th><th>Notes </th></tr>"
    );

    if (isset($social_media_data) && count($social_media_data) > 0)
    {
        $si = 0;
        foreach ($social_media_data as $mKey => $mNames)
        {
            $form['social_media_row_start' . $si] = array(
                '#markup' => "<tr>"
            );
            $form['Social_Media_profile' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#value' => $mNames,
                '#attributes' => array(
                    'readonly' => 'readonly'
                ) ,
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_profile[$si]"
                ) ,
            );

            $form['Social_Media_Media_submit' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_submit[$si]"
                ) ,
            );
            $form['social_media_date' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'date_popup',
                '#date_format' => 'm/d/Y',
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_date[$si]"
                ) ,
            );
            $form['Social_Media_media_impression' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_impression[$si]"
                ) ,
            );
            $form['Social_Media_media_notes' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'textarea',
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_notes[$si]"
                ) ,
            );
            $form['social_media_row_end' . $si] = array(
                '#markup' => "</tr>"
            );
            $si++;

        }
    }

    $form['social_media_end'] = array(
        '#markup' => '</table>'
    );

    //Funding_supports common fields for all
    $form['Funding_supports_starts'] = array(
        '#markup' => "<div id='Funding_supports' style='display:none;'>"
    );
    $form['Funding_supports'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
    );
    $form['Funding_supports_end'] = array(
        '#markup' => '</div>'
    );

    $form['Problem_Referral_all_fields_hidden_start'] = array(
        '#markup' => "<div id='problem_referral_all_field' style='display:none;'>"
    );

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['person_Conducting_starts'] = array(
        '#markup' => "<div id='person_Conducting_change_hidden' style='display:none;'>"
    );
    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"> <table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($all_user_details);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
            $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <label><input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox required" type="checkbox" ' . $personChkVal . '></label>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
    $form['personConductiongToggle']['person_Conducting_end'] = array(
        '#markup' => '</div>'
    );

    //
    $form['addtional_starts'] = array(
        '#markup' => "<div id='addtional_fields' style='display:none;'>"
    );
    $form['startdatetime_physical'] = array(
        '#type' => 'date_popup',
        '#title' => 'Start Date <span class="form-required" title="This field is required.">*</span>',
        '#date_format' => 'm/d/Y',
        '#default_value' => date('m/d/Y') ,
        '#attributes' => array(
            'name' => 'startdatetime_physical',
        )
    );
    $form['end_date_wrapper_physical'] = array(
        '#prefix' => '<div id="end_date_wrapper">',
        '#suffix' => '</div>',
        '#markup' => '',
    );

    $form['enddatetime_physical'] = array(
        '#type' => 'date_popup',
        '#title' => 'End Date <span class="form-required" title="This field is required.">*</span>',
        '#date_format' => 'm/d/Y',
        '#default_value' => date('m/d/Y') ,
        '#attributes' => array(
            'name' => 'enddatetime_physical',
        )
    );
    $form['addtional_ends'] = array(
        '#markup' => '</div>'
    );

    // for casp 7 additional fields
    $form['number_adult_Business_starts'] = array(
        '#markup' => "<div id='number_adult_Business' style='display:none;'>"
    );

    $form['number_adult_Business_design'] = array(
        '#type' => 'textfield',
        '#title' => t('Number of Business Attending') ,
        '#maxlength' => 10000,
        '#size' => 3,
         '#attributes' => array(
        ' type' => 'number',
           'min' =>"0",
    ),
        '#default_value' => $item->number_adult_served,
    );

    $form['number_adult_Business_ends'] = array(
        '#markup' => '</div>'
    );


    // // for casp 7 additional fields
    // $form['number_adult_physical_starts'] = array(
    //     '#markup' => "<div id='number_adult_physical' style='display:none;'>"
    // );

    // $form['number_adult_physical_design'] = array(
    //     '#type' => 'textfield',
    //     '#title' => t('Number of Adult Attending') ,
    //     '#maxlength' => 100000,
    //     '#size' => 3,
    //      '#attributes' => array(
    //     ' type' => 'number',
    //        'min' =>"0",
    // ),
    //     '#default_value' => $item->number_adult_served,
    //     '#prefix' => '<hr>',
    // );
    // $form['number_youth_physical_design'] = array(
    //     '#type' => 'textfield',
    //     '#title' => t('Number of youth Attending') ,
    //     '#maxlength' => 100000,
    //     '#size' => 3,
    //      '#attributes' => array(
    //     ' type' => 'number',
    //        'min' =>"0",
    // ),
    //     '#default_value' => $item->number_adult_served,
    // );


    // $form['number_adult_physical_ends'] = array(
    //     '#markup' => '</div>'
    // );


    $form['media_hidden'] = array(
        '#markup' => "<div id='media_lenght' style='display:none;'>"
    );

    $form['startdatetime'] = array(
        '#type' => 'date_popup',
        '#title' => 'Start Date <span class="form-required" title="This field is required.">*</span>',
        '#date_format' => 'm/d/Y',
    );
    $form['end_date_wrapper'] = array(
        '#prefix' => '<div id="end_date_wrapper">',
        '#suffix' => '</div>',
        '#markup' => '',
    );

    $form['enddatetime'] = array(
        '#type' => 'date_popup',
        '#title' => 'End Date <span class="form-required" title="This field is required.">*</span>',
        '#date_format' => 'm/d/Y',
    );

    $form['lenght_environmental'] = array(
        '#markup' => "<div id='lenght_environmental' style='display:none;'>"
    );
    $form['Length_of_services'] = array(
        '#type' => 'date_popup',
        '#date_format' => 'H:i',
        '#title' => 'Length of Service(HH:MM) <span class="form-required" title="This field is required.">*</span>',
    );
      $form['lenght_environmental_end'] = array(
        '#markup' => "</div>"
    );

    $form['location'] = array(
        '#type' => 'textfield',
        '#title' => 'Location',
        '#default_value' => $item->location,

    );

    $form['address_1'] = array(
        '#prefix' => '<hr>',
        '#type' => 'textfield',
        '#title' => t('Address 1') ,
        '#default_value' => $item->address_1,
    );
    $form['address_2'] = array(
        '#type' => 'textfield',
        '#title' => t('Address 2') ,
        '#default_value' => $item->address_2,
    );
    $form['city'] = array(
        '#type' => 'textfield',
        '#title' => 'City',
        '#default_value' => $item->city,
    );

    $form['states'] = array(
        '#prefix' => '<div class="select_section capacity_select_Section">',
        '#suffix' => '</div>',
        '#title' => t('State') ,
        '#type' => 'select',
        '#options' =>  get_state_lists(),
        '#default_value' => $item->states,
    );

    $form['zip_code'] = array(
        '#type' => 'textfield',
        '#title' => t('Zipcode') ,
        '#element_validate' => array(
            'element_validate_number'
        ) ,
        '#maxlength' => 6,
        '#default_value' => $item->zip_code,
        '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

    );


    $form['media_hidden_length'] = array(
        '#markup' => '</div>'
    );



    $form['Level_Success_starts'] = array(
        '#markup' => "<div id='Level_Success' style='display:none;'>"
    );

    //csap 7 fields
    $form['Level_Success'] = array(
        '#type' => 'radios',
        '#title' => t('Level of Success: <span class="form-required" title="This field is required.">*</span>') ,
        '#options' => array(
            'Not Successful ' => "Not Successful ",
            'Moderately Successful' => "Moderately Successful",
            'Very Successful ' => "Very Successful"
        ) ,
        '#prefix' => '<hr>',
    );

    $form['Level_Success_end'] = array(
        '#markup' => '</div>'
    );


       $form['number_adult_information_starts'] = array(
        '#markup' => "<div id='number_adult_information' style='display:none;'>"
    );

    $form['number_adult_information'] = array(
        '#type' => 'textfield',
        '#title' => t('Number of Adults Attending') ,
        '#maxlength' => 100000,
        '#size' => 3,
         '#attributes' => array(
        ' type' => 'number',
           'min' =>"0",
    ),
        '#prefix' => '<hr>',
    );
    $form['number_youth_information'] = array(
        '#type' => 'textfield',
        '#title' => t('Number of Youth Attending') ,
        '#maxlength' => 100000,
        '#size' => 3,
         '#attributes' => array(
        ' type' => 'number',
           'min' =>"0",
    ),
    );


    $form['number_adult_information_ends'] = array(
        '#markup' => '</div>'
    );

       $form['number_adult_presentation_starts'] = array(
        '#markup' => "<div id='number_adult_presentation' style='display:none;'>"
    );

    $form['number_adult_presentation'] = array(
    '#type' => 'textfield',
    '#title' => t('How many Adults received written materials at this presentation?') ,
    '#maxlength' => 10,
    '#size' => 3,
     '#attributes' => array(
        ' type' => 'number',
           'min' =>"0",
    ),
    '#prefix' => '<hr>',
    );
    $form['number_youth_presentation'] = array(
        '#type' => 'textfield',
        '#title' => t('How many Youth received written materials at this presentation?') ,
        '#maxlength' => 10,
        '#size' => 3,
         '#attributes' => array(
        ' type' => 'number',
           'min' =>"0",
    ),
    );


    $form['number_adult_presentation_ends'] = array(
        '#markup' => '</div>'
    );


    $form['number_adult_start'] = array(
        '#markup' => "<div id='number_adult_start' style='display:none;'>"
    );

    $form['number_adult_served'] = array(
        '#type' => 'textfield',
        '#title' => t('<div id="all_number_adult" style="display:none;">Number of Adults Attending</div> <div  id="number_community_adult" style="display:none;" >Number of Adult Recruited</div>'),
         '#attributes' => array(
        ' type' => 'number',
           'min' =>"0",
    ),
        '#maxlength' => 100000,
        '#size' => 3,
        '#default_value' => $item->number_adult_served,
        '#prefix' => '<hr>',

    );

    $form['number_youth_served'] = array(
        '#type' => 'textfield',
   '#title' => t('<div id="all_number_youth" style="display:none;">Number of Youth Attending</div><div  id="number_community_youth" style="display:none;" >Number of Adult Recruited</div>'),
           '#attributes' => array(
           ' type' => 'number',
           'min' =>"0",
          ),
        '#maxlength' => 100000,
        '#size' => 3,
        '#default_value' => $item->number_adult_served,

    );
    $form['number_adult_end'] = array(
        '#markup' => '</div>'
    );

    $form['description_of_purpose'] = array(
        '#prefix' => '<hr>',
        '#type' => 'textarea',
             '#attributes' => array(
            '#required'=>'TRUE',
    ),
        '#title' => t('Description of Purpose <span class="form-required" title="This field is required.">*</span>') ,
        '#default_value' => $item->description_of_purpose,
    );

    $form['description_of_outcome'] = array(
        '#type' => 'textarea',
        '#title' => t('Description of Outcome <span class="form-required" title="This field is required.">*</span>') ,
             '#attributes' => array(
            '#required'=>'TRUE',
    ),
        '#default_value' => $item->description_of_outcome,
    );



    // prerson conducting activities
    if (isset($item->Members_Invloved))
    {
        $members_id_arr = unserialize($item->Members_Invloved);
    }
     $form['volunteerInvolvedToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Volunteers Involved') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );
    //echo "<pre>";print_r($item);die;
    $form['volunteerInvolvedToggle']['membersInvolvedStart'] = array(
        '#markup' => '<div class="responsive_table"><label>Volunteers Involved</label><table id="membersInvolvedTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="memSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th><th>Company organization</th> </tr></thead>
<tbody>'
    );
    $membersRow = '';
    foreach ($all_user_details as $membersList)


    { //echo "<pre>";print_r($all_user_details);die;
    if ($membersList['uid'] != "0" && (isset($membersList['roles'][8]) && $membersList['roles'][8] == "volunteers"))
        {

   $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $membersList['uid'])->fetchField(); //echo $last_name_staff."<pre>";print_r($usersList);die;
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $membersList['uid'])->fetchField();
            $org_name = db_query("SELECT field_company_organization_value FROM field_data_field_company_organization WHERE entity_id =" . $membersList['uid'])->fetchField();
            $memChkVal = (in_array($membersList['uid'], $members_id_arr['Members_Invloved'])) ? 'checked="checked"' : '';
            $membersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="Members_Invloved[]" value="' . $membersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $memChkVal . '>
              </div>
              </td><td>' . $membersList['name'] . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td><td>' . $membersList['mail'] . '</td>
              <td>' . (($cell_phone != "") ? $cell_phone : "") . '</td><td>' . (($org_name != "") ? $org_name : "") . '</td></tr>';
        }

    }


    $form['volunteerInvolvedToggle']['Members_Invloved'] = array(
        '#markup' => $membersRow
    );

    $form['volunteerInvolvedToggle']['membersInvolvedEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );

    $form['contactInvolvedToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Contact Lists') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );


    $form['contactInvolvedToggle']['contact_starts'] = array(
        '#markup' => '<div class="responsive_table"><table id="personConductingTab" class="sticky-enabled table-select-processed">
  <thead><tr><th class="select-all"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Phone</th><th>Company Organization</th><th>Primary Sector</th></tr></thead>
  <tbody>'
    );
    $contact_lists =db_query("SELECT * from {estar_contacts_details}")->fetchAll();
    $usersRow = '';
   if(isset($contact_lists) && count($contact_lists)>0){
    foreach ($contact_lists as $usersList)
    { //echo "<pre>";print_r($all_user_details);die;
        if (isset($usersList) && $usersList!="")
        {
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <label><input id="mouManagerId1" name="contact_person_conducting[]" value="' . $usersList->contact_id. '" class="form-checkbox required" type="checkbox" title="contact"></label>

              </td><td>' . (($usersList->first_name != "") ? $usersList->first_name : "") . '</td>
              <td>' . (($usersList->last_name != "") ? $usersList->last_name : "") . '</td>
              <td>' . (($usersList->email != "") ? $usersList->email : "") . '</td>
              <td>' . (($usersList->phone != "") ? $usersList->phone : "") . '</td>
              <td>' . (($usersList->organization != "") ? $usersList->organization : "") . '</td>
              <td>' . (($usersList->primary_sector_select != "") ? $usersList->primary_sector_select : "") . '</td></tr>';
        }
    }
  }else{
    $usersRow='<tr><td colspan="6">Contacts list is empty.</td></tr>';
  }
   $form['contactInvolvedToggle']['personContactContent'] = array(
        '#markup' => $usersRow,
    );

    $form['contactInvolvedToggle']['personContactEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );


    $form['Donation1'] = array(
    '#markup' => '<div class="responsive_table"><table id="myTable" class=" table order-list">
    <thead>
        <tr>
            <td>Donation</td>
            <td>Monetary Value</td>
            <td>Comment</td>
      <td class="table_remove_title">Remove</td>
        </tr>
    </thead>
    <tbody>'
    );

    $form['Title-donation'] = array(
        '#markup' => '<label>Donation </label>'
    );

    $form['Donation_select']['0'] = array(

        '#type' => 'select',

        '#options' => array(
            'Materials' => "Materials",
            'Food and refreshments' => "Food and refreshments",
            'Marketing' => "Marketing",
            'Support' => "Support",
               'Other' => "Other",
        ) ,
        '#prefix' => '<tr>
<td class="table_heading"><div class="select_section capacity_select_Section">',
        '#default_value' => $item->Donation_select,
        '#suffix' => '</div></td>
    ',
    );

    $form['Monetary_Value']['0'] = array(
        '#prefix' => '  <td class="table_heading">',
        '#type' => 'textfield',
        '#maxlength' => 10,
         '#attributes' => array(
        ' type' => 'number',
           'min' =>"0",
    ),
        '#size' => 10,
        '#suffix' => '</td>
    ',
        '#default_value' => $item->Monetary_Value,
    );

    if (isset($item->Attachments_fid) && $item->Attachments_fid != '')
    {
        $fid = $item->Attachments_fid;
        $file_upload_details = db_query("SELECT * FROM {file_managed} WHERE fid = " . $fid)->fetchAll();
        //echo "<pre>";print_r($file_upload_details);die;
        $fURI = $file_upload_details[0]->uri;
        $fname = $file_upload_details[0]->filename;
        $fileURI = file_create_url($fURI);

    }
    $form['Comment']['0'] = array(
        '#prefix' => '<td class="table_heading">',
        '#type' => 'textarea',
        '#rows' => 5,
        '#cols' => 30,
        '#suffix' => '</td></tr>
        </table></div>

        <div id="addrow" class="button button_addmore">
                <input type="button" class="btn btn-lg btn-block add_more_btn"  value="Add More field" />
        </div>

    ', // Don't forget to close the table rows, and finally the table.
        '#default_value' => $item->Comment,
    );

    $form['hidden_field'] = array(
        '#type' => "hidden",
        '#value' => "0",
        '#attributes' => array(
            'name' => '[0]'
        ) ,
        '#attributes' => array(
            "id" => "hidden_id"
        )
    );

    $form['Attachments-title'] = array(
        '#markup' => '<label>Attachment</label>'
    );

    $form['Attachments_files'] = array(
        '#prefix' => '<div class="responsive_table">
    <table id="myTable2" class="table order-list-att">
      <tr><th>' . t('Attachments') . '</th><th>' . t('Comments') . '</th><th class="table_remove_title1">Remove</th></tr>' . '<tr><td class="table_heading">
    ',
    );
    $form['Attachments_fid'] = array(
        '#type' => 'managed_file_multiple',
        '#title' => 'Managed file field',
        '#upload_validators' => array(
            'file_validate_extensions' => array(
                'pdf doc docx png gif jpg xls ppt'
            )
        ) ,
        '#upload_location' => 'public://capacity_documents/',
        '#description' => t('<a href=' . $fileURI . '> ' . $fname . '</a> <br>Please use the Choose file button to attach a response document<br><strong>Allowed extensions: pdf doc docx png gif jpg  xls ppt</strong>.') ,
        '#prefix' => '<tr>
<td class="table_heading">',
        '#suffix' => '</td>
    ',
    );

    $form['Attachments_notes'] = array(
        '#prefix' => '<td class="table_heading">',
        '#type' => 'textarea',
        '#rows' => 5,
        '#cols' => 30,
        '#suffix' => '</td></tr>
        </table></div>
    <td colspan="5" style="text-align: left;">
      <div class="button button_addmore" style="display:none;">
                <input  type="button" class="btn btn-lg btn-block " id="addrow-list" value="Add More field" />
      </div>
            </td>
    ', // Don't forget to close the table rows, and finally the table.
        '#default_value' => $item->Attachments_notes,
    );

    $form['signature'] = array(
        '#type' => 'radios',
        '#title' => t('Signature') ,
        '#options' => array(
            '2' => "Pending",
            '0' => "Save a Copy/Add a Component",
            '1' => "Review and Sign"
        ) ,
         '#attributes' => array(
          'required' => true,
             ),

    );

    $form['imp_user_id'] = array(
        '#type' => "hidden",
        '#value' => $user->uid,
    );

    $form['attachment_upload_id'] = array(
        '#type' => "hidden",
        '#value' => $item->Attachments_fid,
    );

    $form['problem_referral_hiiden_end'] = array(
        '#markup' => '</div>'
    );

    $form['next_btn_div_start2'] = array(
        '#markup' => "<div class='next_button'>"
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save & Exit') ,
    );
    $form['next_btn_div_end2'] = array(
        '#markup' => "</div>"
    );

    $form['submit-btn-separator'] = array(
        '#markup' => '&nbsp;&nbsp;&nbsp;'
    );

    return $form;
}

    // implementation add ends

   // implementation edit  start here


function implementation_edit_item_form($form, &$form_state, $item)
{

    global $user;
    $form['#attributes']['enctype'] = 'multipart/form-data';

    $base_url = $GLOBALS['base_url'];

      $media_ids = db_query('SELECT organization FROM {estar_contacts_details} where primary_sector_select=64 AND secondary_sector_select=76')->fetchAll();

  if (isset($media_ids) && count($media_ids) > 0)
    {
        foreach ($media_ids as $nKey=> $mids)
        {

            if ($media_ids != '')
            {
                $media_company_names[$nKey] = $mids->organization;
            }
        }
    }


    $social_media_ids = db_query('SELECT organization FROM {estar_contacts_details} where primary_sector_select =206 AND secondary_sector_select=207')->fetchAll();


  if (isset($social_media_ids) && count($social_media_ids) > 0)
    {
        foreach ($social_media_ids as $mKey=> $mId)
        {

            if ($social_media_ids != '')
            {
                $social_media_data[$mKey] = $mId->organization;
            }
        }
    }
    drupal_set_title("Implementation Edit Page");


     $form['print'] = array(
                "#markup" => '
<div class="implementation-print" onclick="myFunction()" > <i class="fa fa-file-pdf-o fa-lg" aria-hidden="true"></i> Download as PDF</div>',
                );


    $contributing_factor = db_query("SELECT tid, name FROM {taxonomy_term_data} WHERE vid = 12")->fetchAll();

    $interventions = db_query("SELECT tid, name FROM {taxonomy_term_data} WHERE vid = 28")->fetchAll();

    $query = db_select('planning_details', 'a');
    $query->fields('a', array(
        'planning_id',
        'title'
    ));
    $query->orderBy('a.title', 'ASC');
    $planning_lists = $query->execute()
        ->fetchAll();
    $planCount = 0;
    $lmCount = 0;
    foreach ($planning_lists as $plankey => $planVal)
    {
        $plan_id = $planVal->planning_id;
        $plan_title = $planVal->title;
        $planning_data_lists = db_query("SELECT * FROM {planning_details} WHERE planning_id = " . $plan_id)->fetchAll();
        //echo "<pre>";print_r($planning_data_lists);die;
        $chkSerialize = @unserialize($planning_data_lists[0]->contributing_factor);
        if ($chkSerialize !== false)
        {
            $contributingFactor = unserialize($planning_data_lists[0]->contributing_factor);
            $interventionsCheckedItems = unserialize($planning_data_lists[0]->interventions);
            $logicModelCount = count($contributingFactor['contributingCollection']);
            $conSelectedItems = "";
            $intSelectedItems = "";
            $logicModelTitle = $item->logic_model_title_link;//echo $logicModelTitle ."==". $plan_title;die;
            $lmCheck = ($logicModelTitle == $plan_title) ? "checked" : "";
            $contributingItems = '<div id="firstTable_' . $plankey . '" class="heading_tag">
              <h3><input id="lm-title-link' . $planCount . '" type="radio" class="form-radio" value="' . $plan_title . '" name="logic_model_title_link0_0" ' . $lmCheck . '> ' . $plan_title . '</h3>
              <div class="select_btn" style="display:none;">
                <div class="form-checkboxes">
                  <div class="form-item form-type-checkbox">
                    <label><input id="checkAllLogicModel" type="checkbox" value="" class="form-checkbox" name="contributing_factor[]" onchange="checkAllRadioFunc(this,' . $planCount . ')"> Select all/Select none</label>
                  </div>
                </div>
              </div>
            </div>
  <div class="logicmodel_inter_con" id="logicmodel_inter_con_' . $planCount . '">';
            $planCount++;
            $unCFValues = unserialize($item->contributing_factor_models);
            $unINValues = unserialize($item->intervention_models);
            $ico = 1; //echo "<pre>";print_r($unINValues);die;
            $stInvCount = "0_0";
            for ($i = 0;$i < $logicModelCount;$i++)
            {
                $ichange = $plankey . '_' . $i;

                $contributingItems .= '<div class="capacity_logic_section"><div id="conFactorTable_' . $i . '" class="conFactorTab">
                           <div class="form-type-checkboxes"><label class="heading_label">Contributing Factor</label>';
                foreach ($contributing_factor as $fKey => $fVal)
                {
                    if ($fVal->name == trim($contributingFactor['contributingCollection']['contribCollection' . $i]))
                    {
                        $cfCheck = ($unCFValues['contributing_factor'] == $cfVal->tid) ? 'checked' : '';
                        $contributingItems .= '<div class="form-checkboxes">
                      <div class="form-item form-type-checkbox"><label><input style="display:none;" id="check-cont-' . $ichange . '" type="radio" class="form-radio" value="' . $fVal->tid . '" name="contributing_factor[]" ' . $cfCheck . '><span> ' . $fVal->name . '</span></label></div>
                      </div>';
                    }

                }
                $contributingItems .= '</div></div>
      <div id="intervTable_' . $i . '" class="interventions intervTab">
          <div class="form-type-checkboxes"><label class="heading_label">Interventions</label>
      ';

                foreach ($interventions as $cKey => $cVal)
                { //echo $unINValues['interventions']['interventions'.$stInvCount][0].">>".$logicModelTitle."==".$plan_title;die;
                    if (in_array($cVal->name, $interventionsCheckedItems['interventionCollection']['internCollection' . $i]))
                    {//echo $unINValues['interventions'];die;
                        $inCheck = ($cVal->tid==$unINValues['interventions'] ) ? 'checked="checked"' : '';
                        $contributingItems .= '<div class="form-checkboxes">
                                <div class="form-item form-type-checkbox"><label><input id="check-inter' . $ichange . '" type="radio" value="' . $cVal->tid . '" class="form-radio form-intervention int-check-' . $plankey . '" name="interventions[]" ' . $inCheck . '><span> ' . $cVal->name . '</span></label></div>
                     </div>';
                    }

                }

                $contributingItems .= '</div></div></div>';

                //$contributingItems.='</table>';
                #--------------------------------------
                # create a "planning logic model" fieldset
                #--------------------------------------
                $form['planningLogicModel' . $plankey] = array(
                    '#type' => 'fieldset',
                    '#title' => t($plan_title) ,
                    '#collapsible' => true,
                    '#collapsed' => ($plankey == "0") ? false : true,
                );

                $ico++;

            }

            $contributingItems .= '</div></table>';
            $form['planningLogicModel' . $plankey]['contributing_intervention' . $plankey] = array(
                "#title" => 'Logic model',
                "#markup" => $contributingItems
            );

            $form['table_count_id'] = array(
                '#type' => "hidden",
                '#value' => ($logicModelCount - 1) ,
                '#attributes' => array(
                    "id" => "LogicModelCountId"
                )
            );

        }
        else
        {

            $contributingFactor = $planning_data_lists[0]->contributing_factor;
            $interventionsCheckedItems = explode(",", $planning_data_lists[0]->interventions);

            $ichange = $plankey . '_' . $lmCount;
            $unCFValues = unserialize($item->contributing_factor_models);
            $unINValues = unserialize($item->intervention_models);
            $logicModelTitle = $item->logic_model_title_link;

            $contributingItems = "";
            foreach ($contributing_factor as $fKey => $fVal)
            {
                if ($contributingFactor == $fVal->name)
                {
                    $cfCheck = ($unCFValues['contributing_factor'] == $fVal->tid) ? 'checked' : '';
                    $contributingItems .= '<div class="form-checkboxes">
                                <div class="form-item form-type-checkbox"><label><input style="display:none;" id="check-cont-' .$ichange . '" type="radio" class="form-radio" value="' . $fVal->tid . '" name="contributing_factor[]" ' . $cfCheck . '><span> ' . $fVal->name . ' </span><label></div>
                  </div>';
                }
            }

            $interventionsItems = "";
            foreach ($interventions as $cKey => $cVal)
            {
                if (in_array($cVal->name, $interventionsCheckedItems))
                {
                    $inCheck = ($cVal->tid==$unINValues['interventions'] && $cfCheck) ? 'checked="checked"' : '';
                    $interventionsItems .= '<div class="form-checkboxes">
                                <div class="form-item form-type-checkbox"><label><input id="check-inter' . $ichange . '" type="radio" value="' . $cVal->tid . '" class="form-radio form-intervention int-check-' . $plankey . '" name="interventions[]" ' . $inCheck . '><span> ' . $cVal->name . '</span><label></div>
                    </div>';
                }
            }
            #--------------------------------------
            # create a "planning logic model" fieldset
            #--------------------------------------
            $form['planningLogicModel' . $plankey] = array(
                '#type' => 'fieldset',
                '#title' => t($plan_title . ' <span class="form-required" title="This field is required.">*</span>') ,
                '#collapsible' => true,
                '#collapsed' => ($plankey == "0") ? false : true,
            );

            $lmCheck = ($logicModelTitle == $plan_title) ? "checked" : "";

            $form['planningLogicModel' . $plankey]['contributing_intervention' . $plankey] = array(
                "#title" => 'Logic model',
                "#markup" => '
      <div id="firstTable' . $plankey . '" class="heading_tag">
      <h3><input id="lm-title-link' . $planCount . '" type="radio" class="form-radio" value="' . $plan_title . '" name="logic_model_title_link0_0" ' . $lmCheck . '> ' . $plan_title . '</h3>
      <div class="select_btn" style="display:none;">
        <div class="form-checkboxes">
          <div class="form-item form-type-checkbox">
            <label><input id="checkAllLogicModel" type="checkbox" value="" name="contributing_factor[]" class="form-checkbox" onchange="checkAllRadioFunc(this,' . $planCount . ')"> Select all/Select none</label>
          </div>
        </div>
      </div>
    </div>
 <div class="logicmodel_inter_con" id="logicmodel_inter_con_' . $planCount . '">
           <div class="capacity_logic_section">
               <div id="conFactorTab" class="conFactorTab">
          <div class="form-type-checkboxes">
            <label class="heading_label">Contributing Factor</label>
                            ' . $contributingItems . '
                     </div>
        </div>
                <div id="intervTab" class="interventions intervTab">
          <div class="form-type-checkboxes">
            <label class="heading_label">Interventions</label>
                           ' . $interventionsItems . '
                   </div>
        </div>
            </div>
        </div>
</table>'
            );

            $form['table_count_id'] = array(
                '#type' => "hidden",
                '#value' => 0,
                '#attributes' => array(
                    "id" => "LogicModelCountId"
                )
            );

            $planCount++;
            $lmCount++;

        }

    }


 $form['Strategies_start_component'] = array(
        '#markup' => "<div id='Strategies_start_component' style='display:none;'>"
    );

    $form['Strategies'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Strategies') ,
        '#default_value' => $item->Strategies,
        '#options' => array(
            ''=>"<--Select-->",
            'CSAP 6' => "CSAP 6",
            'CADCA 7' => "CADCA 7"
        ) ,

        '#attributes' => array(
            "onchange" => "showStrategiesBySelect(this)"
        )
    );

    $Strategies_CSAP_6 = db_query("SELECT name, name FROM {taxonomy_term_data} WHERE vid = 18")->fetchAllKeyed();


    $form['csap_6'] = array(
        '#type' => 'radios',
        '#title' => t('CSAP 6 <span class="form-required" title="This field is required.">*</span>') ,
        '#options' => $Strategies_CSAP_6,
          '#default_value' => $item->csap_6,
        '#attributes' => array(
            "onclick" => "showcsap6(this)"
        )
    );

        $Strategies_CSAP_7 = db_query("SELECT name, name FROM {taxonomy_term_data} WHERE vid = 17")->fetchAllKeyed();

    $form['csap_7'] = array(
        '#type' => 'radios',
        '#title' => t('CADCA 7 <span class="form-required" title="This field is required.">*</span>') ,
        '#options' => $Strategies_CSAP_7,
         '#default_value' => $item->csap_7,
        '#attributes' => array(
            "onclick" => "showcsap7(this)"
        )
    );

        $form['Strategies_end_component'] = array(
        '#markup' => '</div>'
    );



    if (isset($item->implementation_id) && $item->implementation_id != '')
    {
        $implementation_id = $item->implementation_id;
    }

    $Alternative_Activities = db_query("SELECT Alternative_Activities, Alternative_Activities  FROM {alternative_activitity} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();

    $Alternative_Activities_data = implode(" ", $Alternative_Activities);

    $Community_based_Process = db_query("SELECT Community_based_Process, Community_based_Process  FROM {community_based} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();

    $Community_based_Process_data = implode(" ", $Community_based_Process);

    $education_csap = db_query("SELECT education_csap, education_csap  FROM {education} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $education_csap_data = implode(" ", $education_csap);

    $environmental = db_query("SELECT environmental, environmental  FROM {environmental} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $environmental_data = implode(" ", $environmental);

    $information_dissemination = db_query("SELECT information_dissemination, information_dissemination  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $information_dissemination_data = implode(" ", $information_dissemination);

    $Information_Dissemination_csap6 = db_query("SELECT Information_Dissemination_csap6, Information_Dissemination_csap6  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Information_Dissemination_csap6_data = implode(" ", $Information_Dissemination_csap6);

    // print_r($Alternative_Activities);
    // print_r($Community_based_Process_data);die();
    // print_r($environmental);
    // print_r($information_dissemination);die();



// Edit alternative activities starty here
    // csap 6 view start here
    if (isset($Alternative_Activities) && $Alternative_Activities)
    {

      $form['Alternative_start']=array(
       '#markup'=>"<div id='Alternative_start_edit'>"
        );
        $form['Alternative_Activities'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Alternative Activities') ,
            '#default_value' => $Alternative_Activities_data,
        );
             $form['Alternative_edit_end']=array(
             '#markup'=>'</div>'
        );

        $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){

    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

        $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service(HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );


        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );


        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );


        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );



        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );



        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );


        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );


        $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );


        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
            '#attributes' => array(
            ' type' => 'number',
            'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );
    }



    // community based process


     if (isset($Community_based_Process) && $Community_based_Process)
    {

       $form['Community_start']=array(
       '#markup'=>"<div id='community_edit'>"
       );
        $form['Community_based_Process'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Recruitment Effort') ,
            '#default_value' => $Community_based_Process_data,
        );
              $form['Community_end_edit']=array(
        '#markup'=>'</div>'
       );



    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
     $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

            $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }


        $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );

        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
        $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );

    }

    if (isset($education_csap) && $education_csap)
    {
          $form['education_start_edit']=array(
            '#markup'=>"<div id='education_csap6_edit'>"
            );

        $form['education_csap'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Education') ,
            '#default_value' => $education_csap,
        );

         $form['education_end_edit']=array(
         '#markup'=>'</div>'
           );

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
     $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }


        $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service(HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );

        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
        $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );


    }


    if (isset($environmental) && $environmental)
    {
        $form['environmental'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Environmental') ,
            '#default_value' => $environmental_data,
        );
             $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){

    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

         $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );


        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
        );


        $form['address_1'] = array(
            '#prefix' => '<hr>',
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );


        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' =>get_state_lists(),
            '#default_value' => $item->states,
        );

        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#attributes' => array(
             'type' => 'number',
             ),
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
    }


   $number_adult_csap_6 = db_query("SELECT number_adult_information  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();

   $number_youth_csap_6 = db_query("SELECT number_youth_information  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();


   $number_adult_presentation = db_query("SELECT number_adult_presentation  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();

   $number_youth_presentation = db_query("SELECT number_youth_presentation  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();




   if (isset($information_dissemination) && $information_dissemination)
    {
        $form['information_dissemination_edit'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Information Dissemination') ,
            '#default_value' => $Information_Dissemination_csap6_data,
        );

        $form['information_dissemination_csap6'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Information Dissemination') ,
            '#options' => array(
                '' => "<--select-->",
                'Media' => "Media",
                'Social Media' => "Social Media",
                'Presentations' => "Presentations",
                'Distribution of Materials' => "Distribution of Materials"
            ) ,
            '#attributes' => array(
                "onclick" => "information(this)",
            ) ,
            '#default_value' => $information_dissemination_data,
        );

    }





      $provide_media= 'Media';
    // presentation for information dissemination

       if (isset($information_dissemination[$provide_media]) && $information_dissemination[$provide_media] )
        {

        // media csap select files
    $Media_outlet = db_query("SELECT Media_outlet  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Media_out_csap = unserialize($Media_outlet);

    //echo "<pre>";print_r($Media_out_csap);

    $Media_submit = db_query("SELECT Media_submit  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Media_submit_csap = unserialize($Media_submit);

    //echo "<pre>";print_r($Media_submit_csap);
    $media_date = db_query("SELECT media_date  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $media_date_csap = unserialize($media_date);

    //echo "<pre>";print_r($media_date_csap);
    $Published = db_query("SELECT Published  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Published_csap = unserialize($Published);

    // echo "<pre>";print_r($Published_csap);
    $if_yes_publication = db_query("SELECT if_yes_publication  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $if_yes_publication_csap = unserialize($if_yes_publication);

    //echo "<pre>";print_r($if_yes_publication_csap);
    $Reach = db_query("SELECT Reach  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Reach_csap = unserialize($Reach);

    // echo "<pre>";print_r($Reach_csap);
    $media_notes = db_query("SELECT media_notes  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $media_notes_csap = unserialize($media_notes);

    //echo "<pre>";print_r($media_date_csap);die();

  $media_type_information_view = db_query("SELECT media_type_information  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

  $form['media_type_information_view'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Type') ,
            '#options' => array(
                '' => "<--select-->",
                'Billboards/Bus Boards, Editorials' => "Billboards/Bus Boards, Editorials",
                'Media Campaign, News Articles' => "Media Campaign, News Articles",
                'Press Conferences' => "Press Conferences",
                'Press Releases' => "Press Releases",
                'PSA’s' => "PSA’s",
                'Radio Interviews' => "Radio Interviews",
                'Television Interview' => "Television Interview",
            ) ,
            '#default_value' => $media_type_information_view,
        );


    $form['media_start'] = array(
        '#markup' => "<div class='responsive_table'><h5>Media</h5><table id='media' class='imp_media_table'>
    <tr><th>Media outlets </th><th>Submitted </th><th>Date </th><th>Published </th><th>If yes, then Publication Date </th><th>Reach </th><th>Notes </th></tr><tr>"
  );

    // media information csap 6
    if (isset($media_company_names) && count($media_company_names) > 0)
    {
        $i = 0;
        foreach ($media_company_names as $mKey => $mNames)
        {

            $form['media_row_start' . $i] = array(
                '#markup' => "<tr>"
            );
            // media information csap 6
            $form['Media_outlet' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#value' => $mNames,
                '#attributes' => array(
                    'readonly' => 'readonly',
                    'name' => "media_outlet[$i]"
                ) ,
                '#suffix' => '</td>',
            );

            $form['Media_submit' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#attributes' => array(
                    'name' => "media_submit[$i]"
                ) ,
                '#default_value' => $Media_submit_csap['media_submit'][$i],
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
            );
            $form['media_date' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#date_format' => 'm/d/Y',
                '#default_value' => $media_date_csap['media_date'][$i],
                '#attributes' => array(
                    'name' => "media_date[$i]"
                ) ,
                '#suffix' => '</td>',
            );
            $form['Published' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#default_value' => $Published_csap['published'][$i],
                '#attributes' => array(
                    'name' => "published[$i]"
                ) ,
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
            );
            $form['if_yes_publication' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#date_format' => 'm/d/Y',
                '#suffix' => '</td>',
                '#default_value' => $if_yes_publication_csap['media_publish'][$i],
                '#attributes' => array(
                    'name' => "media_publish[$i]"
                ) ,
            );
            $form['Reach' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#suffix' => '</td>',
                '#default_value' => $Reach_csap['reach'][$i],
                '#attributes' => array(
                    'name' => "reach[$i]"
                ) ,
            );
            $form['media_notes' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textarea',
                '#suffix' => '</td>',
                '#default_value' => $media_notes_csap['media_notes'][$i],
                '#attributes' => array(
                    'name' => "media_notes[$i]"
                ) ,
            );

            $form['media_row_end' . $i] = array(
                '#markup' => "</tr>"
            );

            $i++;

        }

        $form['media_end'] = array(
            '#markup' => '</tr></table></div>'
        );

  }

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
   $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

           $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

}



   $provide_social_media= 'Social Media';
    // presentation for information dissemination

       if (isset($information_dissemination[$provide_social_media]) && $information_dissemination[$provide_social_media] )
        {

  // social media select files
    $Social_Media_profile_view = db_query("SELECT social_media_profile  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_Media_profile_view_csap = unserialize($Social_Media_profile_view);

    //echo "<pre>";print_r($Social_Media_profile);die();
    //sdfsdf


    $social_Media_submit = db_query("SELECT social_Media_Media_submit  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_Media_submit_csap = unserialize($social_Media_submit);

    //echo "<pre>";print_r($social_Media_submit_csap);
    $social_media_date = db_query("SELECT social_media_date  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_date_csap = unserialize($social_media_date);

    //echo "<pre>";print_r($social_media_date_csap);
    $Social_media_impression = db_query("SELECT Social_Media_media_impression  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_media_impression_csap = unserialize($Social_media_impression);

    // echo "<pre>";print_r($Social_media_impression_csap);
    $social_media_notes = db_query("SELECT Social_Media_media_notes FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_notes_csap = unserialize($social_media_notes);

    //echo "<pre>";print_r($social_media_notes_csap);die();

    // social media information csap 6
    $form['social_media_start'] = array(
        '#markup' => "<div class='responsive_table'><h5>Social Media</h5><table id='social_media' class='imp_media_table'>
        <tr><th>Social Media Outlets </th><th>submitted </th><th>Date </th><th>Impressions </th><th>Notes </th></tr>"
    );

   // print_r($social_media_data);die();

    if (isset($social_media_data) && count($social_media_data) > 0)
    {
        $si = 0;
        foreach ($social_media_data as $mKey => $mNames)
        {
            $form['social_media_row_start' . $si] = array(
                '#markup' => "<tr>"
            );
            $form['Social_Media_profile' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#value' => $mNames,
                '#attributes' => array(
                    'readonly' => 'readonly'
                ) ,
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_profile[$si]"
                ) ,
            );

            $form['Social_Media_Media_submit' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#default_value'=>$social_Media_submit_csap['social_media_submit'][$si],
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_submit[$si]"
                ) ,
            );
            $form['social_media_date' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#date_format' => 'm/d/Y',
                '#suffix' => '</td>',
                '#default_value'=>$social_media_date_csap['social_media_date'][$si],
                '#attributes' => array(
                    'name' => "social_media_date[$si]"
                ) ,
            );
            $form['Social_Media_media_impression' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#default_value'=>$Social_media_impression_csap['social_media_impression'][$si],
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_impression[$si]"
                ) ,
            );
            $form['Social_Media_media_notes' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'textarea',
                '#suffix' => '</td>',
                '#default_value'=>$social_media_notes_csap['social_media_notes'][$si],
                '#attributes' => array(
                    'name' => "social_media_notes[$si]"
                ) ,
            );
            $form['social_media_row_end' . $si] = array(
                '#markup' => "</tr>"
            );
            $si++;

        }


    $form['social_media_end'] = array(
        '#markup' => '</table></div>'
    );
  }





    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }



}

    // presentation steps

    $needle = 'Presentations';

    // presentation for information dissemination

       if (isset($information_dissemination[$needle]) && $information_dissemination[$needle] )
        {

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

            $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

  $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service(HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );
        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );

    $number_adult_csap_6 = db_query("SELECT number_adult_information  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();

      $number_youth_csap_6 = db_query("SELECT number_youth_information  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();

          $form['number_adult_served_information'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_csap_6,
        );


        $form['number_youth_served_information'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_csap_6,
        );


           $form['number_adult_served_presentation'] = array(
            '#type' => 'textfield',
            '#title' => t('How many Adults received written materials at this presentation?') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_presentation,
        );


        $form['number_youth_served_presentation'] = array(
            '#type' => 'textfield',
            '#title' => t('How many Youth received written materials at this presentation?') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_presentation,
        );
        }

        // Distribution steps

    $information_dissemination_materials = 'Distribution of Materials';
    // presentation for information dissemination

       if (isset($information_dissemination[$information_dissemination_materials]) && $information_dissemination[$information_dissemination_materials] )
        {

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

            $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

  $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );
        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );

         $form['number_adult_served_presentation'] = array(
            '#type' => 'textfield',
            '#title' => t('How many Adults received written materials at this presentation?') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_presentation,
        );

        $form['number_youth_served_presentation'] = array(
            '#type' => 'textfield',
            '#title' => t('How many Youth received written materials at this presentation?') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_presentation,
        );
        }


// end of csap 6


    // cacad 7 view start here
    // Enhance skill
    $enhance_skills = db_query("SELECT Enhance_Skills, Enhance_Skills  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enhance_skills_data = implode(" ", $enhance_skills);

    $Enhance_Activity = db_query("SELECT Enhance_Activity, Enhance_Activity  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Enhance_Activity_data = implode(" ", $Enhance_Activity);

    $Enhance_Activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_enhance_skills = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_enhance_skills = implode(" ", $Level_Success);

    if (isset($enhance_skills) && $enhance_skills)
    {
        $form['enhance_skills'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Enhance Skills') ,
            '#default_value' => $enhance_skills_data,
        );
        $form['Enhance_Activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Activity Type:') ,
            '#options' => array(
                '' => "<--select-->",
                'Youth Education Training Programs (providing information / skills)' => "Youth Education Training Programs (providing information / skills)",
                'Parent Education Training Programs' => "Parent Education Training Programs",
                'Teacher / Youth Worker Education and Training Programs' => "Teacher / Youth Worker Education and Training Programs",
                'Community Member Education and Training Programs' => "Community Member Education and Training Programs",
                'Business Training (e.g., responsible beverage service / vendor training [voluntary or mandatory])' => "Business Training (e.g., responsible beverage service / vendor training [voluntary or mandatory])",
                'Other' => "Other",
            ) ,

            '#attributes' => array(
                "onclick" => "enchance_other(this)"
            ) ,
            '#default_value' => $Enhance_Activity_data,
        );
        if (isset($Enhance_Activity_others_for_all) && $Enhance_Activity_others_for_all)
        {
            $form['Enhance_Activity_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $Enhance_Activity_others_for_all,
            );
        }
       // echo $Funding_supports_enhance_skills;die();
            $form['Funding_supports'] = array(
            '#type' => 'checkboxes',
            '#title' => t('Funding supports') ,
            '#options' => array(
                'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
            ) ,
            '#attributes' => ($Funding_supports_enhance_skills=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
        );


    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }


if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

           $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

   $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service(HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );

        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
   $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );

    }



    //providing support
    $Providing_Support = db_query("SELECT Providing_Support, Providing_Support  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Providing_Support_data = implode(" ", $Providing_Support);

    $Providing_Support_activity = db_query("SELECT Providing_Support_activity, Providing_Support_activity  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Providing_Support_activity_data = implode(" ", $Providing_Support_activity);

    $Providing_Support_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Providing_Support = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Providing_Support = implode(" ", $Level_Success);

    if (isset($Providing_Support) && $Providing_Support)
    {
        $form['providing_Support'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Name of activity') ,
            '#default_value' => $Providing_Support_data,
        );
        $form['Providing_Support_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Activity Type:') ,
            '#options' => array(
                '' => "<--select-->",
                'Alternative/drug-free social events' => "Alternative/drug-free social events",
                'Youth organizations/ drop-in centers' => "Youth organizations/ drop-in centers",
                'Organized youth recreation programs (e.g., athletics, arts, outdoor activities)' => "Organized youth recreation programs (e.g., athletics, arts, outdoor activities)",
                'Youth/family community involvement (e.g., school or neighborhood cleanup)' => "Youth/family community involvement (e.g., school or neighborhood cleanup)",
                'Youth/family support groups' => "Youth/family support groups",
                'Other' => "Other",
            ) ,

            '#attributes' => array(
                "onclick" => "provide_other(this)"
            ) ,
            '#default_value' => $Providing_Support_activity_data,
        );
        if (isset($Providing_Support_others_for_all) && $Providing_Support_others_for_all)
        {
            $form['Providing_Support_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $Providing_Support_others_for_all,
            );
        }
        $form['Funding_supports_Providing_Support'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
         '#attributes' => ($Funding_supports_Providing_Support=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
    );

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

           $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

   $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' =>get_state_lists(),
            '#default_value' => $item->states,
        );

        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
   $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );

    }




$number_adult_cadca_7 = db_query("SELECT number_adult_information  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();

$number_youth_cadca_7 = db_query("SELECT number_youth_information  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();

$number_adult_cadca_7_presentation = db_query("SELECT number_adult_presentation  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();

$number_youth_cadca_7_presentation = db_query("SELECT number_youth_presentation  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();



    // provide information
    $Provide_Information = db_query("SELECT Provide_Information, Provide_Information  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Provide_Information_data = implode(" ", $Provide_Information);


    $Provide_Information_activity = db_query("SELECT Provide_Information_activity, Provide_Information_activity  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Provide_Information_activity_data = implode(" ", $Provide_Information_activity);

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Provide_Information = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Provide_Information = implode(" ", $Level_Success);

    if (isset($Provide_Information) && $Provide_Information)
    {
        $form['Provide_Information'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Name of activity') ,
            '#default_value' => $Provide_Information_data,
        );

        $form['Provide_Information_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Activity Type:') ,
            '#options' => array(
                '' => "<--select-->",
                'Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),' => "Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),",
                'Informational materials prepared/ produced' => "Informational materials prepared/ produced",
                'Informational materials disseminated' => "Informational materials disseminated",
                'Social networking (Facebook, Twitter, etc.)' => "Social networking (Facebook, Twitter, etc.)",
                ' Information on DFC Coalition Web site' => " Information on DFC Coalition Web site",
                ' Direct face-to-face information sessions or Special events (e.g., fairs, community celebrations)' => " Direct face-to-face information sessions orSpecial events (e.g., fairs, community celebrations)",
                'Others' => "Others",
            ) ,
            '#attributes' => array(
                "onclick" => "provide_information(this)"
            ) ,
            '#default_value' => $Provide_Information_activity_data,
        );
        $form['Funding_supports'] = array(
              '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
         '#attributes' => ($Funding_supports_Provide_Information=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
    );
    }


      $Provide_Information_activity_media= 'Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_activity_media]) && $Provide_Information_activity[$Provide_Information_activity_media] )
        {

$Media_Campaign_information_cadca = db_query("SELECT Media_Campaign_information FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();
$form['Media_Campaign_information_view_cadca'] = array( '#prefix' => '<div class="select_section">', '#suffix' => '</div>', '#type' => 'select', '#title' => t('Type') , '#options' => array( '' => "<--select-->", 'Media Campaign' => "Media Campaign", 'Media Coverage' => "Media Coverage", ) , '#default_value' => $Media_Campaign_information_cadca, );


 // cadca media


    $Media_outlet_view = db_query("SELECT Media_outlet  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Media_out_cadca = unserialize($Media_outlet_view);

    //echo "<pre>";print_r($Media_out_csap);
    //sdfsdf


    $Media_submit_view = db_query("SELECT Media_submit  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Media_submit_cadca = unserialize($Media_submit_view);

    //echo "<pre>";print_r($Media_submit_csap);
    $media_date_view = db_query("SELECT media_date  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $media_date_cadca = unserialize($media_date_view);

    //echo "<pre>";print_r($media_date_csap);
    $Published_view = db_query("SELECT Published  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Published_cadca = unserialize($Published_view);

    // echo "<pre>";print_r($Published_csap);
    $if_yes_publication_view = db_query("SELECT if_yes_publication  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $if_yes_publication_cadca = unserialize($if_yes_publication_view);

    // print($if_yes_publication_cadca);die();


    //echo "<pre>";print_r($if_yes_publication_csap);
    $Reach_view = db_query("SELECT Reach  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Reach_cadca = unserialize($Reach_view);

     //echo "<pre>";print_r($Media_submit_cadca);die;
    $media_notes_view = db_query("SELECT media_notes  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $media_notes_cadca = unserialize($media_notes_view);

    if($Media_submit_cadca && $Media_submit_cadca['media_submit'][0]){

    $form['media_start'] = array(
        '#markup' => "<div class='responsive_table'><h5>Media</h5><table id='media' class='imp_media_table'>
    <tr><th>Media outlets </th><th>Submitted </th><th>Date </th><th>Published </th><th>If yes, then Publication Date </th><th>Reach </th><th>Notes </th></tr><tr>"
    );

    // media information csap 6
    if (isset($media_company_names) && count($media_company_names) > 0)
    {
        $i = 0;
        foreach ($media_company_names as $mKey => $mNames)
        {

            $form['media_row_start' . $i] = array(
                '#markup' => "<tr>"
            );
            // media information csap 6
            $form['Media_outlet' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#value' => $mNames,
                '#attributes' => array(
                    'readonly' => 'readonly',
                    'name' => "media_outlet[$i]"
                ) ,
                '#suffix' => '</td>',
            );

            $form['Media_submit' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#attributes' => array(
                    'name' => "media_submit[$i]"
                ) ,
                '#default_value' => $Media_submit_cadca['media_submit'][$i],
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
            );
            $form['media_date' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#date_format' => 'm/d/Y',
                '#default_value' => $media_date_cadca['media_date'][$i],
                '#attributes' => array(
                    'name' => "media_date[$i]"
                ) ,
                '#suffix' => '</td>',
            );
            $form['Published' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#default_value' => $Published_cadca['published'][$i],
                '#attributes' => array(
                    'name' => "published[$i]"
                ) ,
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
            );
            $form['if_yes_publication' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#date_format' => 'm/d/Y',
                '#suffix' => '</td>',
                '#default_value' => $if_yes_publication_cadca['media_publish'][$i],
                '#attributes' => array(
                    'name' => "media_publish[$i]"
                ) ,
            );
            $form['Reach' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#suffix' => '</td>',
                '#default_value' => $Reach_cadca['reach'][$i],
                '#attributes' => array(
                    'name' => "reach[$i]"
                ) ,
            );
            $form['media_notes' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textarea',
                '#suffix' => '</td>',
                '#default_value' =>  $media_notes_cadca['media_notes'][$i],
                '#attributes' => array(
                    'name' => "media_notes[$i]"
                ) ,
            );

            $form['media_row_end' . $i] = array(
                '#markup' => "</tr>"
            );

            $i++;

        }

        $form['media_end'] = array(
            '#markup' => '</tr></table></div>'
        );
    }

    }




    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
  $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

          $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }
}



   $Provide_Information_activity_social_media= 'Social networking (Facebook, Twitter, etc.)';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_activity_social_media]) && $Provide_Information_activity[$Provide_Information_activity_social_media] )
        {


      // social media cadca select files
    $Social_Media_profile_view_cadca = db_query("SELECT social_media_profile  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_Media_profile_cadca = unserialize($Social_Media_profile_view_cadca);



    $social_Media_submit_view_cadca = db_query("SELECT social_Media_Media_submit  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_Media_submit_cadca = unserialize($social_Media_submit_view_cadca);

    $social_media_date_view_cadca = db_query("SELECT social_media_date  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_date_cadca = unserialize($social_media_date_view_cadca);

    $Social_media_impression_view_cadca = db_query("SELECT Social_Media_media_impression  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_media_impression_cadca = unserialize($Social_media_impression_view_cadca);

    $social_media_notes_view_cadca = db_query("SELECT Social_Media_media_notes FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_notes_cadca = unserialize($social_media_notes_view_cadca);


    if($social_Media_submit_cadca && $social_Media_submit_cadca['social_media_submit'][0]){
      // social media information csap 6
      $form['social_media_start'] = array(
          '#markup' => "<div class='responsive_table'><h5>Social Media</h5><table id='social_media' class='imp_media_table'>
          <tr><th>Social Media Outlets </th><th>submitted </th><th>Date </th><th>Impressions </th><th>Notes </th></tr>"
      );

      if (isset($social_media_data) && count($social_media_data) > 0)
      {
          $si = 0;
          foreach ($social_media_data as $mKey => $mNames)
          {
              $form['social_media_row_start' . $si] = array(
                  '#markup' => "<tr>"
              );
              $form['Social_Media_profile' . $si] = array(
                  '#prefix' => '<td>',
                  '#type' => 'textfield',
                  '#value' => $mNames,
                  '#attributes' => array(
                      'readonly' => 'readonly'
                  ) ,
                  '#suffix' => '</td>',
                  '#attributes' => array(
                      'name' => "social_media_profile[$si]"
                  ) ,
              );

              $form['Social_Media_Media_submit' . $si] = array(
                  '#prefix' => '<td>',
                  '#type' => 'radios',
                  '#options' => array(
                      'Yes' => "YES",
                      'No' => "No",
                  ) ,
                  '#default_value'=>$social_Media_submit_cadca['social_media_submit'][$si],
                  '#suffix' => '</td>',
                  '#attributes' => array(
                      'name' => "social_media_submit[$si]"
                  ) ,
              );
              $form['social_media_date' . $si] = array(
                  '#prefix' => '<td>',
                  '#type' => 'textfield',
                  '#date_format' => 'm/d/Y',
                  '#suffix' => '</td>',
                  '#default_value'=>$social_media_date_cadca['social_media_date'][$si],
                  '#attributes' => array(
                      'name' => "social_media_date[$si]"
                  ) ,
              );
              $form['Social_Media_media_impression' . $si] = array(
                  '#prefix' => '<td>',
                  '#type' => 'radios',
                  '#options' => array(
                      'Yes' => "YES",
                      'No' => "No",
                  ) ,
                  '#default_value'=>$Social_media_impression_cadca['social_media_impression'][$si],
                  '#suffix' => '</td>',
                  '#attributes' => array(
                      'name' => "social_media_impression[$si]"
                  ) ,
              );
              $form['Social_Media_media_notes' . $si] = array(
                  '#prefix' => '<td>',
                  '#type' => 'textarea',
                  '#suffix' => '</td>',
                  '#default_value'=>$social_media_notes_cadca['social_media_notes'][$si],
                  '#attributes' => array(
                      'name' => "social_media_notes[$si]"
                  ) ,
              );
              $form['social_media_row_end' . $si] = array(
                  '#markup' => "</tr>"
              );
              $si++;

          }
      }

      $form['social_media_end'] = array(
          '#markup' => '</table></div>'
      );
    }

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
  $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

            $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

}



    $provide_prepared_produced = 'Informational materials prepared/ produced';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$provide_prepared_produced]) && $Provide_Information_activity[$provide_prepared_produced] )
        {

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
   $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

             $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

     $form['number_adult_served_information'] = array(
                '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_cadca_7,
        );



        $form['number_youth_served_information'] = array(
                 '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_cadca_7,
        );
}


    $provide_dfc_web_site = ' Information on DFC Coalition Web site';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$provide_dfc_web_site]) && $Provide_Information_activity[$provide_dfc_web_site] )
        {

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
   $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

           $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

      $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );


        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
            '#attributes' => array(
            ' type' => 'number',
            'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );

}


    $provide_materials = 'Informational materials disseminated';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$provide_materials]) && $Provide_Information_activity[$provide_materials] )
        {

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
   $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

  $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );
        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );

            $form['number_adult_served_information'] = array(
                '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_cadca_7,
        );



        $form['number_youth_served_information'] = array(
                 '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_cadca_7,
        );


     $form['number_adult_served_presentation'] = array(
                '#type' => 'textfield',
            '#title' => t('How many Adult received written materials at this presentation?') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_cadca_7_presentation,
        );



        $form['number_youth_served_presentation'] = array(
                 '#type' => 'textfield',
        '#title' => t('How many Youth received written materials at this presentation?') ,
         '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_cadca_7_presentation,
        );

        }

            $provide_Other_edit = 'Others';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$provide_Other_edit]) && $Provide_Information_activity[$provide_Other_edit] )
        {

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

            $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

  $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );
        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
   $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );
        }



         $provide_face_to_face = ' Direct face-to-face information sessions or Special events (e.g., fairs, community celebrations)';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$provide_face_to_face]) && $Provide_Information_activity[$provide_face_to_face] )
        {

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

          $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

  $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );
        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );

      $form['number_adult_served_information'] = array(
                '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_cadca_7,
        );

        $form['number_youth_served_information'] = array(
                 '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_cadca_7,
        );
        }

    // change consequences
    $change_consequences = db_query("SELECT change_consequences, change_consequences  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $change_consequences_data = implode(" ", $change_consequences);

    $change_consequences_activity = db_query("SELECT change_activity, change_activity  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $change_consequences_activity_data = implode(" ", $change_consequences_activity);

    $change_consequences_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_change_consequences = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_change_consequences = implode(" ", $Level_Success);

    $number_adult_Business_design = db_query("SELECT number_adult_Business_design, number_adult_Business_design  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Business_change_consequences = implode(" ", $number_adult_Business_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_change_consequences = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_change_consequences = implode(" ", $enddatetime_physical);


    if (isset($change_consequences) && $change_consequences)
    {
        $form['change_consequences_edit'] = array(
            '#type' => 'textfield',
            '#title' => t('Title of the Change:') ,
            '#default_value' => $change_consequences_data,
        );
        $form['change_consequences_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Type of Change:') ,
            '#attributes' => array(
                "onclick" => "change_activity_others(this)"
            ) ,
            '#options' => array(
                '' => "<--select-->",
                'Strengthening Enforcement' => "Strengthening Enforcement",
                'Strengthening Surveillance' => "Strengthening Surveillance",
                'Recognition Programs' => "Recognition Programs",
                'Publicize Non-Compliance' => "Publicize Non-Compliance",
                'Other' => "Other",
            ) ,
            '#default_value' => $change_consequences_activity_data,
        );

        if (isset($change_consequences_others_for_all) && $change_consequences_others_for_all)
        {
            $form['change_consequences_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $change_consequences_others_for_all,
            );
        }
        $form['Funding_supports_change_consequences'] = array(

              '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
           '#attributes' => ($Funding_supports_change_consequences=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
    );
    }

    // change_access


    $Change_Access = db_query("SELECT Change_Access, Change_Access  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Access_data = implode(" ", $Change_Access);

    $Change_Access_activity = db_query("SELECT Change_Access_activity, Change_Access_activity  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Access_activity_data = implode(" ", $Change_Access_activity);

    $Change_Access_activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Change_Access = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Change_Access = implode(" ", $Level_Success);



    $number_youth_physical_design = db_query("SELECT number_youth_physical_design, number_youth_physical_design  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_youth_Change_Access = implode(" ", $number_youth_physical_design);

    $number_adult_physical_design = db_query("SELECT number_adult_physical_design, number_adult_physical_design  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Change_Access = implode(" ", $number_adult_physical_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_Change_Access = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_Change_Access = implode(" ", $enddatetime_physical);

    if (isset($Change_Access) && $Change_Access)
    {
        $form['Change_Access'] = array(
            '#type' => 'textfield',
            '#title' => t('Title of the Change:') ,
            '#default_value' => $Change_Access_data,
        );
        $form['Change_Access_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Type of Change:') ,
            '#attributes' => array(
                "onclick" => "Change_Access_activity_others(this)"
            ) ,
            '#options' => array(
                '' => "<--select-->",
                'Increased Access to Substance Use Services' => " Increased Access to Substance Use Services",
                'Reducing Home and Social Access to Alcohol and Other Substances' => "Reducing Home and Social Access to Alcohol and Other Substances",
                'Improve supports for service use' => "Improve supports for service use",
                'Improve access through culturally sensitive outreach' => "Improve access through culturally sensitive outreach",
                'Other' => "Other",
            ) ,
            '#default_value' => $Change_Access_activity_data,
        );
        if (isset($Change_Access_activity_others_for_all) && $Change_Access_activity_others_for_all)
        {

            $form['Change_Access_activity_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $Change_Access_activity_others_for_all,
            );
        }
        $form['Funding_supports_Change_Access'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
        '#attributes' => ($Funding_supports_Change_Access=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
    );
    }

    // Change Policies
    $Change_Policies = db_query("SELECT Change_Policies, Change_Policies  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Policies_data = implode(" ", $Change_Policies);

    $Change_Policies_activity = db_query("SELECT Change_Policies_activity, Change_Policies_activity  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Policies_activity_data = implode(" ", $Change_Policies_activity);

    $Change_Policies_activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Change_Policies = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Change_Policies = implode(" ", $Level_Success);

    $number_youth_physical_design = db_query("SELECT number_youth_physical_design, number_youth_physical_design  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_youth_Change_Policies = implode(" ", $number_youth_physical_design);

    $number_adult_physical_design = db_query("SELECT number_adult_physical_design, number_adult_physical_design  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Change_Policies = implode(" ", $number_adult_physical_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_Change_Policies = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_Change_Policies = implode(" ", $enddatetime_physical);

    if (isset($Change_Policies) && $Change_Policies)
    {
        $form['Change_Policies'] = array(
            '#type' => 'textfield',
            '#title' => t('Title of the Change:') ,
            '#default_value' => $Change_Policies_data,
        );
        $form['Change_Policies_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Type of Change:') ,
            '#attributes' => array(
                "onclick" => "Change_Policies_activity_others(this)"
            ) ,
            '#options' => array(
                '' => "<--select-->",
                'Cost: Laws/public policies concerning cost (e.g. alcohol or tobacco tax, fees)' => "Cost: Laws/public policies concerning cost (e.g. alcohol or tobacco tax, fees)",
                'Underage Use: Laws/public policies targeting use, possession, or behavior under the influence of minors' => "Underage Use: Laws/public policies targeting use, possession, or behavior under the influence of minors",
                'Schools: Policies promoting drug-free schools' => "Schools: Policies promoting drug-free schools",
                'Treatment/Prevention: Laws/ public policies promoting treatment or prevention alternatives (e.g. diversion treatment programs for underage substance use offenders)' => "Treatment/Prevention: Laws/ public policies promoting treatment or prevention alternatives (e.g. diversion treatment programs for underage substance use offenders)",
                'Workplace: Policies promoting drug-free workplaces' => "Workplace: Policies promoting drug-free workplaces",
                'Citizen enabling/Liability: Laws/ public policies concerning adult (including parent) social enabling or liability (e.g. social host ordinances)' => "Citizen enabling/Liability: Laws/ public policies concerning adult (including parent) social enabling or liability (e.g. social host ordinances)",
                'Supplier Promotion/ Liability: Laws/ public policies concerning supplier advertising, promotion, liability (e.g. server liability, product placeent, happy hours, drink specials' => "Supplier Promotion/ Liability: Laws/ public policies concerning supplier advertising, promotion, liability (e.g. server liability, product placeent, happy hours, drink specials",
                'mandatory compliance checks, responsible beverage service' => "mandatory compliance checks, responsible beverage service",
                'Outlet Location / Density: Laws/ public policies concerning limitation and restrictions of location and density of alcohol outlets' => "Outlet Location / Density: Laws/ public policies concerning limitation and restrictions of location and density of alcohol outlets",
                'Sales Restrictions: Laws/ publicpolicies concerning restrictions on product sales (e.g., methamphetamine pre-cursor access, alcohol at gas stations)' => "Sales Restrictions: Laws/ publicpolicies concerning restrictions on product sales (e.g., methamphetamine pre-cursor access, alcohol at gas stations)",
                'Other' => "Other",
            ) ,
            '#default_value' => $Change_Policies_activity_data,
        );

        if (isset($Change_Policies_activity_others_for_all) && $Change_Policies_activity_others_for_all)
        {
            $form['Change_Policies_activity_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $Change_Policies_activity_others_for_all,
            );
        }
        $form['Funding_supports_Change_Policies'] = array(
                '#type' => 'checkboxes',
        '#title' => t('Funding supports <span class="form-required" title="This field is required.">*</span>') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
    );
    }

    // physical design
    $Physical_Design = db_query("SELECT Physical_Design, Physical_Design  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Physical_Design_data = implode(" ", $Physical_Design);

    $Physical_Design_activity = db_query("SELECT Physical_Design_activity, Physical_Design_activity  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Physical_Design_activity_data = implode(" ", $Physical_Design_activity);

    $Physical_Design_activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Physical_Design = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Physical_Design = implode(" ", $Level_Success);


    $number_youth_physical_design = db_query("SELECT number_youth_physical_design, number_youth_physical_design  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_youth_Physical_Design = implode(" ", $number_youth_physical_design);

    $number_adult_physical_design = db_query("SELECT number_adult_physical_design, number_adult_physical_design  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Physical_Design = implode(" ", $number_adult_physical_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_Physical_Design = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_Physical_Design = implode(" ", $enddatetime_physical);

   if (isset($Physical_Design) && $Physical_Design)
    {
        $form['Physical_Design'] = array(
            '#type' => 'textfield',
            '#title' => t('Title of the Change:') ,
            '#default_value' => $Physical_Design_data,
        );
        $form['Physical_Design_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Type of Change:') ,
            '#attributes' => array(
                "onclick" => "Physical_Design_activity_others(this)"
            ) ,
            '#options' => array(
                '' => "<--select-->",
                'Identify Physical Design Problems,' => "Identify Physical Design Problems,",
                'Cleanup and Beautification,' => "Cleanup and Beautification,",
                'Improve visibility/ease of surveillance in public places and substance use hotspots,' => "Improve visibility/ease of surveillance in public places and substance use hotspots,",
                'Promote improved signage / advetising/ practices by suppliers,' => "Promote improved signage / advetising/ practices by suppliers,",
                'Identify problem establishments for closure,' => "Identify problem establishments for closure,",
                'Encourage business/ supplier designation of "no alcohol" or "no tobacco" zones' => "Encourage business/ supplier designation of 'no alcohol' or 'no tobacco' zones",
                'Other' => "Other",
            ) ,
            '#default_value' => $Physical_Design_activity_data,
        );

        if (isset($Physical_Design_activity_others_for_all) && $Physical_Design_activity_others_for_all)
        {
            $form['physical_design_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $Physical_Design_activity_others_for_all,
            );
        }

        $form['Funding_supports_Physical_Design'] = array(
               '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
          '#attributes' => ($Funding_supports_Physical_Design=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
    );
    }

    // change consequences
    if (isset($change_consequences) && $change_consequences)
    {
        $form['startdatetime_physical'] = array(
            '#type' => 'textfield',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $startdatetime_change_consequences,
        );
        $form['enddatetime_physical'] = array(
            '#type' => 'textfield',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $enddatetime_change_consequences,
        );
    }

//print_r($startdatetime_Change_Access);die();

    // change access
    if (isset($Change_Access) && $Change_Access)
    {
        $form['startdatetime_physical'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Dateer',
            '#date_format' => 'm/d/Y',
            '#default_value' => $startdatetime_Change_Access,
        );
        $form['enddatetime_physical'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $enddatetime_Change_Access,
        );
    }

    // change policies
    if (isset($Change_Policies) && $Change_Policies)
    {
        $form['startdatetime_physical_Change_Policies'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $startdatetime_Change_Policies,
        );

        $form['enddatetime_physical_Change_Policies'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $enddatetime_Change_Policies,
        );
    }

    // change policies
    if (isset($Physical_Design) && $Physical_Design)
    {
        $form['startdatetime_physical_Physical_Design'] = array(
            '#type' => 'textfield',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $startdatetime_Physical_Design,
        );

        $form['enddatetime_physical_Physical_Design'] = array(
            '#type' => 'textfield',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $enddatetime_Physical_Design,
        );
    }

    if (isset($change_consequences) && $change_consequences)
    {
        $form['number_adult_Business_design'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of adult design') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_adult_Business_change_consequences,
        );


    }

    //Change Access and Barries
    if (isset($Change_Access) && $Change_Access)
    {
        $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );


    }

    //Change /Policies
    if (isset($Change_Policies) && $Change_Policies)
    {
         $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );


    }

    //Physical Design
    if (isset($Physical_Design) && $Physical_Design)
    {
           $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );
    }

    //enhance skills
    if (isset($enhance_skills) && $enhance_skills)
    {
        $form['Level_Success_enhance_skills'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_enhance_skills,
        );
    }

    //Providing Support
    if (isset($Providing_Support) && $Providing_Support)
    {
        $form['Level_Success_Providing_Support'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_Providing_Support,
        );
    }

    //Provide Information
    if (isset($Provide_Information) && $Provide_Information)
    {
        $form['Level_Success_Provide_Information'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_Provide_Information,
        );
    }

    // change consequences
    if (isset($change_consequences) && $change_consequences)
    {
        $form['Level_Success_change_consequences'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_change_consequences,
        );
    }

    // change consequences
    if (isset($Change_Access) && $Change_Access)
    {
        $form['Level_Success_Change_Access'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_Change_Access,
        );
    }

    // Change Policies
    if (isset($Change_Policies) && $Change_Policies)
    {
        $form['Level_Success_Change_Policies'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_Change_Policies,
        );
    }

    // Physical Design
    if (isset($Physical_Design) && $Physical_Design)
    {
        $form['Level_Success_Physical_Design'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_Physical_Design,
        );
    }



        $form['description_of_purpose'] = array(
            '#prefix' => '<hr>',
            '#type' => 'textarea',
            '#title' => t('Description of Purpose') ,
            '#default_value' => $item->description_of_purpose,
        );

        $form['description_of_outcome'] = array(
            '#type' => 'textarea',
            '#title' => t('Description of Outcome') ,
            '#default_value' => $item->description_of_outcome,
        );

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);
    // prerson conducting activities
    if (isset($item->Members_Invloved))
    {
        $members_id_arr = unserialize($item->Members_Invloved);
    }
      $form['volunteerInvolvedToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Volunteers Involved') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

   // echo "<pre>";print_r($item);die;
    $form['volunteerInvolvedToggle']['membersInvolvedStart'] = array(
        '#markup' => '<div class="responsive_table"><label>Volunteers Involved</label><table id="membersInvolvedTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="memSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th><th>Company organization</th> </tr></thead>
<tbody>'
    );
    $membersRow = '';
    foreach ($all_user_details as $membersList)
    {
           if ($membersList['uid'] != "0" && (isset($membersList['roles'][8]) && $membersList['roles'][8] == "volunteers"))
        {
               $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $membersList['uid'])->fetchField(); //echo $last_name_staff."<pre>";print_r($usersList);die;
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $membersList['uid'])->fetchField();
            $org_name = db_query("SELECT field_company_organization_value FROM field_data_field_company_organization WHERE entity_id =" . $membersList['uid'])->fetchField();

            $org_name = db_query("SELECT field_company_organization_value FROM field_data_field_company_organization WHERE entity_id =" . $membersList['uid'])->fetchField();
            $memChkVal = (in_array($membersList['uid'], $members_id_arr['Members_Invloved'])) ? 'checked="checked"' : '';
            $membersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="Members_Invloved[]" value="' . $membersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $memChkVal . '>
              </div>
              </td><td>' . $membersList['name'] . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td><td>' . $membersList['mail'] . '</td>
              <td>' . (($cell_phone != "") ? $cell_phone : "") . '</td><td>' . (($org_name != "") ? $org_name : "") . '</td></tr>';
        }

    }

    $form['volunteerInvolvedToggle']['Members_Invloved'] = array(
        '#markup' => $membersRow
    );

    $form['volunteerInvolvedToggle']['membersInvolvedEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );




   $form['contact_starts'] = array(
      '#markup' => "<div id='person_Conducting_changehidden'>"
  );


     //echo $item->contact_person_conducting;die;

     $form['contactInvolvedToggle'] = array(
         '#type' => 'fieldset',
         '#title' => t('Contact Lists') ,
         '#collapsible' => true,
         '#collapsed' => true,
         '#attributes' => array(
             'class' => array(
                 "planning-fieldset"
             )
         ) ,
     );


  $form['contactInvolvedToggle']['personContact'] = array(
      '#markup' => '<div class="responsive_table"><table id="personConductingTab" class="sticky-enabled table-select-processed">
<thead><tr><th class="select-all"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Phone</th><th>Company Organization</th><th>Primary Sector</th></tr></thead>
<tbody>'
  );
  $contact_lists =db_query("SELECT * from {estar_contacts_details}")->fetchAll();
  $usersRow = '';
 if(isset($contact_lists) && count($contact_lists)>0){
  foreach ($contact_lists as $usersList)
  { //echo "<pre>";print_r($all_user_details);die;


    $person_conducting_data = db_query("SELECT contact_person_conducting,  contact_person_conducting  FROM {implementation_details} WHERE implementation_id= " . $implementation_id)->fetchField();

        $contact_id_arr = unserialize($person_conducting_data);



//print_r($contact_id_arr);die()

     $contactChkVal = (in_array($usersList->contact_id, $contact_id_arr['contact_person_conducting'])) ? 'checked="checked"' : '';

      if (isset($usersList) && $usersList!="")
      {
          $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
              <label><input id="mouManagerId1" name="contact_person_conducting[]" value="' . $usersList->contact_id. '" class="form-checkbox required " type="checkbox" title="contact" '.$contactChkVal.'></label>

            </td><td>' . (($usersList->first_name != "") ? $usersList->first_name : "") . '</td>
            <td>' . (($usersList->last_name != "") ? $usersList->last_name : "") . '</td>
            <td>' . (($usersList->email != "") ? $usersList->email : "") . '</td>
            <td>' . (($usersList->phone != "") ? $usersList->phone : "") . '</td>
            <td>' . (($usersList->organization != "") ? $usersList->organization : "") . '</td>
            <td>' . (($usersList->primary_sector_select != "") ? $usersList->primary_sector_select : "") . '</td></tr>';
      }

  }
}else{
  $usersRow='<tr><td colspan="6">Contacts list is empty.</td></tr>';
}



  $form['contactInvolvedToggle']['personContactContent'] = array(
      '#markup' => $usersRow,
  );


  $form['contactInvolvedToggle']['personContactEnd'] = array(
      '#markup' => '</tbody></table></div>'
  );
  $form['contactInvolvedToggle']['person_Contact_end'] = array(
      '#markup' => '</div>'
  );



    if (isset($item->Donation_select) && $item->Donation_select != '')
    {
        $Donation_select_id = $item->Donation_select;
    }

    if (isset($item->Monetary_Value) && $item->Monetary_Value != '')
    {
        $Monetary_Value_id = $item->Monetary_Value;
    }

    if (isset($item->Comment) && $item->Comment != '')
    {
        $Comment_id = $item->Comment;
    }

    $Donation_data = unserialize($Donation_select_id);

    $Monetary_Value_data = unserialize($Monetary_Value_id);

    $Comment_data = unserialize($Comment_id);

    //echo "<pre>";print_r($Monetary_Value_data);die;
    $donation_data = "";
    if (isset($Donation_data['Donation_select']) && count($Donation_data['Donation_select']) > 0)
    {
        foreach ($Donation_data['Donation_select'] as $key => $value)
        {

            $donation_data .= '<tr>
          <td class="table_heading">
            <div id="remove-Donation' . $key . '" class="new_data">
              <div class="remove-edit' . $key . '" >
                <div class="select_section capacity_select_Section">
                   <select name="Donation_select[' . $key . ']" id="edit-' . $key . '" class="form-select">
                     <option value="Materials" ' . (($value == "Materials") ? "selected=selected" : "") . '>Materials</option>
                     <option value="Food and refreshments" ' . (($value == "Food and refreshments") ? "selected=selected" : "") . '>Food and refreshments</option>
                     <option value="Marketing" ' . (($value == "Marketing") ? "selected=selected" : "") . '>Marketing</option>
                     <option value="Support" ' . (($value == "Support") ? "selected=selected" : "") . '>Support</option>
                      <option value="Other" ' . (($value == "Other") ? "selected=selected" : "") . '>Other</option>
                   </select>
                </div>
              </div>
            </div>
          </td>';

            $donation_data .= '<td class="table_heading">
          <div id="remove-Monetary' . $key . '">
            <div class="remove-edit' . $key . '">
              <input name="Monetary_Value[' . $key . ']" id="edit-' . $key . '" value="' . $Monetary_Value_data['Monetary_Value'][$key] . '" size="60" maxlength="128" class="form-text" type="text">
            </div>
          </div>
        </td>';

            $donation_data .= '<td class="table_heading">
          <div id="remove-Comment' . $key . '" class="remove-edit' . $key . '">
            <div class="form-item form-type-textarea form-item-' . $key . '">
              <div class="form-textarea-wrapper resizable textarea-processed resizable-textarea">
                <textarea name="Comment[' . $key . ']" id="edit-' . $key . '" cols="60" rows="5" class="form-textarea">' . $Comment_data['Comment'][$key] . '</textarea>
              </div>
            </div>
          </div>
        </td>';
            $donation_data .= '<td class="table_heading">
          <div  class="button button_remove">
            <input type="button" id="remove-edit' . $key . '" class="remove-edit btn-danger" onclick="donation(this,' . $key . ')" value="Remove">
          </div>
        </td>
      </tr>';

        }
    }

    $form['Donation1'] = array(
        '#markup' => '<div class="responsive_table"><label>Donation</label><table id="myTableedit" class=" table order-list-edit">
    <thead>
        <tr>
            <th>Donation</th>
            <th>Monetary Value</th>
            <th>Comment</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody>
' . $donation_data . '
    </tbody>
    </table>
'
    );

    $form['donatio_table'] = array(
        '#markup' => '</tbody></table></div>
    <div id="addrowedit" class="button button_addmore"><input type="button" class="btn btn-lg btn-block add_more_btn"  value="Add More field" /></div>',
    );

    if (isset($item->Attachments_fid) && $item->Attachments_fid != '')
    {
        $upload_ids = unserialize($item->Attachments_fid);
    } //echo "<pre>";print_r($upload_ids);die;


    $form['Attachments-title'] = array(
        '#markup' => ''
    );

    $form['Attachments_files'] = array(
        '#prefix' => '<div class="responsive_table"><label>Attachment</label>
    <table id="myTable2" class="table order-list-att">
      <tr><th>' . t('Attachments') . '</th><th>' . t('Comments') . '</th></tr>' . '<tr><td class="table_heading">
    ',
    );

    if (isset($upload_ids['upload_id']) && count($upload_ids['upload_id']) > 0)
    {

        foreach ($upload_ids['upload_id'] as $uploadId)
        {
            $fid = $uploadId;
            $file_upload_details = db_query("SELECT * FROM {file_managed} WHERE fid = " . $fid)->fetchAll();

            $fURI = $file_upload_details[0]->uri;
            $fname = $file_upload_details[0]->filename;
            $fileURI = file_create_url($fURI);
            if ($fname != "")
            {
                $form['Attachments_fid' . $uploadId] = array(
                    '#markup' => t('<div class="upload_data"><a href=' . $fileURI . '><i class="fa fa-cloud-download" aria-hidden="true"></i>
 ' . $fname . '</a></div>') ,
                );
            }
        }

    }

    $form['Attachments_fid'] = array(
        '#type' => 'managed_file_multiple',
        '#title' => 'Upload files',
        '#upload_validators' => array(
            'file_validate_extensions' => array(
                'pdf doc docx png gif jpg  xls ppt'
            )
        ) ,
        '#upload_location' => 'public://capacity_documents/',
        //'#description' => t('<a href='.$fileURI.'>'.$fname.'</a> <br>Please use the Choose file button to attach a response document<br><strong>Allowed extensions: pdf doc docx</strong>.'),
        '#prefix' => '<tr><td class="table_heading">',
        '#suffix' => '</td>',
    );
    $form['Attachments_notes'] = array(
        '#prefix' => '<td class="table_heading">',
        '#type' => 'textarea',
        '#rows' => 5,
        '#cols' => 30,
        '#suffix' => '</td></tr>
        </table></div>
    <td colspan="5" style="text-align: left;">
                <input style="display:none;" type="button" class="btn btn-lg btn-block " id="addrow-list" value="Add More field" />
            </td>
    ', // Don't forget to close the table rows, and finally the table.
        '#default_value' => $item->Attachments_notes,
    );

    /*$form['pending_field'] = array(
        '#type' => 'checkboxes',
       //'#title' => t('Pending'),
       '#options' => array('1'=>"Pending"),
       '#attributes' => ($item->is_pending=="1")?array('checked' => 'checked'):"",
    );*/

    $form['signature'] = array(
        '#type' => 'radios',
        '#title' => t('Signature') ,
        '#options' => array(
            'yes' => "Pending",
            '1' => "I certify that the information above is true, accurate and correct to the best of my knowledge. "
        ) ,
         '#attributes' => array(
          'required' => true,
             ),
        '#default_value' => ($item->signature == "0") ? $item->is_pending : $item->signature,
    );

    $form['attachment_upload_id'] = array(
        '#type' => "hidden",
        '#value' => $item->Attachments_fid,
    );

    $form['implementation_id']=array(
      '#type'=>"hidden",
      '#value'=>$item->implementation_id,
    );


    $form['next_btn_div_start1'] = array(
        '#markup' => "<div class='next_button'>"
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Update') ,
    );
    $form['next_btn_div_end1'] = array(
        '#markup' => "</div>"
    );

    return $form;
}


   // implementation edit end here


    // implementation view start here


function implementation_item_view_form($form, &$form_state, $item)
{

    $form = array();
    $form['#tree'] = true;
    $form['#attributes']['enctype'] = 'multipart/form-data';

   if(isset($item->is_pending) && $item->is_pending=="yes"){
    drupal_set_title("PENDING: Implementation View Page");
  }else{
    drupal_set_title("Implementation View Page");
  }
    $form['#item'] = $item;




    $contributing_factor = db_query("SELECT tid, name FROM {taxonomy_term_data} WHERE vid = 12")->fetchAll();

    $interventions = db_query("SELECT tid, name FROM {taxonomy_term_data} WHERE vid = 28")->fetchAll();

    $query = db_select('planning_details', 'a');
    $query->fields('a', array(
        'planning_id',
        'title'
    ));
    $query->orderBy('a.title', 'ASC');
    $planning_lists = $query->execute()
        ->fetchAll();
    $planCount = 0;
    $lmCount = 0;
    foreach ($planning_lists as $plankey => $planVal)
    {
        $plan_id = $planVal->planning_id;
        $plan_title = $planVal->title;
        $planning_data_lists = db_query("SELECT * FROM {planning_details} WHERE planning_id = " . $plan_id)->fetchAll();

        $chkSerialize = @unserialize($planning_data_lists[0]->contributing_factor);
        $stInvCount = "0_0";
        if ($chkSerialize !== false)
        {
            $contributingFactor = unserialize($planning_data_lists[0]->contributing_factor);
            $interventionsCheckedItems = unserialize($planning_data_lists[0]->interventions);
            $logicModelCount = count($contributingFactor['contributingCollection']);
            //echo $logicModelCount."<pre>";print_r($contributingFactor);echo "<pre>";print_r($interventionsCheckedItems);die;
            $conSelectedItems = "";
            $intSelectedItems = "";
            $unCFValues = unserialize($item->contributing_factor_models);
            $unINValues = unserialize($item->intervention_models); //echo "<pre>";print_r($unCFValues);die;
            $logicModelTitle = $item->logic_model_title_link;

            $form['table_count_id'] = array(
                '#type' => "hidden",
                '#value' => ($logicModelCount - 1) ,
                '#attributes' => array(
                    "id" => "LogicModelCountId"
                )
            );

            //echo "<pre>";print_r($contributingFactor);echo "<pre>";print_r($interventionsCheckedItems);die;

        }
        else
        {
            $ichange = $plankey . '_' . $lmCount;
            $unCFValues = unserialize($item->contributing_factor_models);
            $unINValues = unserialize($item->intervention_models);
            $contributingFactor = $planning_data_lists[0]->contributing_factor;
            $interventionsCheckedItems = explode(",", $planning_data_lists[0]->interventions);
            $form['table_count_id'] = array(
                '#type' => "hidden",
                '#value' => 0,
                '#attributes' => array(
                    "id" => "LogicModelCountId"
                )
            );

            $planCount++;
            $lmCount++;

        }
        $intervID=$item->intervention_id;
        $conFacID=$item->contributing_factor_id;
        $stInvCount = "0_0";
        $form['planningLogicModel']['contributing_intervention'] = array(
            "#title" => 'Logic model',
            "#markup" => '
      <div id="firstTable' . $plankey . '" class="heading_tag">
      <h3>' . $logicModelTitle . ' </h3>

  <div class="implementation-print" onclick="myFunction()"> <i class="fa fa-file-pdf-o fa-lg" aria-hidden="true"></i> Download as PDF</div>

      <div class="select_btn" style="display:none;">
       <div class="form-checkboxes">
        <div class="form-item form-type-checkbox">
          <label><input id="checkAllLogicModel" type="checkbox" value="" class="form-checkbox" name="contributing_factor[]" onchange="checkAllRadioFunc(this,' . $planCount . ')"> Select all/Select none</label>
        </div>
      </div>
    </div>
  </div>
  <div class="logicmodel_inter_con" id="logicmodel_inter_con">
          <div class="capacity_logic_section">
               <div id="conFactorTab" class="conFactorTab">
          <div class="form-type-checkboxes">
            <label class="heading_label">Contributing Factor</label>
                            <span>' . get_taxonomy_term_name($conFacID) . '</span>
                    </div>
        </div>
        <div id="intervTab" class="interventions intervTab">
          <div class="form-type-checkboxes">
            <label class="heading_label">Interventions</label>
                           <span>' . get_taxonomy_term_name($intervID) . '</span>
                    </div>
        </div>
            </div>
        </div>
</table>'
        );

    }

    if (isset($item->implementation_id) && $item->implementation_id != '')
    {
        $implementation_id = $item->implementation_id;
    }
  if (isset($item->Strategies) && $item->Strategies != '')
    {
        $Strategies = $item->Strategies;
    }

    $form['Strategies'] = array(
        '#markup' => '<div class="capacity_view_details1"><h5>Strategies</h5><p>' . $Strategies . '</p></div>',
    );


    if (isset($item->csap_6) && $item->csap_6 != '')
    {
        $csap_6 = $item->csap_6;
    }

    if (isset($item->csap_7) && $item->csap_7 != '')
    {
        $csap_7 = $item->csap_7;
    }
    // print_r($csap_6);die();
    if (isset($csap_6) && $csap_6)
    {
        $form['csap_6'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>CSAP 6</h5><p>' . $csap_6 . '</p></div>',
        );
    }

     else if (isset($csap_7) && $csap_7)
    {
        $form['cadca_7'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>CADCA 7</h5><p>' . $csap_7 . '</p></div>',
        );
    }



    $Alternative_Activities = db_query("SELECT Alternative_Activities, Alternative_Activities  FROM {alternative_activitity} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Alternative_Activities_data = implode(" ", $Alternative_Activities);

      if (isset($Alternative_Activities) && $Alternative_Activities)
    {
        $form['Alternative_Activities_edit'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Alternative Activities</h5><p>' . $Alternative_Activities_data . '</p></div>',
        );

            $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );



        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );


        $Length_of_services = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Length of services</h5><p>' . $Length_of_services . '</p></div>',
            '#default_value' => $item->Length_of_services,
        );

      $location = $item->location;
         $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        if (isset($item->address_1) && $item->address_1 != '')
    {
        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );
    }

        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );



        $city = $item->city;
        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );



        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );



        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );

        $number_adult_served = $item->number_adult_served;
        $form['number_adult_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_served . '</p></div>',
        );

        $number_youth_served = $item->number_youth_served;
        $form['number_youth_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of youth Attending</h5><p>' . $number_youth_served . '</p></div>',
        );

    }




   $Community_based_Process = db_query("SELECT Community_based_Process, Community_based_Process  FROM {community_based} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();

    $Community_based_Process_data = implode(" ", $Community_based_Process);


   if (isset($Community_based_Process) && $Community_based_Process)
    {
        $form['Community_based_Process_edit'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Recruitment Effort</h5><p>' . $Community_based_Process_data . '</p></div>',
        );


                    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );



        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );


        $Length_of_services = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Length of services</h5><p>' . $Length_of_services . '</p></div>',
            '#default_value' => $item->Length_of_services,
        );

      $location = $item->location;
         $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        if (isset($item->address_1) && $item->address_1 != '')
    {
        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );
    }


        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );



        $city = $item->city;
        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );



        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );



        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );

        $number_adult_served = $item->number_adult_served;
        $form['number_adult_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_served . '</p></div>',
        );

        $number_youth_served = $item->number_youth_served;
        $form['number_youth_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of youth Attending</h5><p>' . $number_youth_served . '</p></div>',
        );

    }


    $education_csap = db_query("SELECT education_csap, education_csap  FROM {education} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $education_csap_data = implode(" ", $education_csap);



     if (isset($education_csap) && $education_csap)
    {
        $form['education_csap_edit'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Education</h5><p>' . $education_csap_data . '</p></div>',
        );


                    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );



        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );


        $Length_of_services = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Length of services</h5><p>' . $Length_of_services . '</p></div>',
            '#default_value' => $item->Length_of_services,
        );

      $location = $item->location;
         $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        if (isset($item->address_1) && $item->address_1 != '')
    {
        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );
    }


        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );



        $city = $item->city;
        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );



        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );



        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );

        $number_adult_served = $item->number_adult_served;
        $form['number_adult_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_served . '</p></div>',
        );

        $number_youth_served = $item->number_youth_served;
        $form['number_youth_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of youth Attending</h5><p>' . $number_youth_served . '</p></div>',
        );


    }



        $environmental = db_query("SELECT environmental, environmental  FROM {environmental} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $environmental_data = implode(" ", $environmental);

              if (isset($environmental) && $environmental)
    {
        $form['environmental_edit'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Environmental</h5><p>' . $environmental_data . '</p></div>',
        );

            $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );


        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );


      $location = $item->location;
         $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        if (isset($item->address_1) && $item->address_1 != '')
    {
        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );
    }


        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );



        $city = $item->city;
        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );



        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );



        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );


    }


      $Information_Dissemination_csap6 = db_query("SELECT Information_Dissemination_csap6, Information_Dissemination_csap6  FROM {information_dissemination_details} WHERE  implementation_id= " . $implementation_id)->fetchAllKeyed();
     $Information_Dissemination_csap6_data = implode(" ", $Information_Dissemination_csap6);
     $information_dissemination = db_query("SELECT information_dissemination, information_dissemination  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
      $information_dissemination_data = implode(" ", $information_dissemination);

     // print_r($information_dissemination);die();

      $provide_media= 'Media';

     if (isset($information_dissemination[$provide_media]) && $information_dissemination[$provide_media] )
     {

       $form['information_dissemination_csap6'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Information dissemination</h5><p>' . $Information_Dissemination_csap6_data . '</p></div>',
        );
        $form['information_dissemination_edit'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Information dissemination type</h5><p>' . $information_dissemination_data . '</p></div>',
        );

        $media_type_information_view = db_query("SELECT media_type_information  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

        $form['media_type_information_view'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Type</h5><p>' . $media_type_information_view . '</p></div>',
        );


      $Media_outlet = db_query("SELECT Media_outlet  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

     $Media_out_csap = unserialize($Media_outlet);

     //echo "<pre>";print_r($Media_out_csap);
     //sdfsdf


     $Media_submit = db_query("SELECT Media_submit  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

     $Media_submit_csap = unserialize($Media_submit);

     //echo "<pre>";print_r($Media_submit_csap);
     $media_date = db_query("SELECT media_date  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

     $media_date_csap = unserialize($media_date);

     //echo "<pre>";print_r($media_date_csap);
     $Published = db_query("SELECT Published  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

     $Published_csap = unserialize($Published);

     // echo "<pre>";print_r($Published_csap);
     $if_yes_publication = db_query("SELECT if_yes_publication  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

     $if_yes_publication_csap = unserialize($if_yes_publication);

     //echo "<pre>";print_r($if_yes_publication_csap);
     $Reach = db_query("SELECT Reach  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

     $Reach_csap = unserialize($Reach);

     // echo "<pre>";print_r($Reach_csap);
     $media_notes = db_query("SELECT media_notes  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

     $media_notes_csap = unserialize($media_notes);


     if (isset($Media_out_csap['media_outlet']) && count($Media_out_csap['media_outlet']) > 0)
     {

        $media_view_data = "";

        foreach ($Media_out_csap['media_outlet'] as $key => $value)
        {
            $media_view_data .= "<tr><td>" . $value . "</td>";
            $media_view_data .= "<td>" . $Media_submit_csap['media_submit'][$key] . "</td>";
            $media_view_data .= "<td>" . $media_date_csap['media_date'][$key] . "</td>";
            $media_view_data .= "<td>" . $Published_csap['published'][$key] . "</td>";
            $media_view_data .= "<td>" . $if_yes_publication_csap['media_publish'][$key] . "</td>";
            $media_view_data .= "<td>" . $Reach_csap['reach'][$key] . "</td>";
            $media_view_data .= "<td>" . $media_notes_csap['media_notes'][$key] . "</td></tr>";

        }
        //print_r($media_view_data);die();
        $form['media_csap6'] = array(
            '#markup' => '<div class="responsive_table"><h5>Media</h5><table id="myTable" class=" table order-list">
     <thead>
       <tr><th>Media outlets </th><th>Submitted </th><th>Date </th><th>Published </th><th>If yes, then Publication Date </th><th>Reach </th><th>Notes </th></tr>
     </thead>
     <tbody>
     ' . $media_view_data . '
     </tbody>
     </table></div>
'
         );

     }


    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    if (isset($item->personConductingContent) && $item->personConductingContent)
    {

    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
}

      }




      $provide_social_media= 'Social Media';

     if (isset($information_dissemination[$provide_social_media]) && $information_dissemination[$provide_social_media] )
     {


         $form['information_dissemination_csap6'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Information dissemination</h5><p>' . $Information_Dissemination_csap6_data . '</p></div>',
        );

              $form['information_dissemination_edit'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Information dissemination type</h5><p>' . $information_dissemination_data . '</p></div>',
        );



    // social media select files
    $Social_Media_profile_view = db_query("SELECT social_media_profile  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_Media_profile_view_csap = unserialize($Social_Media_profile_view);

    //echo "<pre>";print_r($Social_Media_profile);die();
    //sdfsdf


    $social_Media_submit = db_query("SELECT social_Media_Media_submit  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_Media_submit_csap = unserialize($social_Media_submit);

    //echo "<pre>";print_r($social_Media_submit_csap);
    $social_media_date = db_query("SELECT social_media_date  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_date_csap = unserialize($social_media_date);

    //echo "<pre>";print_r($social_media_date_csap);
    $Social_media_impression = db_query("SELECT Social_Media_media_impression  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_media_impression_csap = unserialize($Social_media_impression);

    // echo "<pre>";print_r($Social_media_impression_csap);
    $social_media_notes = db_query("SELECT Social_Media_media_notes FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_notes_csap = unserialize($social_media_notes);

    //echo "<pre>";print_r($social_media_notes_csap);die();


     //social media  view starts here


    if (isset($Social_Media_profile_view_csap['social_media_profile']) && count($Social_Media_profile_view_csap['social_media_profile']) > 0)
    {

        $social_media_view_data = "";

        foreach ($Social_Media_profile_view_csap['social_media_profile'] as $key => $value)
        {
            $social_media_view_data .= "<tr><td>" . $value . "</td>";
            $social_media_view_data .= "<td>" . $social_Media_submit_csap['social_media_submit'][$key] . "</td>";
            $social_media_view_data .= "<td>" . $social_media_date_csap['social_media_date'][$key] . "</td>";
            $social_media_view_data .= "<td>" . $Social_media_impression_csap['social_media_impression'][$key] . "</td>";
            $social_media_view_data .= "<td>" . $social_media_notes_csap['social_media_notes'][$key] . "</td>";

        }
        //print_r($media_view_data);die();
        $form['social_media_csap6'] = array(
            '#markup' => '<div class="responsive_table"><h5>Social Media</h5><table id="myTable" class=" table order-list">
    <thead>
      <tr><th>Social Media Outlets </th><th>submitted </th><th>Date </th><th>Impressions </th><th>Notes </th></tr>
    </thead>
    <tbody>
    ' . $social_media_view_data . '
    </tbody>
    </table></div>
'
        );

    }

    // social media cadca select files
    $Social_Media_profile_view_cadca = db_query("SELECT social_media_profile  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_Media_profile_cadca = unserialize($Social_Media_profile_view_cadca);

//echo "<pre>";print_r($Social_Media_profile_cadca);die();
    //sdfsdf

    $social_Media_submit_view_cadca = db_query("SELECT social_Media_Media_submit  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_Media_submit_cadca = unserialize($social_Media_submit_view_cadca);

    $social_media_date_view_cadca = db_query("SELECT social_media_date  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_date_cadca = unserialize($social_media_date_view_cadca);

    //echo "<pre>";print_r($social_media_date_csap);
    $Social_media_impression_view_cadca = db_query("SELECT Social_Media_media_impression  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_media_impression_cadca = unserialize($Social_media_impression_view_cadca);

    // echo "<pre>";print_r($Social_media_impression_csap);
    $social_media_notes_view_cadca = db_query("SELECT Social_Media_media_notes FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_notes_cadca = unserialize($social_media_notes_view_cadca);

    //echo "<pre>";print_r($social_media_notes_csap);die();
    if (isset($Social_Media_profile_cadca['social_media_profile']) && count($Social_Media_profile_cadca['social_media_profile']) > 0)
    {

        $Social_Media_profile_view_cadca = "";

        foreach ($Social_Media_profile_cadca['social_media_profile'] as $key => $value)
        {
            $Social_Media_profile_view_cadca .= "<tr><td>" . $value . "</td>";
            $Social_Media_profile_view_cadca .= "<td>" . $social_Media_submit_cadca['social_media_submit'][$key] . "</td>";
            $Social_Media_profile_view_cadca .= "<td>" . $social_media_date_cadca['social_media_date'][$key] . "</td>";
            $Social_Media_profile_view_cadca .= "<td>" . $Social_media_impression_cadca['social_media_impression'][$key] . "</td>";
            $Social_Media_profile_view_cadca .= "<td>" . $social_media_notes_cadca['social_media_notes'][$key] . "</td></tr>";
        }

        $form['social_media_cadca'] = array(
            '#markup' => '<div class="responsive_table"><h5>Social Media</h5><table id="myTable" class=" table order-list">
    <thead>
      <tr><th>Social Media Outlets </th><th>submitted </th><th>Date </th><th>Impressions </th><th>Notes </th></tr>
    </thead>
    <tbody>
    ' . $Social_Media_profile_view_cadca. '
    </tbody>
    </table></div>
'
        );

    }


    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    if (isset($item->personConductingContent) && $item->personConductingContent)
    {

    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
}


     }




      $provide_Presentations= 'Presentations';

     if (isset($information_dissemination[$provide_Presentations]) && $information_dissemination[$provide_Presentations] )
     {


    $form['information_dissemination_csap6'] = array(
    '#markup' => '<div class="capacity_view_details1"><h5>Title: Information dissemination</h5><p>' . $Information_Dissemination_csap6_data . '</p></div>',
        );

    $form['information_dissemination_edit'] = array(
     '#markup' => '<div class="capacity_view_details1"><h5>Information dissemination type</h5><p>' . $information_dissemination_data . '</p></div>',
        );



    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );


        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );

          $Length_of_services = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Length of services</h5><p>' . $Length_of_services . '</p></div>',
            '#default_value' => $item->Length_of_services,
        );
          $location = $item->location;
          $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );


        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );

        $city = $item->city;

        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );

        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );


        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );

      $number_adult_csap_6 = db_query("SELECT number_adult_information  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();

      $number_youth_csap_6 = db_query("SELECT number_youth_information  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();


      $number_adult_presentation = db_query("SELECT number_adult_presentation  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();

      $number_youth_presentation = db_query("SELECT number_youth_presentation  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();


        $form['number_adult_served_information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_csap_6 . '</p></div>',
        );

        $form['number_youth_served_information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of Youth Attending</h5><p>' . $number_youth_csap_6 . '</p></div>',
        );


        $form['number_adult_served_presentation'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>How many Adults received written materials at this presentation?</h5><p>' . $number_adult_presentation . '</p></div>',
        );

        $form['number_youth_served_presentation'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>How many Youth received written materials at this presentation?</h5><p>' . $number_youth_presentation . '</p></div>',
        );

     }



      $provide_Distribution= 'Distribution of Materials';

     if (isset($information_dissemination[$provide_Distribution]) && $information_dissemination[$provide_Distribution] )
     {


    $form['information_dissemination_csap6'] = array(
    '#markup' => '<div class="capacity_view_details1"><h5>Title: Information dissemination</h5><p>' . $Information_Dissemination_csap6_data . '</p></div>',
        );

    $form['information_dissemination_edit'] = array(
     '#markup' => '<div class="capacity_view_details1"><h5>Information dissemination type</h5><p>' . $information_dissemination_data . '</p></div>',
        );



    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );


        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );

          $Length_of_services = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Length of services</h5><p>' . $Length_of_services . '</p></div>',
            '#default_value' => $item->Length_of_services,
        );
          $location = $item->location;
          $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );


        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );

        $city = $item->city;

        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );

        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );


        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );

      $number_adult_csap_6 = db_query("SELECT number_adult_information  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();

      $number_youth_csap_6 = db_query("SELECT number_youth_information  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();


      $number_adult_presentation = db_query("SELECT number_adult_presentation  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();

      $number_youth_presentation = db_query("SELECT number_youth_presentation  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();


        $form['number_adult_served_information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_csap_6 . '</p></div>',
        );

        $form['number_youth_served_information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of Youth Attending</h5><p>' . $number_youth_csap_6 . '</p></div>',
        );


        $form['number_adult_served_presentation'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>How many Adults received written materials at this presentation?</h5><p>' . $number_adult_presentation . '</p></div>',
        );

        $form['number_youth_served_presentation'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>How many Youth received written materials at this presentation?</h5><p>' . $number_youth_presentation . '</p></div>',
        );


     }

     // cacad 7 view start here
    // Enhance skill
    $enhance_skills = db_query("SELECT Enhance_Skills, Enhance_Skills  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enhance_skills_data = implode(" ", $enhance_skills);


     // cadca 7 view start here



    if (isset($enhance_skills) && $enhance_skills)
    {

    $Enhance_Activity = db_query("SELECT Enhance_Activity, Enhance_Activity  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Enhance_Activity_data = implode(" ", $Enhance_Activity);

    $Enhance_Activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_enhance_skills = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_enhance_skills = implode(" ", $Level_Success);



        $form['enhance_skills'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Enhance skills</h5><p>' . $enhance_skills_data . '</p></div>',
        );
        $form['Enhance_Activity'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Type of Activity</h5><p>' . $Enhance_Activity_data . '</p></div>',
        );
        if (isset($Enhance_Activity_others_for_all) && $Enhance_Activity_others_for_all)
        {
            $form['Enhance_Activity_others_for_all'] = array(
                '#markup' => '<div class="capacity_view_details1"><h5>Others</h5><p>' . $Enhance_Activity_others_for_all . '</p></div>',
            );
        }
        $form['Funding_supports'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Funding supports</h5><p>' . $Funding_supports_enhance_skills . '</p></div>',
        );


    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );

        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );

         $Length_of_services = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Length of services</h5><p>' . $Length_of_services . '</p></div>',
            '#default_value' => $item->Length_of_services,
        );

         $location = $item->location;

        $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );


        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );


        $city = $item->city;

        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );

        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );

        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );


        $number_adult_served = $item->number_adult_served;
        $form['number_adult_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_served . '</p></div>',
        );


        $number_youth_served = $item->number_youth_served;
        $form['number_youth_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of youth Attending</h5><p>' . $number_youth_served . '</p></div>',
        );


           $form['Level_Success_enhance_skills'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_enhance_skills . '</p></div>',
        );
    }


     //providing support
    $Providing_Support = db_query("SELECT Providing_Support, Providing_Support  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Providing_Support_data = implode(" ", $Providing_Support);



    if (isset($Providing_Support) && $Providing_Support)
    {

         $Providing_Support_activity = db_query("SELECT Providing_Support_activity, Providing_Support_activity  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Providing_Support_activity_data = implode(" ", $Providing_Support_activity);

    $Providing_Support_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Providing_Support = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Providing_Support = implode(" ", $Level_Success);

        $form['providing_Support'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Providing Support</h5><p>' . $Providing_Support_data . '</p></div>',
        );
        $form['Providing_Support_activity'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Type of Activity</h5><p>' . $Providing_Support_activity_data . '</p></div>',
        );
        if (isset($Providing_Support_others_for_all) && $Providing_Support_others_for_all)
        {
            $form['Providing_Support_others_for_all'] = array(
                '#markup' => '<div class="capacity_view_details1"><h5>Others</h5><p>' . $Providing_Support_others_for_all . '</p></div>',
            );
        }
        $form['Funding_supports'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Funding supports</h5><p>' . $Funding_supports_Providing_Support . '</p></div>',
        );


        $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );

        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );

         $Length_of_services = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Length of services</h5><p>' . $Length_of_services . '</p></div>',
            '#default_value' => $item->Length_of_services,
        );

         $location = $item->location;

        $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );


        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );


        $city = $item->city;

        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );

        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );

        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );


        $number_adult_served = $item->number_adult_served;
        $form['number_adult_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_served . '</p></div>',
        );


        $number_youth_served = $item->number_youth_served;
        $form['number_youth_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of youth Attending</h5><p>' . $number_youth_served . '</p></div>',
        );

        $form['Level_Success_Providing_Support'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Providing_Support . '</p></div>',
        );
    }


        // provide information
    $Provide_Information = db_query("SELECT Provide_Information, Provide_Information  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Provide_Information_data = implode(" ", $Provide_Information);

    if (isset($Provide_Information) && $Provide_Information)
    {

    $Provide_Information_activity = db_query("SELECT Provide_Information_activity, Provide_Information_activity  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Provide_Information_activity_data = implode(" ", $Provide_Information_activity);

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Provide_Information = implode(" ", $Funding_supports);



        $form['Provide_Information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Provide Information</h5><p>' . $Provide_Information_data . '</p></div>',
        );
        $form['Providing_Support_activity'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Type of Activity</h5><p>' . $Provide_Information_activity_data . '</p></div>',
        );
        $form['Funding_supports'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Funding supports</h5><p>' . $Funding_supports_Provide_Information . '</p></div>',
        );
    }




          $Provide_Information_activity_media= 'Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_activity_media]) && $Provide_Information_activity[$Provide_Information_activity_media] )
        {


    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Provide_Information = implode(" ", $Level_Success);


             $Media_Campaign_information_cadca = db_query("SELECT Media_Campaign_information  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();
    if (isset($Media_Campaign_information_cadca) && $Media_Campaign_information_cadca)
    {

        $form['Media_Campaign_information_view_cadca'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Type</h5><p>' . $Media_Campaign_information_cadca . '</p></div>',
        );
    }


    // cadca media


    $Media_outlet_view = db_query("SELECT Media_outlet  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Media_out_cadca = unserialize($Media_outlet_view);

    //echo "<pre>";print_r($Media_out_csap);
    //sdfsdf

    $Media_submit_view = db_query("SELECT Media_submit  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Media_submit_cadca = unserialize($Media_submit_view);

    //echo "<pre>";print_r($Media_submit_csap);
    $media_date_view = db_query("SELECT media_date  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $media_date_cadca = unserialize($media_date_view);

    //echo "<pre>";print_r($media_date_csap);
    $Published_view = db_query("SELECT Published  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Published_cadca = unserialize($Published_view);

    // echo "<pre>";print_r($Published_csap);
    $if_yes_publication_view = db_query("SELECT if_yes_publication  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $if_yes_publication_cadca = unserialize($if_yes_publication_view);

    // print($if_yes_publication_cadca);die();


    //echo "<pre>";print_r($if_yes_publication_csap);
    $Reach_view = db_query("SELECT Reach  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Reach_cadca = unserialize($Reach_view);

    // echo "<pre>";print_r($Reach_csap);
    $media_notes_view = db_query("SELECT media_notes  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $media_notes_cadca = unserialize($media_notes_view);

    if (isset($Media_out_cadca['media_outlet']) && count($Media_out_cadca['media_outlet']) > 0)
    {

        $media_view_cadca = "";

        foreach ($Media_out_cadca['media_outlet'] as $key => $value)
        {
            $media_view_cadca .= "<tr><td>" . $value . "</td>";
            $media_view_cadca .= "<td>" . $Media_submit_cadca['media_submit'][$key] . "</td>";
            $media_view_cadca .= "<td>" . $media_date_cadca['media_date'][$key] . "</td>";
            $media_view_cadca .= "<td>" . $Published_cadca['published'][$key] . "</td>";
            $media_view_cadca .= "<td>" . $if_yes_publication_cadca['media_publish'][$key] . "</td>";
            $media_view_cadca .= "<td>" . $Reach_cadca['reach'][$key] . "</td>";
            $media_view_cadca .= "<td>" . $media_notes_cadca['media_notes'][$key] . "</td></tr>";

        }
        //print_r($media_view_data);die();
        $form['media_cadca'] = array(
            '#markup' => '<div class="responsive_table"><h5>Media</h5><table id="myTable" class=" table order-list">
    <thead>
       <tr><th>Media outlets </th><th>Submitted </th><th>Date </th><th>Published </th><th>If yes, then Publication Date </th><th>Reach </th><th>Notes </th></tr>
    </thead>
    <tbody>
    ' . $media_view_cadca . '
    </tbody>
    </table></div>
'
        );

    }


    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );

        $form['Level_Success_Provide_Information'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Provide_Information . '</p></div>',
        );

      }




     $Provide_Information_social_media= 'Social networking (Facebook, Twitter, etc.)';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_social_media]) && $Provide_Information_activity[$Provide_Information_social_media] )
        {


    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Provide_Information = implode(" ", $Level_Success);

        //social media  view starts here




    // social media cadca select files
    $Social_Media_profile_view_cadca = db_query("SELECT social_media_profile  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_Media_profile_cadca = unserialize($Social_Media_profile_view_cadca);

//echo "<pre>";print_r($Social_Media_profile_cadca);die();
    //sdfsdf

    $social_Media_submit_view_cadca = db_query("SELECT social_Media_Media_submit  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_Media_submit_cadca = unserialize($social_Media_submit_view_cadca);

    $social_media_date_view_cadca = db_query("SELECT social_media_date  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_date_cadca = unserialize($social_media_date_view_cadca);

    //echo "<pre>";print_r($social_media_date_csap);
    $Social_media_impression_view_cadca = db_query("SELECT Social_Media_media_impression  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_media_impression_cadca = unserialize($Social_media_impression_view_cadca);

    // echo "<pre>";print_r($Social_media_impression_csap);
    $social_media_notes_view_cadca = db_query("SELECT Social_Media_media_notes FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_notes_cadca = unserialize($social_media_notes_view_cadca);

    //echo "<pre>";print_r($social_media_notes_csap);die();
    if (isset($Social_Media_profile_cadca['social_media_profile']) && count($Social_Media_profile_cadca['social_media_profile']) > 0)
    {

        $Social_Media_profile_view_cadca = "";

        foreach ($Social_Media_profile_cadca['social_media_profile'] as $key => $value)
        {
            $Social_Media_profile_view_cadca .= "<tr><td>" . $value . "</td>";
            $Social_Media_profile_view_cadca .= "<td>" . $social_Media_submit_cadca['social_media_submit'][$key] . "</td>";
            $Social_Media_profile_view_cadca .= "<td>" . $social_media_date_cadca['social_media_date'][$key] . "</td>";
            $Social_Media_profile_view_cadca .= "<td>" . $Social_media_impression_cadca['social_media_impression'][$key] . "</td>";
            $Social_Media_profile_view_cadca .= "<td>" . $social_media_notes_cadca['social_media_notes'][$key] . "</td></tr>";
        }

        $form['social_media_cadca'] = array(
            '#markup' => '<div class="responsive_table"><h5>Social Media</h5><table id="myTable" class=" table order-list">
    <thead>
      <tr><th>Social Media Outlets </th><th>submitted </th><th>Date </th><th>Impressions </th><th>Notes </th></tr>
    </thead>
    <tbody>
    ' . $Social_Media_profile_view_cadca. '
    </tbody>
    </table></div>
'
        );

    }



    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );

    $form['Level_Success_Provide_Information'] = array(
     '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Provide_Information . '</p></div>',
        );

      }






     $Provide_Information_materials = 'Informational materials prepared/ produced';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_materials]) && $Provide_Information_activity[$Provide_Information_materials] )
        {


    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Provide_Information = implode(" ", $Level_Success);

        //social media  view starts here




    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );

    $form['Level_Success_Provide_Information'] = array(
     '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Provide_Information . '</p></div>',
        );

  $number_adult_cadca_7 = db_query("SELECT number_adult_information  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();

      $number_youth_cadca_7 = db_query("SELECT number_youth_information  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();


        $form['number_adult_served_information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_cadca_7 . '</p></div>',
        );


        $form['number_youth_served_information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of Youth Attending</h5><p>' . $number_youth_cadca_7 . '</p></div>',
        );

      }





     $Provide_Information_disseminated = 'Informational materials disseminated';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_disseminated]) && $Provide_Information_activity[$Provide_Information_disseminated] )
        {


    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Provide_Information = implode(" ", $Level_Success);

        //social media  view starts here




    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );



        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );


        $location = $item->location;

        $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );

        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );


        $city = $item->city;

        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );


        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );

        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );


    $form['Level_Success_Provide_Information'] = array(
     '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Provide_Information . '</p></div>',
        );

       $number_adult_cadca_7 = db_query("SELECT number_adult_information  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();

      $number_youth_cadca_7 = db_query("SELECT number_youth_information  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();


        $form['number_adult_served_information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_cadca_7 . '</p></div>',
        );


        $form['number_youth_served_information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of Youth Attending</h5><p>' . $number_youth_cadca_7 . '</p></div>',
        );


      $number_adult_presentation = db_query("SELECT number_adult_presentation  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();


      $number_youth_presentation = db_query("SELECT number_youth_presentation  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();


        $form['number_adult_served_presentation'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>How many Adults received written materials at this presentation?</h5><p>' . $number_adult_presentation . '</p></div>',
        );


        $form['number_youth_served_presentation'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>How many Youth received written materials at this presentation?</h5><p>' . $number_youth_presentation . '</p></div>',
        );


      }




           $Provide_Information_Coalition = ' Information on DFC Coalition Web site';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_Coalition]) && $Provide_Information_activity[$Provide_Information_Coalition] )
        {


    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Provide_Information = implode(" ", $Level_Success);

        //social media  view starts here




    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );




    $form['Level_Success_Provide_Information'] = array(
     '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Provide_Information . '</p></div>',
        );




        $number_adult_served = $item->number_adult_served;
        $form['number_adult_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_served . '</p></div>',
        );

    $number_youth_served = $item->number_youth_served;
        $form['number_youth_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of youth Attending</h5><p>' . $number_youth_served . '</p></div>',
        );


      }



     $Provide_Information_sessions = ' Direct face-to-face information sessions or Special events (e.g., fairs, community celebrations)';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_sessions]) && $Provide_Information_activity[$Provide_Information_sessions] )
        {


    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Provide_Information = implode(" ", $Level_Success);

        //social media  view starts here




    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );



        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );


        $location = $item->location;

        $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );

        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );


        $city = $item->city;

        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );


        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );

        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );


    $form['Level_Success_Provide_Information'] = array(
     '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Provide_Information . '</p></div>',
        );

       $number_adult_cadca_7 = db_query("SELECT number_adult_information  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();

      $number_youth_cadca_7 = db_query("SELECT number_youth_information  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();


        $form['number_adult_served_information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_cadca_7 . '</p></div>',
        );


        $form['number_youth_served_information'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of Youth Attending</h5><p>' . $number_youth_cadca_7 . '</p></div>',
        );



      }





     $Provide_Information_others = 'Others';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_others]) && $Provide_Information_activity[$Provide_Information_others] )
        {


    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Provide_Information = implode(" ", $Level_Success);


    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if ($usersList['uid'] != "0" && (isset($usersList['roles'][7]) && $usersList['roles'][7] == "Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5] == "Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6] == "Manager"))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            if (in_array($usersList['uid'], $personConduct_id_arr['person_conducting']))
            {
                $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '"class="form-checkbox"  type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
            }
        }

    }

      $form['personConducting'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Person Conducting</h5><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );


    $form['personConductingContent'] = array(
        '#markup' => $usersRow,
        '#default_value' => $item->personConductingContent,
    );

    $form['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );



        $startdatetime = $item->startdatetime;
        $form['startdatetime'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime . '</p></div>',
            '#default_value' => $item->startdatetime,
        );

        $enddatetime = $item->enddatetime;
        $form['enddatetime'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End date</h5><p>' . $enddatetime . '</p></div>',
            '#default_value' => $item->enddatetime,
        );


        $location = $item->location;

        $form['location'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Location</h5><p>' . $location . '</p></div>',
            '#default_value' => $item->location,
        );


        $address_1 = $item->address_1;
        $form['address_1'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Address 1 </h5><p class="multi_line">' . $address_1 . '</p></div>',
            '#default_value' => $item->address_1,
        );

        $address_2 = $item->address_2;
        $form['address_2'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Address 2 </h5><p class="multi_line">' . $address_2 . '</p></div>',
        );


        $city = $item->city;

        $form['city'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>City</h5><p>' . $city . '</p></div>',
        );


        $states = $item->states;
        $form['states'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>State</h5><p>' . $states . '</p></div>',
        );

        $zip_code = $item->zip_code;
        $form['zip_code'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Zip code</h5><p>' . $zip_code . '</p></div>',
        );


    $form['Level_Success_Provide_Information'] = array(
     '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Provide_Information . '</p></div>',
        );


        $number_adult_served = $item->number_adult_served;
        $form['number_adult_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_served . '</p></div>',
        );


        $number_youth_served = $item->number_youth_served;
        $form['number_youth_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of youth Attending</h5><p>' . $number_youth_served . '</p></div>',
        );



      }



       // change consequences
    $change_consequences = db_query("SELECT change_consequences, change_consequences  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $change_consequences_data = implode(" ", $change_consequences);

    $change_consequences_activity = db_query("SELECT change_activity, change_activity  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $change_consequences_activity_data = implode(" ", $change_consequences_activity);

    $change_consequences_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_change_consequences = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_change_consequences = implode(" ", $Level_Success);


    $number_adult_Business_design = db_query("SELECT number_adult_Business_design, number_adult_Business_design  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Business_change_consequences = implode(" ", $number_adult_Business_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_change_consequences = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_change_consequences = implode(" ", $enddatetime_physical);

    if (isset($change_consequences) && $change_consequences)
    {
        $form['change_consequences'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Change consequences</h5><p>' . $change_consequences_data . '</p></div>',
        );
        $form['change_consequences_activity'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Type of Activity</h5><p>' . $change_consequences_activity_data . '</p></div>',
        );

        if (isset($change_consequences_others_for_all) && $change_consequences_others_for_all)
        {
            $form['change_consequences_others_for_all'] = array(
                '#markup' => '<div class="capacity_view_details1"><h5>Others</h5><p>' . $change_consequences_others_for_all . '</p></div>',
            );
        }
        $form['Funding_supports'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Funding supports</h5><p>' . $Funding_supports_change_consequences . '</p></div>',
        );


           $form['startdatetime_physical'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime_change_consequences . '</p></div>',
        );
        $form['enddatetime_physical'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End Date</h5><p>' . $enddatetime_change_consequences . '</p></div>',
        );

          $form['number_adult_Business_design'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_Business_change_consequences . '</p></div>',
        );

            $form['Level_Success_change_consequence'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_change_consequences . '</p></div>',
        );


    }



    // change_access


    $Change_Access = db_query("SELECT Change_Access, Change_Access  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Access_data = implode(" ", $Change_Access);

    $Change_Access_activity = db_query("SELECT Change_Access_activity, Change_Access_activity  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Access_activity_data = implode(" ", $Change_Access_activity);

    $Change_Access_activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Change_Access = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Change_Access = implode(" ", $Level_Success);



    $number_youth_physical_design = db_query("SELECT number_youth_physical_design, number_youth_physical_design  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_youth_Change_Access = implode(" ", $number_youth_physical_design);

    $number_adult_physical_design = db_query("SELECT number_adult_physical_design, number_adult_physical_design  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Change_Access = implode(" ", $number_adult_physical_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_Change_Access = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_Change_Access = implode(" ", $enddatetime_physical);

    if (isset($Change_Access) && $Change_Access)
    {
        $form['Change_Access'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title: Change Access and Barries</h5><p>' . $Change_Access_data . '</p></div>',
        );
        $form['Change_Access_activity'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Type of Activity</h5><p>' . $Change_Access_activity_data . '</p></div>',
        );
        if (isset($Change_Access_activity_others_for_all) && $Change_Access_activity_others_for_all)
        {
            $form['Change_Access_activity_others_for_all'] = array(
                '#markup' => '<div class="capacity_view_details1"><h5>Others</h5><p>' . $Change_Access_activity_others_for_all . '</p></div>',
            );
        }
        $form['Funding_supports'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Funding supports</h5><p>' . $Funding_supports_Change_Access . '</p></div>',
        );

           $form['startdatetime_physical'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime_Change_Access . '</p></div>',
        );
        $form['enddatetime_physical'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End Date</h5><p>' . $enddatetime_Change_Access . '</p></div>',
        );
      $number_adult_served = $item->number_adult_served;
        $form['number_adult_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_served . '</p></div>',
        );

        $number_youth_served = $item->number_youth_served;
        $form['number_youth_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of youth Attending</h5><p>' . $number_youth_served . '</p></div>',
        );

          $form['Level_Success_Change_Access'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Change_Access . '</p></div>',
        );


    }


    // Change Policies
    $Change_Policies = db_query("SELECT Change_Policies, Change_Policies  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Policies_data = implode(" ", $Change_Policies);

    $Change_Policies_activity = db_query("SELECT Change_Policies_activity, Change_Policies_activity  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Policies_activity_data = implode(" ", $Change_Policies_activity);

    $Change_Policies_activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Change_Policies = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Change_Policies = implode(" ", $Level_Success);


    $number_youth_physical_design = db_query("SELECT number_youth_physical_design, number_youth_physical_design  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_youth_Change_Policies = implode(" ", $number_youth_physical_design);

    $number_adult_physical_design = db_query("SELECT number_adult_physical_design, number_adult_physical_design  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Change_Policies = implode(" ", $number_adult_physical_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_Change_Policies = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_Change_Policies = implode(" ", $enddatetime_physical);

    if (isset($Change_Policies) && $Change_Policies)
    {
        $form['Change_Policies'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title of the Change:</h5><p>' . $Change_Policies_data . '</p></div>',
        );
        $form['Change_Policies_activity'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Type of Change:</h5><p>' . $Change_Policies_activity_data . '</p></div>',
        );

        if (isset($Change_Policies_activity_others_for_all) && $Change_Policies_activity_others_for_all)
        {
            $form['Change_Access_activity_others_for_all'] = array(
                '#markup' => '<div class="capacity_view_details1"><h5>Others</h5><p>' . $Change_Policies_activity_others_for_all . '</p></div>',
            );
        }
        $form['Funding_supports'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Funding supports</h5><p>' . $Funding_supports_Change_Policies . '</p></div>',
        );

            $form['startdatetime_physical_Change_Policies'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime_Change_Policies . '</p></div>',
        );
        $form['enddatetime_physical_Change_Policies'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End Date</h5><p>' . $enddatetime_Change_Policies . '</p></div>',
        );
        $number_adult_served = $item->number_adult_served;
        $form['number_adult_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_served . '</p></div>',
        );

        $number_youth_served = $item->number_youth_served;
        $form['number_youth_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of youth Attending</h5><p>' . $number_youth_served . '</p></div>',
        );

            $form['Level_Success_Change_Policies'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Change_Policies . '</p></div>',
        );

    }


    // physical design
    $Physical_Design = db_query("SELECT Physical_Design, Physical_Design  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Physical_Design_data = implode(" ", $Physical_Design);

    $Physical_Design_activity = db_query("SELECT Physical_Design_activity, Physical_Design_activity  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Physical_Design_activity_data = implode(" ", $Physical_Design_activity);

    $Physical_Design_activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Physical_Design = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Physical_Design = implode(" ", $Level_Success);


    $number_youth_physical_design = db_query("SELECT number_youth_physical_design, number_youth_physical_design  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_youth_Physical_Design = implode(" ", $number_youth_physical_design);

    $number_adult_physical_design = db_query("SELECT number_adult_physical_design, number_adult_physical_design  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Physical_Design = implode(" ", $number_adult_physical_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_Physical_Design = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_Physical_Design = implode(" ", $enddatetime_physical);

    if (isset($Physical_Design) && $Physical_Design)
    {
        $form['Physical_Design_view'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Title of the Change:</h5><p>' . $Physical_Design_data . '</p></div>',
        );
        $form['Change_Policies_activity'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Type of Change:</h5><p>' . $Physical_Design_activity_data . '</p></div>',
        );

        if (isset($Physical_Design_activity_others_for_all) && $Physical_Design_activity_others_for_all)
        {
            $form['Change_Access_activity_others_for_all'] = array(
                '#markup' => '<div class="capacity_view_details1"><h5>Others</h5><p>' . $Physical_Design_activity_others_for_all . '</p></div>',
            );
        }
        $form['Funding_supports'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Funding supports</h5><p>' . $Funding_supports_Physical_Design . '</p></div>',
        );


         $form['startdatetime_physical_Physical_Design'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Start date</h5><p>' . $startdatetime_Physical_Design . '</p></div>',
        );
        $form['enddatetime_physical_Physical_Design'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>End Date</h5><p>' . $enddatetime_Physical_Design . '</p></div>',
        );
          $number_adult_served = $item->number_adult_served;
        $form['number_adult_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of adult Attending</h5><p>' . $number_adult_served . '</p></div>',
        );

        $number_youth_served = $item->number_youth_served;
        $form['number_youth_served'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Number of youth Attending</h5><p>' . $number_youth_served . '</p></div>',
        );
   $form['Level_Success_Physical_Design'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Level Success</h5><p>' . $Level_Success_Physical_Design . '</p></div>',
        );
    }


    // description of purpose and outcome
    if (isset($item->description_of_purpose) && $item->description_of_purpose != '')
    {
        $description_of_purpose = $item->description_of_purpose;

        $form['description_of_purpose'] = array(
            '#markup' => '<hr><div class="capacity_view_details1"><h5>Description of purpose</h5><p class="multi_line">' . $description_of_purpose . '</p></div>',
        );
    }

    if (isset($item->description_of_outcome) && $item->description_of_outcome != '')
    {
        $description_of_outcome = $item->description_of_outcome;
        $form['description_of_outcome'] = array(
            '#markup' => '<div class="capacity_view_details1"><h5>Description of outcome</h5><p class="multi_line">' . $description_of_outcome . '</p></div>',
        );
    }


   $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);
    // prerson conducting activities

     // prerson conducting activities
    if (isset($item->Members_Invloved))
    {
        $members_id_arr = unserialize($item->Members_Invloved);
    }

    //echo "<pre>";print_r($item);die;
    $form['membersInvolvedStart'] = array(
        '#markup' => '<div class="responsive_table"><h5>Volunteers Involved</h5><table id="membersInvolvedTab" class="sticky-enabled table-select-processed">
 <thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th><th>Company organization</th> </tr></thead>
<tbody>'
    );



    $membersRow = '';
    foreach ($all_user_details as $membersList)
    {


  if ($membersList['uid'] != "0" && (isset($membersList['roles'][8]) && $membersList['roles'][8] == "volunteers"))
        {

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $membersList['uid'])->fetchField(); //echo $last_name_staff."<pre>";print_r($usersList);die;


            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $membersList['uid'])->fetchField();

            $org_name = db_query("SELECT field_company_organization_value FROM field_data_field_company_organization WHERE entity_id =" . $membersList['uid'])->fetchField();

            if (in_array($membersList['uid'], $members_id_arr['Members_Invloved']))
            {
                $memChkVal = (in_array($membersList['uid'], $members_id_arr['Members_Invloved'])) ? 'checked="checked"' : '';

                $membersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="Members_Invloved[]" value="' . $membersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $memChkVal . '>
              </div>
              </td><td>' . $membersList['name'] . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td><td>' . $membersList['mail'] . '</td>
              <td>' . (($cell_phone != "") ? $cell_phone : "") . '</td><td>' . (($org_name != "") ? $org_name : "") . '</td></tr>';
            }
        }

    }

    $form['Members_Invloved'] = array(
        '#markup' => $membersRow
    );

    $form['membersInvolvedEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );


$form['contact_starts'] = array(
    '#markup' => "<div id='person_Conducting_changehidden'>"
);
$form['personContact'] = array(
    '#markup' => '<div class="responsive_table"> <label style="color:green;">Contact Lists</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
<thead><tr><th>First Name</th><th>Last Name</th><th>Email</th><th>Phone</th><th>Company Organization</th><th>Primary Sector</th></tr></thead>
<tbody>'
);
$contact_lists =db_query("SELECT * from {estar_contacts_details}")->fetchAll();
$usersRow = '';
if(isset($contact_lists) && count($contact_lists)>0){
foreach ($contact_lists as $usersList)
{ //echo "<pre>";print_r($all_user_details);die;
    if (isset($usersList) && $usersList!="")
    {

        $person_conducting_data = db_query("SELECT contact_person_conducting,  contact_person_conducting  FROM {implementation_details} WHERE implementation_id= " . $implementation_id)->fetchField();

        $contact_id_arr = unserialize($person_conducting_data);

        if (in_array($usersList->contact_id, $contact_id_arr['contact_person_conducting'])) {
                $usersRow .= '<tr class="odd"><td class="Member-hide" style="display:none"><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="contact_person_conducting[]" value="' .$usersList->contact_id . '"class="form-checkbox"  type="checkbox">
              </div>
      </td>

          <td>' . (($usersList->first_name != "") ? $usersList->first_name : "") . '</td>
          <td>' . (($usersList->last_name != "") ? $usersList->last_name : "") . '</td>
          <td>' . (($usersList->email != "") ? $usersList->email : "") . '</td>
          <td>' . (($usersList->phone != "") ? $usersList->phone : "") . '</td>
          <td>' . (($usersList->organization != "") ? $usersList->organization : "") . '</td>
          <td>' . (($usersList->primary_sector_select != "") ? $usersList->primary_sector_select : "") . '</td></tr>';
    }
}

}
}

else{
$usersRow='<tr><td colspan="6">Contacts list is empty.</td></tr>';
}


$form['personContactContent'] = array(
    '#markup' => $usersRow,
);

$form['personContactEnd'] = array(
    '#markup' => '</tbody></table></div>'
);
$form['person_Contact_end'] = array(
    '#markup' => '</div>'
);



    //  Donation mutiple section
    if (isset($item->Donation_select) && $item->Donation_select != '')
    {
        $Donation_select_id = $item->Donation_select;
    }

    $Donation_data = unserialize($Donation_select_id);

    if (isset($item->Monetary_Value) && $item->Monetary_Value != '')
    {
        $Monetary_Value_id = $item->Monetary_Value;
    }

    $Monetary_Value_data = unserialize($Monetary_Value_id);

    if (isset($item->Comment) && $item->Comment != '')
    {
        $Comment_id = $item->Comment;
    }

    $Comment_data = unserialize($Comment_id);

    if (isset($Donation_data['Donation_select']) && count($Donation_data['Donation_select']) > 0)
    {

        $donation_view_data = "";

        foreach ($Donation_data['Donation_select'] as $key => $value)
        {
            $donation_view_data .= "<tr><td>" . $value . "</td>";
            $donation_view_data .= "<td>" . $Monetary_Value_data['Monetary_Value'][$key] . "</td>";
            $donation_view_data .= "<td>" . $Comment_data['Comment'][$key] . "</td><tr>";

        }
    }

    //print_r($Donation_data);die();
    $form['Donation1'] = array(
        '#markup' => '<div class="responsive_table"><h5>Donation</h5><table id="myTable" class=" table order-list">
    <thead>
        <tr>
            <th>Donation</th>
            <th>Monetary Value</th>
            <th>Comment</th>
        </tr>
    </thead>
    <tbody>
    ' . $donation_view_data . '
    </tbody>
    </table></div>
'
    );

    // Attachments mutiple fields
    if (isset($item->Attachments_fid) && $item->Attachments_fid != '')
    {
        $upload_ids = unserialize($item->Attachments_fid);
    } //echo "<pre>";print_r($upload_ids);die;


    $form['Attachments-title'] = array(
        '#markup' => ''
    );

    $form['Attachments_files'] = array(
        '#prefix' => '<div class="responsive_table"><h5>Attachment</h5>
    <table id="myTable2" class=" table order-list-att">
      <tr><th>' . t('Attachments') . '</th><th>' . t('Comments') . '</tr></th>' . '<tr><td class="table_heading">
    ',
    );

    if (isset($upload_ids['upload_id']) && count($upload_ids['upload_id']) > 0)
    {

        foreach ($upload_ids['upload_id'] as $uploadId)
        {
            $fid = $uploadId;
            $file_upload_details = db_query("SELECT * FROM {file_managed} WHERE fid = " . $fid)->fetchAll();

            $fURI = $file_upload_details[0]->uri;
            $fname = $file_upload_details[0]->filename;
            $fileURI = file_create_url($fURI);

            if ($fname != "")
            {

                $form['Attachments_fid' . $uploadId] = array(
                    '#markup' => t('<div class="upload_data"><a href=' . $fileURI . '> <i class="fa fa-cloud-download" aria-hidden="true"></i> ' . $fname . '</a> </div>') ,
                );
            }
        }

    }
    if (isset($item->Attachments_notes) && $item->Attachments_notes != '')
    {
        $Attachments_notes = $item->Attachments_notes;
    }
    $form['Attachments_notes'] = array(
        '#markup' => '<td class="col-sm-3">' . $Attachments_notes . '</td></tr>
        </table>  </div>
    ',
    );

    /*$form['pending_field'] = array(
        '#type' => 'checkboxes',
       '#options' => array('1'=>"Pending"),
       '#required'=>TRUE,
       //'#attributes' => array('checked' => 'checked','disabled'=>'disabled'),
       '#attributes' => ($item->is_pending=="1")?array('checked' => 'checked','disabled'=>'disabled'):array('disabled'=>'disabled'),
    );*/

    $form['signature'] = array(
        '#type' => 'radios',
        '#title' => t('Signature') ,
        '#options' => array(
            'yes' => "Pending",
            '1' => "I certify that the information above is true, accurate and correct to the best of my knowledge. "
        ) ,
         '#attributes' => array(
          'required' => true,
             ),
        '#default_value' => ($item->signature == "0") ? $item->is_pending : $item->signature,
        '#attributes' => array(
            'disabled' => 'disabled'
        ) ,
    );

	$created_by_img = file_create_url(path_to_theme().'/images/businessman.png');

    if(isset($item->user_id) && $item->user_id!=""){
      $user=user_load($item->user_id);
      $username=$user->name;
    }



    $form['signed_by_details']=array('#markup'=>"<div class='user_create_section'>
		<div class='user-det create_user_section'>
			<div class='image_section'><img src='$created_by_img' class='white_img'></div>
			<div class='content_section'><h5>Signed By:</h5><p> ".$username."</p></div>
		</div>
		<div class='user-date-det create_user_section'>
			<div class='image_section'><img src='$created_by_img' class='white_img'></div>
			<div class='content_section'><h5>Signed on:</h5> <p>".$item->created_at."</p></div>
		</div>
	</div>");

    return $form;
}


   // implemenetation view end here

   // implementation end submit start here

function implementation_edit_item_form_submit($form, &$form_state)
{
        //echo "<pre>";print_r($_REQUEST);die;

    $query = db_select('planning_details', 'a');
    $query->fields('a', array(
        'planning_id',
        'title'
    ));
    $query->orderBy('a.title', 'ASC');
    $planning_lists = $query->execute()
        ->fetchAll();
    // $lmCount = 0;
    // foreach ($planning_lists as $plankey => $planVal)
    // {
    //     $plan_id = $planVal->planning_id;
    //     $planning_data_lists = db_query("SELECT * FROM {planning_details} WHERE planning_id = " . $plan_id)->fetchAll();
    //     $chkSerialize = @unserialize($planning_data_lists[0]->contributing_factor);
    //     if ($chkSerialize !== false)
    //     {
    //         $contributingFactor = unserialize($planning_data_lists[0]->contributing_factor);
    //         $interventionsCheckedItems = unserialize($planning_data_lists[0]->interventions);
    //         $logicModelCount = count($contributingFactor['contributingCollection']);
    //         for ($i = 0;$i < $logicModelCount;$i++)
    //         {
    //             if (isset($_REQUEST['contributing_factor' . $plankey . '_' . $i]))
    //             {
    //                 $cfLogicModels['contributing_factor' . $plankey . '_' . $i] = $_REQUEST['contributing_factor' . $plankey . '_' . $i];
    //             }
    //             for ($inv = 0;$inv < count($_REQUEST['interventions' . $plankey . '_' . $i]);$inv++)
    //             {
    //                 if (isset($_REQUEST['interventions' . $plankey . '_' . $i]))
    //                 {
    //                     $inLogicModels['interventions' . $plankey . '_' . $i] = $_REQUEST['interventions' . $plankey . '_' . $i];
    //                 }
    //             }
    //             if (isset($_REQUEST['logic_model_title_link' . $plankey . '_' . $i]))
    //             {
    //                 $logicModelTitle = $_REQUEST['logic_model_title_link' . $plankey . '_' . $i];
    //             }
    //         }
    //
    //     }
    //     else
    //     {
    //         if (isset($_REQUEST['contributing_factor' . $plankey . '_' . $lmCount]))
    //         {
    //             $cfLogicModels['contributing_factor' . $plankey . '_' . $lmCount] = $_REQUEST['contributing_factor' . $plankey . '_' . $lmCount];
    //         }
    //         for ($inv = 0;$inv < count($_REQUEST['interventions' . $plankey . '_' . $lmCount]);$inv++)
    //         {
    //             if (isset($_REQUEST['interventions' . $plankey . '_' . $lmCount]))
    //             {
    //                 $inLogicModels['interventions' . $plankey . '_' . $lmCount] = $_REQUEST['interventions' . $plankey . '_' . $lmCount];
    //             }
    //         }
    //         $lmCount++;
    //     }
    //
    // }
$logicModelTitle=$_REQUEST['logic_model_title_link0_0'];
    if(isset($_REQUEST['contributing_factor']) && $_REQUEST['contributing_factor']!=''){
      $cfLogicModels=$_REQUEST['contributing_factor'][0];
    }
    if(isset($_REQUEST['interventions'][0]) && $_REQUEST['interventions'][0]!=''){
      $inLogicModels=$_REQUEST['interventions'][0];
    }


    $conArrModels['contributing_factor'] = $cfLogicModels;
    $invArrModels['interventions'] = $inLogicModels;

    $person_conducting = "";
    if (count($_REQUEST['person_conducting']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['person_conducting']);$i++)
        {
            $person_conducting['person_conducting'][$i] = $_REQUEST['person_conducting'][$i];
        }
    }
    $person_conductin_data = serialize($person_conducting);

    $person_conducting = "";
    if (count($_REQUEST['person_conducting']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['person_conducting']);$i++)
        {
            $person_conducting['person_conducting'][$i] = $_REQUEST['person_conducting'][$i];
        }
    }
    $person_conductin_data = serialize($person_conducting);

    if (isset($_REQUEST['attachment_upload_id']) && $_REQUEST['attachment_upload_id'] != '')
    {
        $already_upload_ids = unserialize($_REQUEST['attachment_upload_id']);

    }
    if (isset($_REQUEST['Attachments_fid']['files']) && count($_REQUEST['Attachments_fid']['files']) > 0)
    {
        if (isset($already_upload_ids['upload_id']) && count($already_upload_ids['upload_id']) > 0)
        {
            $ui = count($already_upload_ids['upload_id']);
        }
        else
        {
            $ui = 0;
        }
        foreach ($_REQUEST['Attachments_fid']['files'] as $uploadId => $uploadVal)
        {
            $file_upload_ids['upload_id'][$ui] = $uploadId;
            $ui++;
        }
    }
    else
    {
        $file_upload_ids['upload_id'] = $file_upload_ids['upload_id'];
    }

    if (isset($already_upload_ids['upload_id']) && count($already_upload_ids['upload_id']) > 0)
    {
        $file_upload_ids['upload_id'] = array_merge($already_upload_ids['upload_id'], $file_upload_ids['upload_id']);
    }
    else
    {
        $file_upload_ids['upload_id'] = $file_upload_ids['upload_id'];
    }

    if (!isset($_REQUEST['Attachments_fid']['files']))
    {
        $file_upload_ids = $already_upload_ids;
    }

    $Members_Invloved = "";
    if (count($_REQUEST['Members_Invloved']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['Members_Invloved']);$i++)
        {
            $Members_Invloved['Members_Invloved'][$i] = $_REQUEST['Members_Invloved'][$i];
        }
    }
    $members_invloved_data = serialize($Members_Invloved);

    $counts = $_REQUEST['hidden_field'];

    $Donation_select = $Monetary_Value = $Comment = array();
    if (count($_REQUEST['Donation_select']) > 0)
    {
        $i = 0;
        foreach ($_REQUEST['Donation_select'] as $keyz => $valuez)
        {
            $Donation_select['Donation_select'][$i] = $valuez;
            $Monetary_Value['Monetary_Value'][$i] = $_REQUEST['Monetary_Value'][$keyz];
            $Comment['Comment'][$i] = $_REQUEST['Comment'][$keyz];
            $i++;
        }
    }
    $Donation_select_data = serialize($Donation_select);
    $Monetary_Value_data = serialize($Monetary_Value);
    $Comment_data = serialize($Comment);



   $contact_involuved = "";
    if (count($_REQUEST['contact_person_conducting']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['contact_person_conducting']);$i++)
        {
            $contact_involuved['contact_person_conducting'][$i] = $_REQUEST['contact_person_conducting'][$i];
        }
    }
    $contact_involuved_data = serialize($contact_involuved);



//echo "<pre>";print_r($_REQUEST);die;
$Media_outlet=$Media_submit=$media_date=$Published=$if_yes_publication=$Reach=$media_notes=array();
if(count($_REQUEST['media_outlet'])>0){
$i = 0;
foreach ($_REQUEST['media_outlet'] as $keyz => $valuez) {
    $Media_outlet['media_outlet'][$i]=$valuez;
    $m_type_information['media_type_information'][$i]=$_REQUEST['media_type_information'][$keyz];
    $Media_submit['media_submit'][$i]=$_REQUEST['media_submit'][$keyz];
    $media_date['media_date'][$i]=$_REQUEST['media_date'][$keyz];
    $Published['published'][$i]=$_REQUEST['published'][$keyz];
    $if_yes_publication['media_publish'][$i]=$_REQUEST['media_publish'][$keyz];
    $Reach['reach'][$i]=$_REQUEST['reach'][$keyz];
    $media_notes['media_notes'][$i]=$_REQUEST['media_notes'][$keyz];
    $i++;
  }
}
$Media_outlet_data=serialize($Media_outlet);
$Media_submit_data=serialize($Media_submit);
$media_date_data=serialize($media_date);
$Published_data=serialize($Published);
$if_yes_publication_data=serialize($if_yes_publication);
$Reach_data=serialize($Reach);
$media_notes_data=serialize($media_notes);


$social_media_profile=$social_media_date=$social_media_submit=$social_media_impression=$social_media_notes=array();
if(count($_REQUEST['social_media_profile'])>0){
$j = 0;
foreach ($_REQUEST['social_media_profile'] as $keyz => $valuez) {
    $social_media_profile['social_media_profile'][$j]=$valuez;
    $social_media_submit['social_media_submit'][$j]=$_REQUEST['social_media_submit'][$keyz];
    $social_media_date['social_media_date'][$j]=$_REQUEST['social_media_date'][$keyz];
    $social_media_impression['social_media_impression'][$j]=$_REQUEST['social_media_impression'][$keyz];
    $social_media_notes['social_media_notes'][$j]=$_REQUEST['social_media_notes'][$keyz];
    $j++;
  }
}
$social_media_profile_data=serialize($social_media_profile);
$social_media_submit_data=serialize($social_media_submit);
$social_media_date_data=serialize($social_media_date);
$social_media_impression_data=serialize($social_media_impression);
$social_media_notes_data=serialize($social_media_notes);
    $imp_date_creation = date("F j, Y");

    if (isset($_REQUEST['implementation_id']) && $_REQUEST['implementation_id'] != '')
    {
        $implementationId = $_REQUEST['implementation_id'];
        db_update('implementation_details')->fields(array(
            'contributing_factor_models' => serialize($conArrModels) ,
            'intervention_models' => serialize($invArrModels),
            'intervention_id' => (isset($_REQUEST['interventions0_0'][0]) && $_REQUEST['interventions0_0'][0]!='')?$_REQUEST['interventions0_0'][0]:$_REQUEST['interventions'][0],
            'contributing_factor_id' => (isset($_REQUEST['contributing_factor0_0']) && $_REQUEST['contributing_factor0_0']!='')?$_REQUEST['contributing_factor0_0']:$_REQUEST['contributing_factor'][0],
             'personConductingContent' => $person_conductin_data,
            'startdatetime' => $form_state['values']['startdatetime'],
            'enddatetime' => $form_state['values']['enddatetime'],
            'Length_of_services' => $form_state['values']['Length_of_services'],
            'location' => $form_state['values']['location'],
            'country' => $form_state['values']['Country'],
            'address_1' => $form_state['values']['address_1'],
            'address_2' => $form_state['values']['address_2'],
            'city' => $form_state['values']['city'],
            'states' => $form_state['values']['states'],
            'zip_code' => $form_state['values']['zip_code'],
            'number_adult_served' => $form_state['values']['number_adult_served'],
            'number_youth_served' => $form_state['values']['number_youth_served'],
            'description_of_purpose' => $form_state['values']['description_of_purpose'],
            'description_of_outcome' => $form_state['values']['description_of_outcome'],
            'Members_Invloved' => $members_invloved_data,
            'contact_person_conducting' =>$contact_involuved_data,
            'Donation_select' => $Donation_select_data,
            'Monetary_Value' => $Monetary_Value_data,
            'Comment' => $Comment_data,
            'Attachments_fid' => (isset($file_upload_ids) && count($file_upload_ids) > "0") ? serialize($file_upload_ids) : "",
            'Attachments_notes' => $form_state['values']['Attachments_notes'],
            'logic_model_title_link' => $logicModelTitle,
            'is_pending' => ($form_state['values']['signature'] == "yes") ? $form_state['values']['signature'] : "no",
            'signature' => ($form_state['values']['signature'] == "1") ? $form_state['values']['signature'] : "0",
            'updated_at' => $imp_date_updation,
        ))->condition('implementation_id', $implementationId)->execute();
        $form_state['redirect'] = 'implementation/' . $implementationId . '/view';
    }

if(isset($_REQUEST['Alternative_Activities']) && $_REQUEST['Alternative_Activities']!='')
  {
           db_update('alternative_activitity')
        ->fields(array(

           'Alternative_Activities' => $form_state['values']['Alternative_Activities'],

          ))
           ->condition('implementation_id', $implementationId)->execute();
}

if(isset($_REQUEST['Community_based_Process']) && $_REQUEST['Community_based_Process']!='')
  {
           db_update('community_based')
        ->fields(array(
           'Community_based_Process' => $form_state['values']['Community_based_Process'],
          ))
           ->condition('implementation_id', $implementationId)->execute();
}

if(isset($_REQUEST['education_csap']) && $_REQUEST['education_csap']!='')
  {
           db_update('education')
        ->fields(array(
           'education_csap' => $form_state['values']['education_csap'],
          ))
          ->condition('implementation_id', $implementationId)->execute();
}

if(isset($_REQUEST['environmental']) && $_REQUEST['environmental']!='')
  {
           db_update('environmental')
        ->fields(array(
          'environmental' => $form_state['values']['environmental'],

          ))
      ->condition('implementation_id', $implementationId)->execute();
}
if(isset($_REQUEST['information_dissemination_edit']) && $_REQUEST['information_dissemination_edit']!='')
  {
           $info_dis_id = db_update('information_dissemination_details')
        ->fields(array(
           'Information_Dissemination_csap6' => $form_state['values']['information_dissemination_edit'],
           'information_dissemination' => $form_state['values']['information_dissemination_csap6'],
             'number_adult_information' => $form_state['values']['number_adult_served_information'],
            'number_youth_information' => $form_state['values']['number_youth_served_information'],
              'number_adult_presentation' => $form_state['values']['number_adult_served_presentation'],
            'number_youth_presentation' => $form_state['values']['number_youth_served_presentation'],
          ))
           ->condition('implementation_id', $implementationId)->execute();

    if(isset($_REQUEST['information_dissemination_edit']) && $_REQUEST['information_dissemination_edit']!='')
  {
        $m_type_information=(isset($_REQUEST['information_dissemination']) && $_REQUEST['information_dissemination']=="Media")?$_REQUEST['media_type_information']:"";
            db_update('media')
          ->fields(array(
          'information_dissemination_id' => $info_dis_id,
          'media_type_information' =>$form_state['values']['media_type_information_view'],
           'Media_outlet' => $Media_outlet_data,
           'Media_submit' => $Media_submit_data,
           'media_date' => $media_date_data,
           'Published' => $Published_data,
           'if_yes_publication' => $if_yes_publication_data,
           'Reach' => $Reach_data,
           'media_notes' => $media_notes_data,
          ))
          ->condition('implementation_id', $implementationId)->execute();
      }
  if(isset($_REQUEST['implementation_id']) && $_REQUEST['implementation_id']!='')
  {
            db_update('social_media')
          ->fields(array(
          'information_dissemination_id' => $info_dis_id,
          'Social_Media_profile' => $social_media_profile_data,
           'Social_Media_Media_submit' => $social_media_submit_data,
           'social_media_date' => $social_media_date_data,
           'Social_Media_media_impression' => $social_media_impression_data,
           'Social_Media_media_notes' => $social_media_notes_data,
          ))
          ->condition('implementation_id', $implementationId)->execute();
      }
}
// cacad 7 insert the values starts here

 if(isset($_REQUEST['Enhance_Activity']) && $_REQUEST['Enhance_Activity']!='')
  {

          db_update('enhance_skills')
        ->fields(array(
           'enhance_skills' => $form_state['values']['enhance_skills'],
           'Enhance_Activity' => $form_state['values']['Enhance_Activity'],
           'others_for_all' => $form_state['values']['Enhance_Activity_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports'],
           'Level_Success' => $form_state['values']['Level_Success_enhance_skills'],
          ))
   ->condition('implementation_id', $implementationId)->execute();
}



 if(isset($_REQUEST['providing_Support']) && $_REQUEST['providing_Support']!='')
  {
           db_update('providing_Support')
        ->fields(array(
           'providing_Support' => $form_state['values']['providing_Support'],
          'Providing_Support_activity' => $form_state['values']['Providing_Support_activity'],
          'others_for_all' => $form_state['values']['providing_Support_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports_Providing_Support'],
           'Level_Success' => $form_state['values']['Level_Success_providing_Support'],
          ))
          ->condition('implementation_id', $implementationId)->execute();
}

 if(isset($_REQUEST['Provide_Information_activity']) && $_REQUEST['Provide_Information_activity']!='')
  {
         db_update('Provide_Information')
        ->fields(array(
           'Provide_Information' => $form_state['values']['Provide_Information'],
          'Provide_Information_activity' => $form_state['values']['Provide_Information_activity'],
           'others_for_all' => $form_state['values']['others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports'],
           'Level_Success' => $form_state['values']['Level_Success_Provide_Information'],
        'number_adult_information' => $form_state['values']['number_adult_served_information'],
            'number_youth_information' => $form_state['values']['number_youth_served_information'],

              'number_adult_presentation' => $form_state['values']['number_adult_served_presentation'],
            'number_youth_presentation' => $form_state['values']['number_youth_served_presentation'],
          ))
           ->condition('implementation_id', $implementationId)->execute();

           if(isset($_REQUEST['media_outlet']) && count($_REQUEST['media_outlet'])>0 && $_REQUEST['Provide_Information_activity']=="Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),")
      {
        $m_type_information_cacad=(isset($_REQUEST['Provide_Information_activity']) && $_REQUEST['Provide_Information_activity']=="Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),")?$_REQUEST['media_type_information']:"";
          db_update('media_cadca')
          ->fields(array(
          'Media_Campaign_information' => $form_state['values']['Media_Campaign_information_view_cadca'],
           'Media_outlet' => $Media_outlet_data,
           'Media_submit' => $Media_submit_data,
           'media_date' => $media_date_data,
           'Published' => $Published_data,
           'if_yes_publication' => $if_yes_publication_data,
           'Reach' => $Reach_data,
           'media_notes' => $media_notes_data,
          ))
           ->condition('implementation_id', $implementationId)->execute();
      }
       if (isset($_REQUEST['Provide_Information_activity']) && count($_REQUEST['social_media_profile']) > 0 && $_REQUEST['Provide_Information_activity'] == "Social networking (Facebook, Twitter, etc.)")
        {
            db_update('Social_Media_cadca')->fields(array(
                'Social_Media_profile' => $social_media_profile_data,
                'Social_Media_Media_submit' => $social_media_submit_data,
                'social_media_date' => $social_media_date_data,
                'Social_Media_media_impression' => $social_media_impression_data,
                'Social_Media_media_notes' => $social_media_notes_data,
            ))->condition('implementation_id', $implementationId)->execute();
        }

  }
   if(isset($_REQUEST['change_consequences_edit']) && $_REQUEST['change_consequences_edit']!='')
  {
           db_update('change_consequences')
        ->fields(array(
           'change_consequences' => $form_state['values']['change_consequences_edit'],
           'change_activity' => $form_state['values']['change_consequences_activity'],
            'others_for_all' => $form_state['values']['change_consequences_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports_change_consequences'],
           'Level_Success' => $form_state['values']['Level_Success_change_consequences'],
           'number_adult_Business_design' => $form_state['values']['number_adult_Business_design'],
          'startdatetime_physical' => $form_state['values']['startdatetime_physical'],
          'enddatetime_physical' => $form_state['values']['enddatetime_physical'],
          ))
          ->condition('implementation_id', $implementationId)->execute();
}

   if(isset($_REQUEST['Change_Access']) && $_REQUEST['Change_Access']!='')
  {
           db_update('change_access')
        ->fields(array(
           'Change_Access' => $form_state['values']['Change_Access'],
          'Change_Access_activity' => $form_state['values']['Change_Access_activity'],
         'others_for_all' => $form_state['values']['Change_Access_activity_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports_Change_Access'],
           'Level_Success' => $form_state['values']['Level_Success_Change_Access'],
          'startdatetime_physical' => $form_state['values']['startdatetime_physical'],
          'enddatetime_physical' => $form_state['values']['enddatetime_physical'],
          ))
          ->condition('implementation_id', $implementationId)->execute();
}
   if(isset($_REQUEST['Change_Policies_activity']) && $_REQUEST['Change_Policies_activity']!='')
  {
           db_update('Change_Policies')
        ->fields(array(
           'Change_Policies' => $form_state['values']['Change_Policies'],
          'Change_Policies_activity' => $form_state['values']['Change_Policies_activity'],
          'others_for_all' => $form_state['values']['Change_Policies_activity_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports_Change_Policies'],
           'Level_Success' => $form_state['values']['Level_Success_Change_Policies'],
          'startdatetime_physical' => $form_state['values']['startdatetime_physical_Change_Policies'],
          'enddatetime_physical' => $form_state['values']['enddatetime_physical_Change_Policies'],
          ))
          ->condition('implementation_id', $implementationId)->execute();
}
   if(isset($_REQUEST['Physical_Design_activity']) && $_REQUEST['Physical_Design_activity']!='')
  {
         db_update('physical_design')
        ->fields(array(
           'Physical_Design' => $form_state['values']['Physical_Design'],
          'Physical_Design_activity' => $form_state['values']['Physical_Design_activity'],
          'others_for_all' => $form_state['values']['physical_design_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports_Physical_Design'],
           'Level_Success' => $form_state['values']['Level_Success_Physical_Design'],
           'startdatetime_physical' => $form_state['values']['startdatetime_physical_Physical_Design'],
          'enddatetime_physical' => $form_state['values']['enddatetime_physical_Physical_Design'],
            ))
           ->condition('implementation_id', $implementationId)->execute();

}

}


  // implementation edit submit end here


  // validation start

function implementation_item_form_alter(&$form, &$form_state, $form_id) {
  // There will already be some validate handlers added so you need to add to the
  // array rather than overwrite it.
  $form['#validate'][] = 'implementation_item_form_validate';
}
function implementation_item_form_validate($form, &$form_state) { //echo "<pre>";print_r($form_state);die;
  // Random example, if the title is 'test' throw an error
  //echo "<pre>";print_r($_REQUEST);die;


if($form_state['input']['signature']=="2"){

if ($_REQUEST['logic_model_title_link0_0'] == '') {//echo "in";die;
    form_set_error('logic_model_title_link0_0', '<div class="implementation-requried">Logic Model is required.</div>');
  }
  if($form_state['input']['Strategies']=="CSAP 6"){
      if($form_state['input']['csap_6']==''){
        form_set_error('csap_6', '<div class="implementation-requried">CSAP 6 Title required.</div>');
      }
  }


  if($form_state['input']['csap_6']=="Alternative Activities"){

        $Alternative_unique = $form_state['values']['Alternative_Activities'];
    $check_unique_query = db_query("SELECT Alternative_Activities FROM {alternative_activitity}")->fetchAll();
   $Alternative_Activities_unique = $check_unique_query;
   $getCount=count($Alternative_Activities_unique);
   for($i=0;$i<$getCount;$i++){
   if($Alternative_unique==$Alternative_Activities_unique[$i]->Alternative_Activities) {
   form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Alternative_Activities']==''){
        form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is required.</div>');
      }
           }

           if($form_state['input']['csap_6']=="Community-based Process"){


         $Community_unique = $form_state['values']['Community_based_Process'];
    $Community_unique_query = db_query("SELECT Community_based_Process FROM {community_based}")->fetchAll();

   $Community_based_unique = $Community_unique_query;
   $getCount=count($Community_based_unique);
   for($i=0;$i<$getCount;$i++){
   if($Community_unique==$Community_based_unique[$i]->Community_based_Process) {
   form_set_error('Community_based_Process', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['Community_based_Process']==''){
        form_set_error('Community_based_Process', '<div class="implementation-requried">Title is required.</div>');
      }
  }

  if($form_state['input']['csap_6']=="Education"){


     $education_csap = $form_state['values']['education_csap'];
     $education_unique_query = db_query("SELECT education_csap FROM {education}")->fetchAll();
     $education_unique = $education_unique_query;
     $getCount=count($education_unique);
     for($i=0;$i<$getCount;$i++){
     if($education_csap==$education_unique[$i]->education_csap) {
     form_set_error('education_csap', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['education_csap']==''){
        form_set_error('education_csap', '<div class="implementation-requried">Title is required.</div>');
      }
  }

   if($form_state['input']['csap_6']=="Environmental"){

      $environmental = $form_state['values']['environmental'];
     $environmental_unique_query = db_query("SELECT environmental FROM {environmental}")->fetchAll();
     $environmental_unique = $environmental_unique_query;
     $getCount=count($environmental_unique);
     for($i=0;$i<$getCount;$i++){
     if($environmental==$environmental_unique[$i]->environmental) {
     form_set_error('environmental', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['environmental']==''){
        form_set_error('environmental', '<div class="implementation-requried">Title is required.</div>');
      }
  }


    if($form_state['input']['csap_6']=="Environmental"){

      $environmental = $form_state['values']['environmental'];
     $environmental_unique_query = db_query("SELECT environmental FROM {environmental}")->fetchAll();
     $environmental_unique = $environmental_unique_query;
     $getCount=count($environmental_unique);
     for($i=0;$i<$getCount;$i++){
     if($environmental==$environmental_unique[$i]->environmental) {
     form_set_error('environmental', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['environmental']==''){
        form_set_error('environmental', '<div class="implementation-requried">Title is required.</div>');
      }
     }

     if($form_state['input']['csap_6']=="Information Dissemination"){


     $Information_Dissemination_csap6 = $form_state['values']['Information_Dissemination_csap6'];
     $Information_Dissemination_unique_query = db_query("SELECT Information_Dissemination_csap6 FROM {information_dissemination_details}")->fetchAll();
     $Information_Dissemination_unique = $Information_Dissemination_unique_query;
     $getCount=count($Information_Dissemination_unique);
     for($i=0;$i<$getCount;$i++){
     if($Information_Dissemination_csap6==$Information_Dissemination_unique[$i]->Information_Dissemination_csap6) {
     form_set_error('Information_Dissemination_csap6', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['Information_Dissemination_csap6']==''){

        form_set_error('Information_Dissemination_csap6', '<div class="implementation-requried">Title is required.</div>');
      }
    }

      if($form_state['input']['csap_7']=="Enhance Skills"){


    $Enhance_Skills = $form_state['values']['Enhance_Skills'];
     $Enhance_Skills_unique_query = db_query("SELECT Enhance_Skills FROM {enhance_skills}")->fetchAll();
     $Enhance_Skills_unique = $Enhance_Skills_unique_query;
     $getCount=count($Enhance_Skills_unique);
     for($i=0;$i<$getCount;$i++){
     if($Enhance_Skills==$Enhance_Skills_unique[$i]->Enhance_Skills) {
     form_set_error('Enhance_Skills', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Enhance_Skills']==''){
        form_set_error('Enhance_Skills', '<div class="implementation-requried">Title is required.</div>');
      }
  }

   if($form_state['input']['csap_7']=="Providing Support"){


    $Providing_Support = $form_state['values']['Providing_Support'];
     $Providing_Support_unique_query = db_query("SELECT Providing_Support FROM {providing_Support}")->fetchAll();
     $Providing_Support_unique = $Providing_Support_unique_query;
     $getCount=count($Providing_Support_unique);
     for($i=0;$i<$getCount;$i++){
     if($Providing_Support==$Providing_Support_unique[$i]->Providing_Support) {
     form_set_error('Providing_Support', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['Providing_Support']==''){
        form_set_error('Providing_Support', '<div class="implementation-requried">Title is required.</div>');
      }
  }


  if($form_state['input']['csap_7']=="Provide Information"){

        $Provide_Information = $form_state['values']['Provide_Information'];
     $Provide_Information_unique_query = db_query("SELECT Provide_Information FROM {Provide_Information}")->fetchAll();
     $Provide_Information_unique = $Provide_Information_unique_query;
     $getCount=count($Provide_Information_unique);
     for($i=0;$i<$getCount;$i++){
     if($Provide_Information==$Provide_Information_unique[$i]->Provide_Information) {
     form_set_error('Provide_Information', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Provide_Information']==''){
        form_set_error('Provide_Information', '<div class="implementation-requried">Title is required.</div>');
      }
  }

   if($form_state['input']['csap_7']=="Change Consequences"){

    $change_consequences = $form_state['values']['change_consequences'];
     $change_consequences_unique_query = db_query("SELECT change_consequences FROM {change_consequences}")->fetchAll();
     $change_consequences_unique = $change_consequences_unique_query;
     $getCount=count($change_consequences_unique);
     for($i=0;$i<$getCount;$i++){
     if($change_consequences==$change_consequences_unique[$i]->change_consequences) {
     form_set_error('change_consequences', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['change_consequences']==''){
        form_set_error('change_consequences', '<div class="implementation-requried">Title is required.</div>');
      }
  }

   if($form_state['input']['csap_7']=="Change Access and Barries"){

       $Change_Access = $form_state['values']['Change_Access'];
     $Change_Access_unique_query = db_query("SELECT Change_Access FROM {change_access}")->fetchAll();
     $Change_Access_unique = $Change_Access_unique_query;
     $getCount=count($Change_Access_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Access==$Change_Access_unique[$i]->Change_Access) {
     form_set_error('Change_Access', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Change_Access']==''){
        form_set_error('Change_Access', '<div class="implementation-requried">Title is required.</div>');
      }
  }


          if($form_state['input']['csap_7']=="Modify/Change Policies"){



     $Change_Policies = $form_state['values']['Change_Policies'];
     $Change_Policies_unique_query = db_query("SELECT Change_Policies FROM {Change_Policies}")->fetchAll();
     $Change_Policies_unique = $Change_Policies_unique_query;
     $getCount=count($Change_Policies_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Policies==$Change_Policies_unique[$i]->Change_Policies) {
     form_set_error('Change_Policies', '<div class="implementation-requried">title is already taken.</div>');
      }
    }

      if($form_state['input']['Change_Policies']==''){
        form_set_error('Change_Policies', '<div class="implementation-requried">Title is required.</div>');
      }
  }

   if($form_state['input']['csap_7']=="Physical Design"){

           $Physical_Design = $form_state['values']['Physical_Design'];
     $Physical_Design_unique_query = db_query("SELECT Physical_Design FROM {physical_design}")->fetchAll();
     $Physical_Design_unique = $Physical_Design_unique_query;
     $getCount=count($Physical_Design_unique);
     for($i=0;$i<$getCount;$i++){
     if($Physical_Design==$Physical_Design_unique[$i]->Physical_Design) {
     form_set_error('Physical_Design', '<div class="implementation-requried">title is already taken.</div>');
      }

    }
      if($form_state['input']['Physical_Design']==''){
        form_set_error('Physical_Design', '<div class="implementation-requried">title is required.</div>');
      }
  }
//end
}


if($form_state['input']['signature']=="0"){
if ($_REQUEST['logic_model_title_link0_0'] == '') {//echo "in";die;
    form_set_error('logic_model_title_link0_0', '<div class="implementation-requried">Logic Model is required.</div>');

  }
  if($form_state['input']['Strategies']=="CSAP 6"){
      if($form_state['input']['csap_6']==''){
        form_set_error('csap_6', '<div class="implementation-requried">CSAP 6 Title required.</div>');
      }
  }


  if($form_state['input']['csap_6']=="Alternative Activities"){

        $Alternative_unique = $form_state['values']['Alternative_Activities'];
    $check_unique_query = db_query("SELECT Alternative_Activities FROM {alternative_activitity}")->fetchAll();
   $Alternative_Activities_unique = $check_unique_query;
   $getCount=count($Alternative_Activities_unique);
   for($i=0;$i<$getCount;$i++){
   if($Alternative_unique==$Alternative_Activities_unique[$i]->Alternative_Activities) {
   form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Alternative_Activities']==''){
        form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is required.</div>');
      }
           }

           if($form_state['input']['csap_6']=="Community-based Process"){


         $Community_unique = $form_state['values']['Community_based_Process'];
    $Community_unique_query = db_query("SELECT Community_based_Process FROM {community_based}")->fetchAll();

   $Community_based_unique = $Community_unique_query;
   $getCount=count($Community_based_unique);
   for($i=0;$i<$getCount;$i++){
   if($Community_unique==$Community_based_unique[$i]->Community_based_Process) {
   form_set_error('Community_based_Process', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['Community_based_Process']==''){
        form_set_error('Community_based_Process', '<div class="implementation-requried">Title is required.</div>');
      }
  }

  if($form_state['input']['csap_6']=="Education"){


     $education_csap = $form_state['values']['education_csap'];
     $education_unique_query = db_query("SELECT education_csap FROM {education}")->fetchAll();
     $education_unique = $education_unique_query;
     $getCount=count($education_unique);
     for($i=0;$i<$getCount;$i++){
     if($education_csap==$education_unique[$i]->education_csap) {
     form_set_error('education_csap', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['education_csap']==''){
        form_set_error('education_csap', '<div class="implementation-requried">Title is required.</div>');
      }
  }

   if($form_state['input']['csap_6']=="Environmental"){

      $environmental = $form_state['values']['environmental'];
     $environmental_unique_query = db_query("SELECT environmental FROM {environmental}")->fetchAll();
     $environmental_unique = $environmental_unique_query;
     $getCount=count($environmental_unique);
     for($i=0;$i<$getCount;$i++){
     if($environmental==$environmental_unique[$i]->environmental) {
     form_set_error('environmental', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['environmental']==''){
        form_set_error('environmental', '<div class="implementation-requried">Title is required.</div>');
      }
  }


    if($form_state['input']['csap_6']=="Environmental"){

      $environmental = $form_state['values']['environmental'];
     $environmental_unique_query = db_query("SELECT environmental FROM {environmental}")->fetchAll();
     $environmental_unique = $environmental_unique_query;
     $getCount=count($environmental_unique);
     for($i=0;$i<$getCount;$i++){
     if($environmental==$environmental_unique[$i]->environmental) {
     form_set_error('environmental', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['environmental']==''){
        form_set_error('environmental', '<div class="implementation-requried">Title is required.</div>');
      }
     }

     if($form_state['input']['csap_6']=="Information Dissemination"){


     $Information_Dissemination_csap6 = $form_state['values']['Information_Dissemination_csap6'];
     $Information_Dissemination_unique_query = db_query("SELECT Information_Dissemination_csap6 FROM {information_dissemination_details}")->fetchAll();
     $Information_Dissemination_unique = $Information_Dissemination_unique_query;
     $getCount=count($Information_Dissemination_unique);
     for($i=0;$i<$getCount;$i++){
     if($Information_Dissemination_csap6==$Information_Dissemination_unique[$i]->Information_Dissemination_csap6) {
     form_set_error('Information_Dissemination_csap6', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['Information_Dissemination_csap6']==''){

        form_set_error('Information_Dissemination_csap6', '<div class="implementation-requried">Title is required.</div>');
      }
    }

      if($form_state['input']['csap_7']=="Enhance Skills"){


    $Enhance_Skills = $form_state['values']['Enhance_Skills'];
     $Enhance_Skills_unique_query = db_query("SELECT Enhance_Skills FROM {enhance_skills}")->fetchAll();
     $Enhance_Skills_unique = $Enhance_Skills_unique_query;
     $getCount=count($Enhance_Skills_unique);
     for($i=0;$i<$getCount;$i++){
     if($Enhance_Skills==$Enhance_Skills_unique[$i]->Enhance_Skills) {
     form_set_error('Enhance_Skills', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Enhance_Skills']==''){
        form_set_error('Enhance_Skills', '<div class="implementation-requried">Title is required.</div>');
      }
  }

   if($form_state['input']['csap_7']=="Providing Support"){


    $Providing_Support = $form_state['values']['Providing_Support'];
     $Providing_Support_unique_query = db_query("SELECT Providing_Support FROM {providing_Support}")->fetchAll();
     $Providing_Support_unique = $Providing_Support_unique_query;
     $getCount=count($Providing_Support_unique);
     for($i=0;$i<$getCount;$i++){
     if($Providing_Support==$Providing_Support_unique[$i]->Providing_Support) {
     form_set_error('Providing_Support', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['Providing_Support']==''){
        form_set_error('Providing_Support', '<div class="implementation-requried">Title is required.</div>');
      }
  }


  if($form_state['input']['csap_7']=="Provide Information"){

        $Provide_Information = $form_state['values']['Provide_Information'];
     $Provide_Information_unique_query = db_query("SELECT Provide_Information FROM {Provide_Information}")->fetchAll();
     $Provide_Information_unique = $Provide_Information_unique_query;
     $getCount=count($Provide_Information_unique);
     for($i=0;$i<$getCount;$i++){
     if($Provide_Information==$Provide_Information_unique[$i]->Provide_Information) {
     form_set_error('Provide_Information', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Provide_Information']==''){
        form_set_error('Provide_Information', '<div class="implementation-requried">Title is required.</div>');
      }
  }

   if($form_state['input']['csap_7']=="Change Consequences"){

    $change_consequences = $form_state['values']['change_consequences'];
     $change_consequences_unique_query = db_query("SELECT change_consequences FROM {change_consequences}")->fetchAll();
     $change_consequences_unique = $change_consequences_unique_query;
     $getCount=count($change_consequences_unique);
     for($i=0;$i<$getCount;$i++){
     if($change_consequences==$change_consequences_unique[$i]->change_consequences) {
     form_set_error('change_consequences', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['change_consequences']==''){
        form_set_error('change_consequences', '<div class="implementation-requried">Title is required.</div>');
      }
  }

   if($form_state['input']['csap_7']=="Change Access and Barries"){

       $Change_Access = $form_state['values']['Change_Access'];
     $Change_Access_unique_query = db_query("SELECT Change_Access FROM {change_access}")->fetchAll();
     $Change_Access_unique = $Change_Access_unique_query;
     $getCount=count($Change_Access_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Access==$Change_Access_unique[$i]->Change_Access) {
     form_set_error('Change_Access', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Change_Access']==''){
        form_set_error('Change_Access', '<div class="implementation-requried">Title is required.</div>');
      }
  }
          if($form_state['input']['csap_7']=="Modify/Change Policies"){

     $Change_Policies = $form_state['values']['Change_Policies'];
     $Change_Policies_unique_query = db_query("SELECT Change_Policies FROM {Change_Policies}")->fetchAll();
     $Change_Policies_unique = $Change_Policies_unique_query;
     $getCount=count($Change_Policies_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Policies==$Change_Policies_unique[$i]->Change_Policies) {
     form_set_error('Change_Policies', '<div class="implementation-requried">title is already taken.</div>');
      }
    }

      if($form_state['input']['Change_Policies']==''){
        form_set_error('Change_Policies', '<div class="implementation-requried">Title is required.</div>');
      }
  }

   if($form_state['input']['csap_7']=="Physical Design"){

           $Physical_Design = $form_state['values']['Physical_Design'];
     $Physical_Design_unique_query = db_query("SELECT Physical_Design FROM {physical_design}")->fetchAll();
     $Physical_Design_unique = $Physical_Design_unique_query;
     $getCount=count($Physical_Design_unique);
     for($i=0;$i<$getCount;$i++){
     if($Physical_Design==$Physical_Design_unique[$i]->Physical_Design) {
     form_set_error('Physical_Design', '<div class="implementation-requried">title is already taken.</div>');
      }

    }
      if($form_state['input']['Physical_Design']==''){
        form_set_error('Physical_Design', '<div class="implementation-requried">title is required.</div>');
      }
  }
//end
}




if($form_state['input']['signature']=="1"){

  if ($_REQUEST['logic_model_title_link0_0'] == '') {//echo "in";die;
    form_set_error('logic_model_title_link0_0', '<div class="implementation-requried">Logic Model is required.</div>');

  }
  if($form_state['input']['Strategies']=="CSAP 6"){
      if($form_state['input']['csap_6']==''){
        form_set_error('csap_6', '<div class="implementation-requried">CSAP 6 Title required.</div>');
      }
  }

  if($form_state['input']['csap_6']=="Alternative Activities"){

        $Alternative_unique = $form_state['values']['Alternative_Activities'];
    $check_unique_query = db_query("SELECT Alternative_Activities FROM {alternative_activitity}")->fetchAll();
   $Alternative_Activities_unique = $check_unique_query;
   $getCount=count($Alternative_Activities_unique);
   for($i=0;$i<$getCount;$i++){
   if($Alternative_unique==$Alternative_Activities_unique[$i]->Alternative_Activities) {
   form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Alternative_Activities']==''){
        form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is required.</div>');
      }

    if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
       }
       if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }

  }

  if($form_state['input']['csap_6']=="Community-based Process"){


         $Community_unique = $form_state['values']['Community_based_Process'];
    $Community_unique_query = db_query("SELECT Community_based_Process FROM {community_based}")->fetchAll();

   $Community_based_unique = $Community_unique_query;
   $getCount=count($Community_based_unique);
   for($i=0;$i<$getCount;$i++){
   if($Community_unique==$Community_based_unique[$i]->Community_based_Process) {
   form_set_error('Community_based_Process', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['Community_based_Process']==''){
        form_set_error('Community_based_Process', '<div class="implementation-requried">Title is required.</div>');
      }
        if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
       }
       if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }

  }


    if($form_state['input']['csap_6']=="Education"){


     $education_csap = $form_state['values']['education_csap'];
     $education_unique_query = db_query("SELECT education_csap FROM {education}")->fetchAll();
     $education_unique = $education_unique_query;
     $getCount=count($education_unique);
     for($i=0;$i<$getCount;$i++){
     if($education_csap==$education_unique[$i]->education_csap) {
     form_set_error('education_csap', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['education_csap']==''){
        form_set_error('education_csap', '<div class="implementation-requried">Title is required.</div>');
      }
        if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
       }
       if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }

}
    if($form_state['input']['csap_6']=="Environmental"){

      $environmental = $form_state['values']['environmental'];
     $environmental_unique_query = db_query("SELECT environmental FROM {environmental}")->fetchAll();
     $environmental_unique = $environmental_unique_query;
     $getCount=count($environmental_unique);
     for($i=0;$i<$getCount;$i++){
     if($environmental==$environmental_unique[$i]->environmental) {
     form_set_error('environmental', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['environmental']==''){
        form_set_error('environmental', '<div class="implementation-requried">Title is required.</div>');
      }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
       }
    }

     if($form_state['input']['csap_6']=="Information Dissemination"){


     $Information_Dissemination_csap6 = $form_state['values']['Information_Dissemination_csap6'];
     $Information_Dissemination_unique_query = db_query("SELECT Information_Dissemination_csap6 FROM {information_dissemination_details}")->fetchAll();
     $Information_Dissemination_unique = $Information_Dissemination_unique_query;
     $getCount=count($Information_Dissemination_unique);
     for($i=0;$i<$getCount;$i++){
     if($Information_Dissemination_csap6==$Information_Dissemination_unique[$i]->Information_Dissemination_csap6) {
     form_set_error('Information_Dissemination_csap6', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['Information_Dissemination_csap6']==''){

        form_set_error('Information_Dissemination_csap6', '<div class="implementation-requried">Title is required.</div>');
      }
    }
      if($form_state['input']['information_dissemination']=="Media"){


     if($form_state['input']['startdatetime']['date']!=""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']!=""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');

       }if($form_state['input']['Length_of_services']['time']!=""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }

    }

       if($form_state['input']['information_dissemination']=="Social Media"){


       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }
    }

     if($form_state['input']['information_dissemination']=="Presentations"){


       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }


     if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
    }
    if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }
}

     if($form_state['input']['information_dissemination']=="Distribution of Materials"){


       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }


     if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
    }
    if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }
}


// cadca 7

     if($form_state['input']['Strategies']=="CADCA 7"){

     if($form_state['input']['csap_7']==''){
       form_set_error('csap_7', '<div class="implementation-requried">CSAP 7 Title required.</div>');
     }


      if($form_state['input']['csap_7']=="Enhance Skills"){


    $Enhance_Skills = $form_state['values']['Enhance_Skills'];
     $Enhance_Skills_unique_query = db_query("SELECT Enhance_Skills FROM {enhance_skills}")->fetchAll();
     $Enhance_Skills_unique = $Enhance_Skills_unique_query;
     $getCount=count($Enhance_Skills_unique);
     for($i=0;$i<$getCount;$i++){
     if($Enhance_Skills==$Enhance_Skills_unique[$i]->Enhance_Skills) {
     form_set_error('Enhance_Skills', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Enhance_Skills']==''){
        form_set_error('Enhance_Skills', '<div class="implementation-requried">Title is required.</div>');
      }
        if($form_state['input']['Enhance_Activity']==''){
        form_set_error('Enhance_Activity', '<div class="implementation-requried">Activity title is required.</div>');
      }


     if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      }


      if($form_state['input']['csap_7']=="Providing Support"){


    $Providing_Support = $form_state['values']['Providing_Support'];
     $Providing_Support_unique_query = db_query("SELECT Providing_Support FROM {providing_Support}")->fetchAll();
     $Providing_Support_unique = $Providing_Support_unique_query;
     $getCount=count($Providing_Support_unique);
     for($i=0;$i<$getCount;$i++){
     if($Providing_Support==$Providing_Support_unique[$i]->Providing_Support) {
     form_set_error('Providing_Support', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['Providing_Support']==''){
        form_set_error('Providing_Support', '<div class="implementation-requried">Title is required.</div>');
      }
       if($form_state['input']['Providing_Support_activity']==''){
        form_set_error('Providing_Support_activity', '<div class="implementation-requried">Activity title is required.</div>');
      }


     if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      }

       if($form_state['input']['csap_7']=="Provide Information"){

        $Provide_Information = $form_state['values']['Provide_Information'];
     $Provide_Information_unique_query = db_query("SELECT Provide_Information FROM {Provide_Information}")->fetchAll();
     $Provide_Information_unique = $Provide_Information_unique_query;
     $getCount=count($Provide_Information_unique);
     for($i=0;$i<$getCount;$i++){
     if($Provide_Information==$Provide_Information_unique[$i]->Provide_Information) {
     form_set_error('Provide_Information', '<div class="implementation-requried">Title is already taken.</div>');
      }


    }


      if($form_state['input']['Provide_Information']==''){
        form_set_error('Provide_Information', '<div class="implementation-requried">Title is required.</div>');
      }
        if($form_state['input']['Provide_Information_activity']==''){
        form_set_error('Provide_Information_activity', '<div class="implementation-requried">Activity title is required.</div>');
      }
      }


    if($form_state['input']['Provide_Information_activity']=="Informational materials disseminated"){

       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
    }
      if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }
}


        if($form_state['input']['csap_7']=="Change Consequences"){

    $change_consequences = $form_state['values']['change_consequences'];
     $change_consequences_unique_query = db_query("SELECT change_consequences FROM {change_consequences}")->fetchAll();
     $change_consequences_unique = $change_consequences_unique_query;
     $getCount=count($change_consequences_unique);
     for($i=0;$i<$getCount;$i++){
     if($change_consequences==$change_consequences_unique[$i]->change_consequences) {
     form_set_error('change_consequences', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['change_consequences']==''){
        form_set_error('change_consequences', '<div class="implementation-requried">Title is required.</div>');
      }
         if($form_state['input']['change_activity']==''){
        form_set_error('change_activity', '<div class="implementation-requried">Activity Title is required.</div>');
      }

         if($form_state['input']['startdatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">Start Date is required.</div>');
      }
         if($form_state['input']['enddatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">End Date is required.</div>');
      }


      }


        if($form_state['input']['csap_7']=="Change Access and Barries"){

       $Change_Access = $form_state['values']['Change_Access'];
     $Change_Access_unique_query = db_query("SELECT Change_Access FROM {change_access}")->fetchAll();
     $Change_Access_unique = $Change_Access_unique_query;
     $getCount=count($Change_Access_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Access==$Change_Access_unique[$i]->Change_Access) {
     form_set_error('Change_Access', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Change_Access']==''){
        form_set_error('Change_Access', '<div class="implementation-requried">Title is required.</div>');
      }
        if($form_state['input']['Change_Access_activity']==''){
        form_set_error('Change_Access_activity', '<div class="implementation-requried">Activity title is required.</div>');
      }


         if($form_state['input']['startdatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">Start Date is required.</div>');
      }
         if($form_state['input']['enddatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">End Date is required.</div>');
      }


      }

          if($form_state['input']['csap_7']=="Modify/Change Policies"){



     $Change_Policies = $form_state['values']['Change_Policies'];
     $Change_Policies_unique_query = db_query("SELECT Change_Policies FROM {Change_Policies}")->fetchAll();
     $Change_Policies_unique = $Change_Policies_unique_query;
     $getCount=count($Change_Policies_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Policies==$Change_Policies_unique[$i]->Change_Policies) {
     form_set_error('Change_Policies', '<div class="implementation-requried">title is already taken.</div>');
      }
    }

      if($form_state['input']['Change_Policies']==''){
        form_set_error('Change_Policies', '<div class="implementation-requried">Title is required.</div>');
      }
          if($form_state['input']['Change_Policies_activity']==''){
        form_set_error('Change_Policies_activity', '<div class="implementation-requried">Activity title is required.</div>');
      }


         if($form_state['input']['startdatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">Start Date is required.</div>');
      }

         if($form_state['input']['enddatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">End Date is required.</div>');
      }


      }

     if($form_state['input']['csap_7']=="Physical Design"){

           $Physical_Design = $form_state['values']['Physical_Design'];
     $Physical_Design_unique_query = db_query("SELECT Physical_Design FROM {physical_design}")->fetchAll();
     $Physical_Design_unique = $Physical_Design_unique_query;
     $getCount=count($Physical_Design_unique);
     for($i=0;$i<$getCount;$i++){
     if($Physical_Design==$Physical_Design_unique[$i]->Physical_Design) {
     form_set_error('Physical_Design', '<div class="implementation-requried">title is already taken.</div>');
      }

    }


      if($form_state['input']['Physical_Design']==''){
        form_set_error('Physical_Design', '<div class="implementation-requried">title is required.</div>');
      }
          if($form_state['input']['Physical_Design_activity']==''){
        form_set_error('Physical_Design_activity', '<div class="implementation-requried">Activity Title is required.</div>');
      }

         if($form_state['input']['startdatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">Start Date is required.</div>');
      }
         if($form_state['input']['enddatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">End Date is required.</div>');
      }

      }

     if(!isset($form_state['input']['person_conducting']) && ($form_state['input']['csap_7']=="Enhance Skills" || $form_state['input']['csap_7']=="Providing Support" || $form_state['input']['csap_7']=="Provide Information" )){
         form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
     }

     if($form_state['input']['Level_Success']==""){
         form_set_error('Level_Success', '<div class="implementation-requried">Level of Success is required.</div>');
     }

       if($form_state['input']['Funding_supports']==""){
         form_set_error('Funding_supports', '<div class="implementation-requried"> Funding supports is required.</div>');
     }

     if($form_state['input']['csap_7']!="Provide Information" && $form_state['input']['csap_7']!="Change Consequences" && $form_state['input']['csap_7']!="Change Access and Barries" && $form_state['input']['csap_7']!="Modify/Change Policies" && $form_state['input']['csap_7']!="Physical Design" && $form_state['input']['Provide_Information_activity']!="Informational materials prepared/ produced" && $form_state['input']['Provide_Information_activity']!="Information on DFC Coalition Web site")
     {


      if($form_state['input']['enddatetime']['date']==""){
          form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
      }
      if($form_state['input']['Length_of_services']['time']==""){
          form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
      }
     }
 }

      if($form_state['input']['description_of_purpose']==""){
      form_set_error('description_of_purpose', '<div class="implementation-requried">Description of Purpose is required.</div>');
}     if($form_state['input']['description_of_outcome']==""){
       form_set_error('description_of_outcome', '<div class="implementation-requried">Description of Outcome is required.</div>');
}


}

  //return $form_state;
}



 // validation ends



 // implementation add sunmit start here

function implementation_item_form_submit($form, &$form_state)
{

    //echo "<pre>";print_r($_REQUEST);die;

    if(isset($form_state['values']['csap_6']) && $form_state['values']['csap_6']!=''){
        $eventTitle="CSAP 6 - ".$form_state['values']['csap_6'];
    }else{
        $eventTitle="CADCA 7 - ".$form_state['values']['csap_7'];
    }
    $eventStartDate=$form_state['values']['startdatetime'];
    $eventEndDate=$form_state['values']['enddatetime'];
    $event_status=($form_state['values']['signature'] == "2" || $form_state['values']['signature']=="0" || $form_state['values']['signature']=="1") ? "Pending" : "Completed";
    /* Calendar Event Creation */
    $event_node_id=create_data_event_node($eventTitle, $user->uid,$createdDate,$changedDate,$event_type="Implementation", $status="1",$eventStartDate,$eventEndDate,$event_status);

    $query = db_select('planning_details', 'a');
    $query->fields('a', array(
        'planning_id',
        'title'
    ));
    $query->orderBy('a.title', 'ASC');
    $planning_lists = $query->execute()
        ->fetchAll(); //echo "<pre>";print_r($_REQUEST);die;
    // $lmCount = 0;
    // foreach ($planning_lists as $plankey => $planVal)
    // {
    //     $plan_id = $planVal->planning_id;
    //     $planning_data_lists = db_query("SELECT * FROM {planning_details} WHERE planning_id = " . $plan_id)->fetchAll();
    //     $chkSerialize = @unserialize($planning_data_lists[0]->contributing_factor);
    //     if ($chkSerialize !== false)
    //     {
    //         $contributingFactor = unserialize($planning_data_lists[0]->contributing_factor);
    //         $interventionsCheckedItems = unserialize($planning_data_lists[0]->interventions);
    //         $logicModelCount = count($contributingFactor['contributingCollection']);
    //         for ($i = 0;$i < $logicModelCount;$i++)
    //         {
    //             if (isset($_REQUEST['contributing_factor' . $plankey . '_' . $i]))
    //             {
    //                 $cfLogicModels['contributing_factor' . $plankey . '_' . $i] = $_REQUEST['contributing_factor' . $plankey . '_' . $i];
    //             }
    //             for ($inv = 0;$inv < count($_REQUEST['interventions' . $plankey . '_' . $i]);$inv++)
    //             {
    //                 if (isset($_REQUEST['interventions' . $plankey . '_' . $i]))
    //                 {
    //                     $inLogicModels['interventions' . $plankey . '_' . $i] = $_REQUEST['interventions' . $plankey . '_' . $i];
    //                 }
    //             }
    //             if (isset($_REQUEST['logic_model_title_link' . $plankey . '_' . $i]))
    //             {
    //                 $logicModelTitle = $_REQUEST['logic_model_title_link' . $plankey . '_' . $i];
    //             }
    //         }
    //
    //     }
    //     else
    //     {
    //         if (isset($_REQUEST['contributing_factor' . $plankey . '_' . $lmCount]))
    //         {
    //             $cfLogicModels['contributing_factor' . $plankey . '_' . $lmCount] = $_REQUEST['contributing_factor' . $plankey . '_' . $lmCount];
    //         }
    //         for ($inv = 0;$inv < count($_REQUEST['interventions' . $plankey . '_' . $lmCount]);$inv++)
    //         {
    //             if (isset($_REQUEST['interventions' . $plankey . '_' . $lmCount]))
    //             {
    //                 $inLogicModels['interventions' . $plankey . '_' . $lmCount] = $_REQUEST['interventions' . $plankey . '_' . $lmCount];
    //             }
    //         }
    //         $lmCount++;
    //     }
    //
    // } //echo "<pre>";print_r($inLogicModels);die;

    $logicModelTitle=$_REQUEST['logic_model_title_link0_0'];

    if(isset($_REQUEST['contributing_factor']) && $_REQUEST['contributing_factor'][0]!=''){
      $cfLogicModels=$_REQUEST['contributing_factor'][0];
    }
    if(isset($_REQUEST['interventions'][0]) && $_REQUEST['interventions'][0]!=''){
      $inLogicModels=$_REQUEST['interventions'][0];
    }

    $conArrModels['contributing_factor'] = $cfLogicModels;
    $invArrModels['interventions'] = $inLogicModels;

    $person_conducting = "";
    if (count($_REQUEST['person_conducting']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['person_conducting']);$i++)
        {
            $person_conducting['person_conducting'][$i] = $_REQUEST['person_conducting'][$i];
        }
    }
    $person_conductin_data = serialize($person_conducting);

    if (isset($_REQUEST['Attachments_fid']['files']) && count($_REQUEST['Attachments_fid']['files']) > 0)
    {
        $ui = 0;
        foreach ($_REQUEST['Attachments_fid']['files'] as $uploadId => $uploadVal)
        {
            $file_upload_ids['upload_id'][$ui] = $uploadId;
            $ui++;
        }
    }

    $Members_Invloved = "";
    if (count($_REQUEST['Members_Invloved']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['Members_Invloved']);$i++)
        {
            $Members_Invloved['Members_Invloved'][$i] = $_REQUEST['Members_Invloved'][$i];
        }
    }
    $members_invloved_data = serialize($Members_Invloved);

    $counts = $_REQUEST['hidden_field'];

    $Donation_select = $Monetary_Value = $Comment = array();
    if (count($_REQUEST['Donation_select']) > 0)
    {
        $i = 0;
        foreach ($_REQUEST['Donation_select'] as $keyz => $valuez)
        {
            $Donation_select['Donation_select'][$i] = $valuez;
            $Monetary_Value['Monetary_Value'][$i] = $_REQUEST['Monetary_Value'][$keyz];
            $Comment['Comment'][$i] = $_REQUEST['Comment'][$keyz];
            $i++;
        }
    }
    $Donation_select_data = serialize($Donation_select);
    $Monetary_Value_data = serialize($Monetary_Value);
    $Comment_data = serialize($Comment);


    $contact_involuved = "";
    if (count($_REQUEST['contact_person_conducting']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['contact_person_conducting']);$i++)
        {
            $contact_involuved['contact_person_conducting'][$i] = $_REQUEST['contact_person_conducting'][$i];
        }
    }
    $contact_involuved_data = serialize($contact_involuved);


    //echo "<pre>";print_r($_REQUEST);die;
    $Media_outlet = $Media_submit = $media_date = $Published = $if_yes_publication = $Reach = $media_notes = array();
    if (count($_REQUEST['media_outlet']) > 0)
    {
        $i = 0;
        foreach ($_REQUEST['media_outlet'] as $keyz => $valuez)
        {
            $Media_outlet['media_outlet'][$i] = $valuez;
            $m_type_information['media_type_information'][$i] = $_REQUEST['media_type_information'][$keyz];
            $Media_submit['media_submit'][$i] = $_REQUEST['media_submit'][$keyz];
            $media_date['media_date'][$i] = $_REQUEST['media_date'][$keyz];
            $Published['published'][$i] = $_REQUEST['published'][$keyz];
            $if_yes_publication['media_publish'][$i] = $_REQUEST['media_publish'][$keyz];
            $Reach['reach'][$i] = $_REQUEST['reach'][$keyz];
            $media_notes['media_notes'][$i] = $_REQUEST['media_notes'][$keyz];
            $i++;
        }
    }
    $Media_outlet_data = serialize($Media_outlet);
    $Media_submit_data = serialize($Media_submit);
    $media_date_data = serialize($media_date);
    $Published_data = serialize($Published);
    $if_yes_publication_data = serialize($if_yes_publication);
    $Reach_data = serialize($Reach);
    $media_notes_data = serialize($media_notes);

    $social_media_profile = $social_media_date = $social_media_submit = $social_media_impression = $social_media_notes = array();
    if (count($_REQUEST['social_media_profile']) > 0)
    {
        $j = 0;
        foreach ($_REQUEST['social_media_profile'] as $keyz => $valuez)
        {
            $social_media_profile['social_media_profile'][$j] = $valuez;
            $social_media_submit['social_media_submit'][$j] = $_REQUEST['social_media_submit'][$keyz];
            $social_media_date['social_media_date'][$j] = $_REQUEST['social_media_date'][$keyz];
            $social_media_impression['social_media_impression'][$j] = $_REQUEST['social_media_impression'][$keyz];
            $social_media_notes['social_media_notes'][$j] = $_REQUEST['social_media_notes'][$keyz];
            $j++;
        }
    }
    $social_media_profile_data = serialize($social_media_profile);
    $social_media_submit_data = serialize($social_media_submit);
    $social_media_date_data = serialize($social_media_date);
    $social_media_impression_data = serialize($social_media_impression);
    $social_media_notes_data = serialize($social_media_notes);

    $csa_6 = $form_state['values']['csap_6'];

    $imp_date_creation = date("F j, Y");

      $pending_status=($form_state['values']['signature'] == "2" || $form_state['values']['signature']=="0" || $form_state['values']['signature']=="1") ? "2" : "no";

    $implementation_id = db_insert('implementation_details')->fields(array(
        'contributing_factor_models' => serialize($conArrModels) ,
        'intervention_models' => serialize($invArrModels),
        'intervention_id' => (isset($_REQUEST['interventions0_0'][0]) && $_REQUEST['interventions0_0'][0]!='')?$_REQUEST['interventions0_0'][0]:$_REQUEST['interventions'][0],
        'contributing_factor_id' => (isset($_REQUEST['contributing_factor0_0']) && $_REQUEST['contributing_factor0_0']!='' )?$_REQUEST['contributing_factor0_0']:$_REQUEST['contributing_factor'][0],
        'personConductingContent' => $person_conductin_data,
        'Strategies' => $form_state['values']['Strategies'],
        'csap_6' => $form_state['values']['csap_6'],
        'csap_7' => $form_state['values']['csap_7'],
        'startdatetime' => $form_state['values']['startdatetime'],
        'enddatetime' => $form_state['values']['enddatetime'],
        'Length_of_services' => $form_state['values']['Length_of_services'],
        'location' => $form_state['values']['location'],
        'country' => $form_state['values']['Country'],
        'address_1' => $form_state['values']['address_1'],
        'address_2' => $form_state['values']['address_2'],
        'city' => $form_state['values']['city'],
        'states' => $form_state['values']['states'],
        'zip_code' => $form_state['values']['zip_code'],
        'number_adult_served' => $form_state['values']['number_adult_served'],
        'number_youth_served' => $form_state['values']['number_youth_served'],
        'description_of_purpose' => $form_state['values']['description_of_purpose'],
        'description_of_outcome' => $form_state['values']['description_of_outcome'],
        'Members_Invloved' => $members_invloved_data,
         'contact_person_conducting' =>$contact_involuved_data,
        'Donation_select' => $Donation_select_data,
        'Monetary_Value' => $Monetary_Value_data,
        'Comment' => $Comment_data,
        'Attachments_fid' => (isset($file_upload_ids) && count($file_upload_ids) > "0") ? serialize($file_upload_ids) : "",
        'Attachments_notes' => $form_state['values']['Attachments_notes'],
        'logic_model_title_link' => $logicModelTitle,
        'is_pending' =>$pending_status,
        'signature' => ($form_state['values']['signature'] == "2") ? $form_state['values']['signature'] : "0",
        'user_id' => $form_state['values']['imp_user_id'],
        'event_node_id' => $event_node_id,
        'created_at' => $imp_date_creation,
        'updated_at' => $imp_date_creation,
    ))->execute();

    $lastId = Database::getConnection()->lastInsertId('implementation_id');

    if (isset($_REQUEST['Alternative_Activities']) && $_REQUEST['Alternative_Activities'] != '')
    {
        $csap_6 = db_insert('alternative_activitity')->fields(array(
            'implementation_id' => $lastId,
            'Alternative_Activities' => $form_state['values']['Alternative_Activities'],
        ))->execute();
    }

    if (isset($_REQUEST['Community_based_Process']) && $_REQUEST['Community_based_Process'] != '')
    {
        $csap_6 = db_insert('community_based')->fields(array(
            'implementation_id' => $lastId,
            'Community_based_Process' => $form_state['values']['Community_based_Process'],
        ))->execute();
    }

    if (isset($_REQUEST['education_csap']) && $_REQUEST['education_csap'] != '')
    {
        $csap_6 = db_insert('education')->fields(array(
            'implementation_id' => $lastId,
            'education_csap' => $form_state['values']['education_csap'],
        ))->execute();
    }
    if (isset($_REQUEST['environmental']) && $_REQUEST['environmental'] != '')
    {
        $csap_6 = db_insert('environmental')->fields(array(
            'implementation_id' => $lastId,
            'environmental' => $form_state['values']['environmental'],
        ))->execute();
    }

    if (isset($_REQUEST['information_dissemination']) && $_REQUEST['information_dissemination'] != '')
    {
        $info_dis_id = db_insert('information_dissemination_details')->fields(array(
            'implementation_id' => $lastId,
            'Information_Dissemination_csap6' => $form_state['values']['Information_Dissemination_csap6'],
            'information_dissemination' => $form_state['values']['information_dissemination'],
        'number_adult_information' => $form_state['values']['number_adult_information'],
        'number_youth_information' => $form_state['values']['number_youth_information'],
        'number_adult_presentation' => $form_state['values']['number_adult_presentation'],
        'number_youth_presentation' => $form_state['values']['number_youth_presentation'],
        ))->execute();



        if (isset($_REQUEST['media_outlet']) && count($_REQUEST['media_outlet']) > 0 && $_REQUEST['information_dissemination'] == "Media")
        {
            $m_type_information = (isset($_REQUEST['information_dissemination']) && $_REQUEST['information_dissemination'] == "Media") ? $_REQUEST['media_type_information'] : "";



            $media_fields = db_insert('media')->fields(array(
                'implementation_id' => $lastId,
                'information_dissemination_id' => $info_dis_id,
                'media_type_information' => $form_state['values']['media_type_information'],
                'Media_outlet' => $Media_outlet_data,
                'Media_submit' => $Media_submit_data,
                'media_date' => $media_date_data,
                'Published' => $Published_data,
                'if_yes_publication' => $if_yes_publication_data,
                'Reach' => $Reach_data,
                'media_notes' => $media_notes_data,
            ))->execute();
        }
        if (isset($_REQUEST['social_media_profile']) && count($_REQUEST['social_media_profile']) > 0 && $_REQUEST['information_dissemination'] == "Social Media")
        {
            $media_fields = db_insert('social_media')->fields(array(
                'implementation_id' => $lastId,
                'information_dissemination_id' => $info_dis_id,
                'Social_Media_profile' => $social_media_profile_data,
                'Social_Media_Media_submit' => $social_media_submit_data,
                'social_media_date' => $social_media_date_data,
                'Social_Media_media_impression' => $social_media_impression_data,
                'Social_Media_media_notes' => $social_media_notes_data,
            ))->execute();
        }
    }

    // cacad 7 insert the values starts here
    if (isset($_REQUEST['Enhance_Skills']) && $_REQUEST['Enhance_Skills'] != '')
    {
        $csap_6 = db_insert('enhance_skills')->fields(array(
            'implementation_id' => $lastId,
            'Enhance_Skills' => $form_state['values']['Enhance_Skills'],
            'Enhance_Activity' => $form_state['values']['Enhance_Activity'],
            'others_for_all' => $form_state['values']['others_for_all'],
            'Funding_supports' => $form_state['values']['Funding_supports'],
            'Level_Success' => $form_state['values']['Level_Success'],

        ))->execute();
    }

    if (isset($_REQUEST['Providing_Support']) && $_REQUEST['Providing_Support'] != '')
    {
        $csap_6 = db_insert('providing_Support')->fields(array(
            'implementation_id' => $lastId,
            'Providing_Support' => $form_state['values']['Providing_Support'],
            'Providing_Support_activity' => $form_state['values']['Providing_Support_activity'],
            'others_for_all' => $form_state['values']['others_for_all'],
            'Funding_supports' => $form_state['values']['Funding_supports'],
            'Level_Success' => $form_state['values']['Level_Success'],
        ))->execute();
    }

    if (isset($_REQUEST['Provide_Information']) && $_REQUEST['Provide_Information'] != '')
    {
        $csap_6 = db_insert('Provide_Information')->fields(array(
            'implementation_id' => $lastId,
            'Provide_Information' => $form_state['values']['Provide_Information'],
            'Provide_Information_activity' => $form_state['values']['Provide_Information_activity'],
            'others_for_all' => $form_state['values']['others_for_all'],
            'Funding_supports' => $form_state['values']['Funding_supports'],
            'Level_Success' => $form_state['values']['Level_Success'],
        'number_adult_information' => $form_state['values']['number_adult_information'],
        'number_youth_information' => $form_state['values']['number_youth_information'],
        'number_adult_presentation' => $form_state['values']['number_adult_presentation'],
        'number_youth_presentation' => $form_state['values']['number_youth_presentation'],

        ))->execute();

        if (isset($_REQUEST['media_outlet']) && count($_REQUEST['media_outlet']) > 0 && $_REQUEST['Provide_Information_activity'] == "Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),")
        {
            $m_type_information_cacad = (isset($_REQUEST['Provide_Information_activity']) && $_REQUEST['Provide_Information_activity'] == "Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),") ? $_REQUEST['media_type_information'] : "";
            $media_fields = db_insert('media_cadca')->fields(array(
                'implementation_id' => $lastId,
                'Provide_Information_id' => $csap_6,
                'Media_Campaign_information' => $form_state['values']['Media_Campaign_information'],
                'Media_outlet' => $Media_outlet_data,
                'Media_submit' => $Media_submit_data,
                'media_date' => $media_date_data,
                'Published' => $Published_data,
                'if_yes_publication' => $if_yes_publication_data,
                'Reach' => $Reach_data,
                'media_notes' => $media_notes_data,
            ))->execute();
        }
        if (isset($_REQUEST['Provide_Information_activity']) && count($_REQUEST['social_media_profile']) > 0 && $_REQUEST['Provide_Information_activity'] == "Social networking (Facebook, Twitter, etc.)")
        {
            $media_fields_cacad = db_insert('Social_Media_cadca')->fields(array(
                'implementation_id' => $lastId,
                'Provide_Information_id' => $csap_6,
                'Social_Media_profile' => $social_media_profile_data,
                'Social_Media_Media_submit' => $social_media_submit_data,
                'social_media_date' => $social_media_date_data,
                'Social_Media_media_impression' => $social_media_impression_data,
                'Social_Media_media_notes' => $social_media_notes_data,
            ))->execute();
        }

    }

    if (isset($_REQUEST['change_consequences']) && $_REQUEST['change_consequences'] != '')
    {
        $csap_6 = db_insert('change_consequences')->fields(array(
            'implementation_id' => $lastId,
            'change_consequences' => $form_state['values']['change_consequences'],
            'change_activity' => $form_state['values']['change_activity'],
            'others_for_all' => $form_state['values']['others_for_all'],
            'Funding_supports' => $form_state['values']['Funding_supports'],
            'Level_Success' => $form_state['values']['Level_Success'],

            'number_adult_Business_design' => $form_state['values']['number_adult_Business_design'],
            'startdatetime_physical' => $form_state['values']['startdatetime_physical'],
            'enddatetime_physical' => $form_state['values']['enddatetime_physical'],
        ))->execute();
    }
    if (isset($_REQUEST['Change_Access']) && $_REQUEST['Change_Access'] != '')
    {
        $csap_6 = db_insert('change_access')->fields(array(
            'implementation_id' => $lastId,
            'Change_Access' => $form_state['values']['Change_Access'],
            'Change_Access_activity' => $form_state['values']['Change_Access_activity'],
            'others_for_all' => $form_state['values']['others_for_all'],
            'Funding_supports' => $form_state['values']['Funding_supports'],
            'Level_Success' => $form_state['values']['Level_Success'],
            'startdatetime_physical' => $form_state['values']['startdatetime_physical'],
            'enddatetime_physical' => $form_state['values']['enddatetime_physical'],
        ))->execute();
    }
    if (isset($_REQUEST['Change_Policies']) && $_REQUEST['Change_Policies'] != '')
    {
        $csap_6 = db_insert('Change_Policies')->fields(array(
            'implementation_id' => $lastId,
            'Change_Policies' => $form_state['values']['Change_Policies'],
            'Change_Policies_activity' => $form_state['values']['Change_Policies_activity'],
            'others_for_all' => $form_state['values']['others_for_all'],
            'Funding_supports' => $form_state['values']['Funding_supports'],
            'Level_Success' => $form_state['values']['Level_Success'],
            'startdatetime_physical' => $form_state['values']['startdatetime_physical'],
            'enddatetime_physical' => $form_state['values']['enddatetime_physical'],
        ))->execute();
    }
    if (isset($_REQUEST['Physical_Design']) && $_REQUEST['Physical_Design'] != '')
    {
        $csap_6 = db_insert('physical_design')->fields(array(
            'implementation_id' => $lastId,
            'Physical_Design' => $form_state['values']['Physical_Design'],
            'Physical_Design_activity' => $form_state['values']['Physical_Design_activity'],
            'others_for_all' => $form_state['values']['others_for_all'],
            'Funding_supports' => $form_state['values']['Funding_supports'],
            'Level_Success' => $form_state['values']['Level_Success'],
            'startdatetime_physical' => $form_state['values']['startdatetime_physical'],
            'enddatetime_physical' => $form_state['values']['enddatetime_physical'],

        ))->execute();
    }
    if (isset($_REQUEST['op']) && $_REQUEST['op'] == "Save & Exit" && $form_state['values']['signature']=="2")
    {
        $form_state['redirect'] = 'implementation/list';
    } else if(isset($form_state['values']['signature']) && $form_state['values']['signature']=="0"){
        $form_state['redirect'] = 'implementation/'.$lastId.'/component';
        drupal_set_message("<div class='modal' id='modal-name'><div class='modal-sandbox'></div>
             <div class='modal-box'>
            <div class='modal-body'>
         <div class='close-modal'>&#10006;</div>
       <p>A copy has been saved to pending. you may now edit this document and save it </p>
    </div>
  </div>
</div>");
    } else if(isset($form_state['values']['signature']) && $form_state['values']['signature']=="1"){
        $form_state['redirect'] = 'implementation/'.$lastId.'/edit';
    }else
    {
        return $form;
    }
}




function implementation_view_list_item_page($item)
{
    global $user;
    $base_url = $GLOBALS['base_url'];
    $query = db_select('implementation_details', 'a');
    $query->fields('a', array(
        'implementation_id',
        'is_pending',
        'created_at'
    ));
    $query->orderBy('a.implementation_id', 'DESC');
    $capacity_data_lists = $query->execute()
        ->fetchAll();

    $record_meeting_icon1 = file_create_url(path_to_theme() . '/images/new_icon.png');
    $click_more = file_create_url(path_to_theme() . '/images/click.png');
    $capacityPendingListItems = '<div class="capacity-nxt-btn"><a href="add"><img src=' . $record_meeting_icon1 . ' class="white_img"><span>Create New Implementation</span></a></div><br><br>';

    $capacityListItems .= "<div id='capacityDataLists'>
          <h3>Implementation Records Submitted (4 most recent)</h3>
      <ul>";
    $capacityPendingListItems .= "<div id='capacityDataLists'><h3>Pending Implementation Records</h3><ul>";
    $record_meeting_img = file_create_url(path_to_theme() . '/images/doctor.png');
    if (isset($capacity_data_lists) && count($capacity_data_lists) > 0)
    {
        $imp = 0;
        foreach ($capacity_data_lists as $dataKey => $dataItem)
        {
            if ($dataItem->implementation_id != '')
            {
                /* CASAP 6 Common Tables */
                $getTitle = db_query("SELECT Alternative_Activities FROM alternative_activitity WHERE implementation_id =" . $dataItem->implementation_id)
                    ->fetchField();
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT Community_based_Process FROM community_based WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT environmental FROM environmental WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT education_csap FROM education WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT Information_Dissemination_csap6 FROM Information_dissemination_details WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }
                /* CADCA 7 Common Tables */
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT Enhance_Skills FROM enhance_skills WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT Providing_Support FROM providing_support WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT Provide_Information FROM provide_information WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT change_consequences FROM change_consequences WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT Change_Access FROM change_access WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT Change_Policies FROM change_policies WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }
                if ($getTitle == "")
                {
                    $getTitle = db_query("SELECT Physical_Design FROM physical_design WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                }

                $getSubTitle = db_query("SELECT csap_6 FROM implementation_details WHERE implementation_id =" . $dataItem->implementation_id)
                    ->fetchField();
                if ($getSubTitle != "")
                {
                    $getSubTitle = "CSAP-" . $getSubTitle;
                }
                if ($getSubTitle == "")
                {
                    $getSubTitle = db_query("SELECT csap_7 FROM implementation_details WHERE implementation_id =" . $dataItem->implementation_id)
                        ->fetchField();
                    $getSubTitle = "CADCA-" . $getSubTitle;
                }
                $created_date = $dataItem->created_at;
                if (isset($dataItem->is_pending) && $dataItem->is_pending == "2")
                {
                    $capacityPendingListItems .= '<li><div class="planning_list">
						<div class="left_Section">
							<img src=' . $record_meeting_img . ' class="white_img">
							<p><span>Pending: ' . $getTitle . '</span>
							<span>' . $created_date . ' ' . $getSubTitle . '</span></p>
						</div>
						<div class="right_section">
							<a href="' . $base_url . '/implementation/' . $dataItem->implementation_id . '/view"><i class="fa fa-eye fa-lg" aria-hidden="true"></i></a>
							<a href="' . $base_url . '/implementation/' . $dataItem->implementation_id . '/edit"><i class="fa fa-pencil-square fa-lg" aria-hidden="true"></i></a>
							<a href="' . $base_url . '/implementation/delete/' . $dataItem->implementation_id . '"><i class="fa fa-trash-o fa-lg imp-trash" aria-hidden="true"></i></a>
						</div>
					</div></li>';

                }
                if (isset($dataItem->is_pending) && $dataItem->is_pending == "no")
                {

                    if ($imp != "4")
                    {
                        $capacityListItems .= '<li><div class="planning_list">
							<div class="left_Section">
								<img src=' . $record_meeting_img . ' class="white_img">
								<p><span>' . $getTitle . '</span>
								<span>' . $created_date . ' ' . $getSubTitle . '</span></p>
							</div>
							<div class="right_section">
							<a href="' . $base_url . '/implementation/' . $dataItem->implementation_id . '/view"><i class="fa fa-eye fa-lg" aria-hidden="true"></i></a>
							<a href="' . $base_url . '/implementation/' . $dataItem->implementation_id . '/edit"><i class="fa fa-pencil-square fa-lg" aria-hidden="true"></i></a>
							</div>
				</div>
				</li>';
                    }
                    $imp++;

                }
            }
        }
    }
    else
    {
        $capacityListItems .= '<tr><td colspan="3">No Implementation list found.</td></tr>';
    }

    $capacityPendingListItems .= "</ul></div><hr>";

    $capacityListItems .= "</ul></div><br>";

    if (isset($imp) && $imp >= 4)
    {
        $capacityListItems .= '<div class="capacity-nxt-btn"><a href="#"><img src=' . $click_more . ' class="white_img"><span>All Other Filed Implementation Records</span></a></div><br><br>';
    }

    $capacityPendingListItems .= $capacityListItems;

    return $capacityPendingListItems;
}

function implementation_delete_item_form($form,&$form_state){
    $url = (isset($_SERVER['HTTPS']) ? "https" : "http") . "://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";
     $impId= basename($url);
     if(isset($impId) && $impId!=""){
           $del_res = db_delete('implementation_details')
                          ->condition('implementation_id', $impId)
                          ->execute();
          db_delete('alternative_activitity')
                   ->condition('implementation_id', $impId)
                   ->execute();
          db_delete('community_based')
                            ->condition('implementation_id', $impId)
                            ->execute();
          db_delete('environmental')
                          ->condition('implementation_id', $impId)
                          ->execute();
          db_delete('education')
                          ->condition('implementation_id', $impId)
                          ->execute();
          db_delete('Information_dissemination_details')
                          ->condition('implementation_id', $impId)
                          ->execute();
          db_delete('enhance_skills')
                            ->condition('implementation_id', $impId)
                            ->execute();
          db_delete('providing_support')
                            ->condition('implementation_id', $impId)
                            ->execute();
          db_delete('provide_information')
                            ->condition('implementation_id', $impId)
                            ->execute();
          db_delete('change_consequences')
                            ->condition('implementation_id', $impId)
                            ->execute();
          db_delete('change_access')
                            ->condition('implementation_id', $impId)
                            ->execute();
          db_delete('change_policies')
                            ->condition('implementation_id', $impId)
                            ->execute();
          db_delete('physical_design')
                            ->condition('implementation_id', $impId)
                            ->execute();

            if(isset($del_res) && $del_res!=""){
                drupal_goto('implementation/list');
            }
    }
}






 // Addtion fuctions



function implementation_save_and_copy_form($form, &$form_state, $item)
{

global $user;
    $form['#attributes']['enctype'] = 'multipart/form-data';

    $base_url = $GLOBALS['base_url'];

    $media_ids = db_query('SELECT organization FROM {estar_contacts_details} where primary_sector_select=64 AND secondary_sector_select=76')->fetchAll();

  if (isset($media_ids) && count($media_ids) > 0)
    {
        foreach ($media_ids as $nKey=> $mids)
        {

            if ($media_ids != '')
            {
                $media_company_names[$nKey] = $mids->organization;
            }
        }
    }



    $social_media_ids = db_query('SELECT organization FROM {estar_contacts_details} where primary_sector_select =206 AND secondary_sector_select=207')->fetchAll();


  if (isset($social_media_ids) && count($social_media_ids) > 0)
    {
        foreach ($social_media_ids as $mKey=> $mId)
        {

            if ($social_media_ids != '')
            {
                $social_media_data[$mKey] = $mId->organization;
            }
        }
    }

    drupal_set_title("Implementation Edit Page");


     $form['print'] = array(
                "#markup" => '
<div class="implementation-print" onclick="myFunction()" > <i class="fa fa-file-pdf-o fa-lg" aria-hidden="true"></i> Download as PDF</div>',
                );


    $contributing_factor = db_query("SELECT tid, name FROM {taxonomy_term_data} WHERE vid = 12")->fetchAll();

    $interventions = db_query("SELECT tid, name FROM {taxonomy_term_data} WHERE vid = 28")->fetchAll();
    $query = db_select('planning_details', 'a');
    $query->fields('a', array(
        'planning_id',
        'title'
    ));
    $query->orderBy('a.title', 'ASC');
    $planning_lists = $query->execute()
        ->fetchAll();
    $planCount = 0;
    $lmCount = 0;
    foreach ($planning_lists as $plankey => $planVal)
    {
        $plan_id = $planVal->planning_id;
        $plan_title = $planVal->title;
        $planning_data_lists = db_query("SELECT * FROM {planning_details} WHERE planning_id = " . $plan_id)->fetchAll();
        //echo "<pre>";print_r($planning_data_lists);die;
        $chkSerialize = @unserialize($planning_data_lists[0]->contributing_factor);
        if ($chkSerialize !== false)
        {
            $contributingFactor = unserialize($planning_data_lists[0]->contributing_factor);
            $interventionsCheckedItems = unserialize($planning_data_lists[0]->interventions);
            $logicModelCount = count($contributingFactor['contributingCollection']);
            $conSelectedItems = "";
            $intSelectedItems = "";
            $logicModelTitle = $item->logic_model_title_link;
            $lmCheck = ($logicModelTitle == $plan_title) ? "checked" : "";
            $contributingItems = '<div id="firstTable_' . $plankey . '" class="heading_tag">
              <h3><input id="lm-title-link' . $planCount . '" type="radio" class="form-radio" value="' . $plan_title . '" name="logic_model_title_link0_0" ' . $lmCheck . '> ' . $plan_title . '</h3>
              <div class="select_btn" style="display:none;">
                <div class="form-checkboxes">
                  <div class="form-item form-type-checkbox">
                    <label><input id="checkAllLogicModel" type="checkbox" value="" class="form-checkbox" name="contributing_factor[]" onchange="checkAllRadioFunc(this,' . $planCount . ')"> Select all/Select none</label>
                  </div>
                </div>
              </div>
            </div>
  <div class="logicmodel_inter_con" id="logicmodel_inter_con_' . $planCount . '">';
            $planCount++;
            $unCFValues = unserialize($item->contributing_factor_models);
            $unINValues = unserialize($item->intervention_models);
            $ico = 1; //echo $logicModelCount;die;
            $stInvCount = "0_0";
            for ($i = 0;$i < $logicModelCount;$i++)
            {
                $ichange = $plankey . '_' . $i;

                $contributingItems .= '<div class="capacity_logic_section"><div id="conFactorTable_' . $i . '" class="conFactorTab">
                           <div class="form-type-checkboxes"><label class="heading_label">Contributing Factor</label>';
                foreach ($contributing_factor as $fKey => $fVal)
                {
                    if ($fVal->name == trim($contributingFactor['contributingCollection']['contribCollection' . $i]))
                    {
                        $cfCheck = ($unCFValues['contributing_factor'] == $fVal->tid) ? 'checked' : '';
                        $contributingItems .= '<div class="form-checkboxes">
                      <div class="form-item form-type-checkbox"><label><input style="display:none;" id="check-cont-' . $i . '" type="radio" class="form-radio" value="' . $fVal->tid . '" name="contributing_factor[]" ' . $cfCheck . '><span> ' . $fVal->name . '</span></label></div>
                      </div>';
                    }

                }
                $contributingItems .= '</div></div>
      <div id="intervTable_' . $i . '" class="interventions intervTab">
          <div class="form-type-checkboxes"><label class="heading_label">Interventions</label>
      ';

                foreach ($interventions as $cKey => $cVal)
                { //echo $unINValues['interventions']['interventions'.$stInvCount][0].">>".$logicModelTitle."==".$plan_title;die;
                    if (in_array($cVal->name, $interventionsCheckedItems['interventionCollection']['internCollection' . $i]))
                    {
                        $inCheck = (in_array($cVal->tid, $unINValues['interventions']) && $cfCheck) ? 'checked' : '';
                        $contributingItems .= '<div class="form-checkboxes">
                                <div class="form-item form-type-checkbox"><label><input id="check-inter' . $i . '" type="radio" value="' . $cVal->tid . '" class="form-radio form-intervention int-check-' . $plankey . '" name="interventions[]" ' . $inCheck . '><span> ' . $cVal->name . '</span></label></div>
                     </div>';
                    }

                }

                $contributingItems .= '</div></div></div>';

                //$contributingItems.='</table>';
                #--------------------------------------
                # create a "planning logic model" fieldset
                #--------------------------------------
                $form['planningLogicModel' . $plankey] = array(
                    '#type' => 'fieldset',
                    '#title' => t($plan_title) ,
                    '#collapsible' => true,
                    '#collapsed' => ($plankey == "0") ? false : true,
                );

                $ico++;

            }

            $contributingItems .= '</div></table>';
            $form['planningLogicModel' . $plankey]['contributing_intervention' . $plankey] = array(
                "#title" => 'Logic model',
                "#markup" => $contributingItems
            );

            $form['table_count_id'] = array(
                '#type' => "hidden",
                '#value' => ($logicModelCount - 1) ,
                '#attributes' => array(
                    "id" => "LogicModelCountId"
                )
            );

        }
        else
        {  //echo "<pre>";print_r($contributing_factor);die;

            $contributingFactor = $planning_data_lists[0]->contributing_factor;
            $interventionsCheckedItems = explode(",", $planning_data_lists[0]->interventions);

            $ichange = $plankey . '_' . $lmCount;
            $unCFValues = unserialize($item->contributing_factor_models);
            $unINValues = unserialize($item->intervention_models);
            $logicModelTitle = $item->logic_model_title_link;

            $contributingItems = "";
            foreach ($contributing_factor as $fKey => $fVal)
            {
                if ($contributingFactor == $fVal->name)
                {
                    $cfCheck = ($unCFValues['contributing_factor'] == $fVal->tid) ? 'checked' : '';
                    $contributingItems .= '<div class="form-checkboxes">
                                <div class="form-item form-type-checkbox"><label><input style="display:none;" id="check-cont-' . $i . '" type="radio" class="form-radio" value="' . $fVal->tid . '" name="contributing_factor[]" ' . $cfCheck . '><span> ' . $fVal->name . ' </span><label></div>
                  </div>';
                }
            }

            $interventionsItems = "";
            foreach ($interventions as $cKey => $cVal)
            { //echo $cVal."<pre>";print_r($interventionsCheckedItems);die;
                if (in_array($cVal->name, $interventionsCheckedItems))
                {
                    $inCheck = (in_array($cVal->tid, $unINValues['interventions']) && $cfCheck) ? 'checked' : '';
                    $interventionsItems .= '<div class="form-checkboxes">
                                <div class="form-item form-type-checkbox"><label><input id="check-inter' . $i . '" type="radio" value="' . $cVal->tid . '" class="form-radio form-intervention int-check-' . $plankey . '" name="interventions[]" ' . $inCheck . '><span> ' . $cVal->name . '</span><label></div>
                    </div>';
                }
            }
            #--------------------------------------
            # create a "planning logic model" fieldset
            #--------------------------------------
            $form['planningLogicModel' . $plankey] = array(
                '#type' => 'fieldset',
                '#title' => t($plan_title . ' <span class="form-required" title="This field is required.">*</span>') ,
                '#collapsible' => true,
                '#collapsed' => ($plankey == "0") ? false : true,
            );

            $lmCheck = ($logicModelTitle == $plan_title) ? "checked" : "";

            $form['planningLogicModel' . $plankey]['contributing_intervention' . $plankey] = array(
                "#title" => 'Logic model',
                "#markup" => '
      <div id="firstTable' . $plankey . '" class="heading_tag">
      <h3><input id="lm-title-link' . $planCount . '" type="radio" class="form-radio" value="' . $plan_title . '" name="logic_model_title_link0_0" ' . $lmCheck . '> ' . $plan_title . '</h3>
      <div class="select_btn" style="display:none;">
        <div class="form-checkboxes">
          <div class="form-item form-type-checkbox">
            <label><input id="checkAllLogicModel" type="checkbox" value="" name="contributing_factor[]" class="form-checkbox" onchange="checkAllRadioFunc(this,' . $planCount . ')"> Select all/Select none</label>
          </div>
        </div>
      </div>
    </div>
 <div class="logicmodel_inter_con" id="logicmodel_inter_con_' . $planCount . '">
           <div class="capacity_logic_section">
               <div id="conFactorTab" class="conFactorTab">
          <div class="form-type-checkboxes">
            <label class="heading_label">Contributing Factor</label>
                            ' . $contributingItems . '
                     </div>
        </div>
                <div id="intervTab" class="interventions intervTab">
          <div class="form-type-checkboxes">
            <label class="heading_label">Interventions</label>
                           ' . $interventionsItems . '
                   </div>
        </div>
            </div>
        </div>
</table>'
            );

            $form['table_count_id'] = array(
                '#type' => "hidden",
                '#value' => 0,
                '#attributes' => array(
                    "id" => "LogicModelCountId"
                )
            );

            $planCount++;
            $lmCount++;

        }

    }


 $form['Strategies_start_component'] = array(
        '#markup' => "<div id='Strategies_start_component' style='display:none;'>"
    );

    $form['Strategies'] = array(
        '#prefix' => '<div class="select_section">',
        '#suffix' => '</div>',
        '#type' => 'select',
        '#title' => t('Strategies') ,
        '#default_value' => $item->Strategies,
        '#options' => array(
            ''=>"<--Select-->",
            'CSAP 6' => "CSAP 6",
            'CADCA 7' => "CADCA 7"
        ) ,

        '#attributes' => array(
            "onchange" => "showStrategiesBySelect(this)"
        )
    );

    $Strategies_CSAP_6 = db_query("SELECT name, name FROM {taxonomy_term_data} WHERE vid = 18")->fetchAllKeyed();


    $form['csap_6'] = array(
        '#type' => 'radios',
        '#title' => t('CSAP 6 <span class="form-required" title="This field is required.">*</span>') ,
        '#options' => $Strategies_CSAP_6,
          '#default_value' => $item->csap_6,
        '#attributes' => array(
            "onclick" => "showcsap6(this)"
        )
    );

        $Strategies_CSAP_7 = db_query("SELECT name, name FROM {taxonomy_term_data} WHERE vid = 17")->fetchAllKeyed();

    $form['csap_7'] = array(
        '#type' => 'radios',
        '#title' => t('CADCA 7 <span class="form-required" title="This field is required.">*</span>') ,
        '#options' => $Strategies_CSAP_7,
         '#default_value' => $item->csap_7,
        '#attributes' => array(
            "onclick" => "showcsap7(this)"
        )
    );

        $form['Strategies_end_component'] = array(
        '#markup' => '</div>'
    );



    if (isset($item->implementation_id) && $item->implementation_id != '')
    {
        $implementation_id = $item->implementation_id;
    }

    $Alternative_Activities = db_query("SELECT Alternative_Activities, Alternative_Activities  FROM {alternative_activitity} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Alternative_Activities_data = implode(" ", $Alternative_Activities);

    $Community_based_Process = db_query("SELECT Community_based_Process, Community_based_Process  FROM {community_based} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();

    $Community_based_Process_data = implode(" ", $Community_based_Process);

    $education_csap = db_query("SELECT education_csap, education_csap  FROM {education} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $education_csap_data = implode(" ", $education_csap);

    $environmental = db_query("SELECT environmental, environmental  FROM {environmental} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $environmental_data = implode(" ", $environmental);

    $information_dissemination = db_query("SELECT information_dissemination, information_dissemination  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $information_dissemination_data = implode(" ", $information_dissemination);


    $Information_Dissemination_csap6 = db_query("SELECT Information_Dissemination_csap6, Information_Dissemination_csap6  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Information_Dissemination_csap6_data = implode(" ", $Information_Dissemination_csap6);

    // print_r($Alternative_Activities);
    // print_r($Community_based_Process_data);die();
    // print_r($environmental);
    // print_r($information_dissemination);die();



// Edit alternative activities starty here
    // csap 6 view start here
    if (isset($Alternative_Activities) && $Alternative_Activities)
    {

      $form['Alternative_start']=array(
       '#markup'=>"<div id='Alternative_start_edit'>"
        );
        $form['Alternative_Activities'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Alternative Activities') ,
            '#default_value' => $Alternative_Activities_data,
        );
             $form['Alternative_edit_end']=array(
             '#markup'=>'</div>'
        );

        $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

        $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service(HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );


        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );


        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );


        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );



        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );



        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );


        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );


        $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );


        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
            '#attributes' => array(
            ' type' => 'number',
            'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );
    }


     if (isset($Community_based_Process) && $Community_based_Process)
    {

       $form['Community_start']=array(
       '#markup'=>"<div id='community_edit'>"
       );
        $form['Community_based_Process'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Recruitment Effort') ,
            '#default_value' => $Community_based_Process_data,
        );
              $form['Community_end_edit']=array(
        '#markup'=>'</div>'
       );


        $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }
        $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );

        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
        $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );

    }

    if (isset($education_csap) && $education_csap)
    {
             $form['education_start_edit']=array(
            '#markup'=>"<div id='education_csap6_edit'>"
            );
        $form['education_csap'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Education') ,
            '#default_value' => $education_csap,
        );

         $form['education_end_edit']=array(
         '#markup'=>'</div>'
           );


        $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }


        $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service(HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );

        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
        $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );


    }


    if (isset($environmental) && $environmental)
    {
        $form['environmental'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Environmental') ,
            '#default_value' => $environmental_data,
        );

           $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){

    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }



         $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );


        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
        );


        $form['address_1'] = array(
            '#prefix' => '<hr>',
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );


        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );



        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );



        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );


        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#attributes' => array(
             'type' => 'number',
             ),
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
    }



         $number_adult_csap_6 = db_query("SELECT number_adult_information  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();

      $number_youth_csap_6 = db_query("SELECT number_youth_information  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();


        $number_adult_presentation = db_query("SELECT number_adult_presentation  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();

      $number_youth_presentation = db_query("SELECT number_youth_presentation  FROM {information_dissemination_details} WHERE implementation_id= " . $implementation_id)->fetchField();




   if (isset($information_dissemination) && $information_dissemination)
    {
        $form['information_dissemination_csap6'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Information Dissemination') ,
            '#options' => array(
                '' => "<--select-->",
                'Media' => "Media",
                'Social Media' => "Social Media",
                'Presentations' => "Presentations",
                'Distribution of Materials' => "Distribution of Materials"
            ) ,
            '#attributes' => array(
                "onclick" => "information(this)",
            ) ,
            '#default_value' => $information_dissemination_data,
        );

        $form['information_dissemination_edit'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Information Dissemination') ,
            '#default_value' => $Information_Dissemination_csap6_data,
        );
    }



    $media_type_information_view = db_query("SELECT media_type_information  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    if (isset($media_type_information_view) && $media_type_information_view)
    {

        $form['media_type_information_view'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Type') ,
            '#options' => array(
                '' => "<--select-->",
                'Billboards/Bus Boards, Editorials' => "Billboards/Bus Boards, Editorials",
                'Media Campaign, News Articles' => "Media Campaign, News Articles",
                'Press Conferences' => "Press Conferences",
                'Press Releases' => "Press Releases",
                'PSA’s' => "PSA’s",
                'Radio Interviews' => "Radio Interviews",
                'Television Interview' => "Television Interview",
            ) ,
            '#default_value' => $media_type_information_view,
        );
    }



      $provide_media= 'Media';
    // presentation for information dissemination

       if (isset($information_dissemination[$provide_media]) && $information_dissemination[$provide_media] )
        {

           $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

  // media csap select files
    $Media_outlet = db_query("SELECT Media_outlet  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Media_out_csap = unserialize($Media_outlet);

    //echo "<pre>";print_r($Media_out_csap);
    //sdfsdf


    $Media_submit = db_query("SELECT Media_submit  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Media_submit_csap = unserialize($Media_submit);

    //echo "<pre>";print_r($Media_submit_csap);
    $media_date = db_query("SELECT media_date  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $media_date_csap = unserialize($media_date);

    //echo "<pre>";print_r($media_date_csap);
    $Published = db_query("SELECT Published  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Published_csap = unserialize($Published);

    // echo "<pre>";print_r($Published_csap);
    $if_yes_publication = db_query("SELECT if_yes_publication  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $if_yes_publication_csap = unserialize($if_yes_publication);

    //echo "<pre>";print_r($if_yes_publication_csap);
    $Reach = db_query("SELECT Reach  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Reach_csap = unserialize($Reach);

    // echo "<pre>";print_r($Reach_csap);
    $media_notes = db_query("SELECT media_notes  FROM {media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $media_notes_csap = unserialize($media_notes);

    //echo "<pre>";print_r($media_date_csap);die();

    // if($Media_submit_csap && $Media_submit_csap['media_submit'][0]){

    $form['media_start'] = array(
        '#markup' => "<div class='responsive_table'><h5>Media</h5><table id='media' class='imp_media_table'>
    <tr><th>Media outlets </th><th>Submitted </th><th>Date </th><th>Published </th><th>If yes, then Publication Date </th><th>Reach </th><th>Notes </th></tr><tr>"
  );

    // media information csap 6
    if (isset($media_company_names) && count($media_company_names) > 0)
    {
        $i = 0;
        foreach ($media_company_names as $mKey => $mNames)
        {

            $form['media_row_start' . $i] = array(
                '#markup' => "<tr>"
            );
            // media information csap 6
            $form['Media_outlet' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#value' => $mNames,
                '#attributes' => array(
                    'readonly' => 'readonly',
                    'name' => "media_outlet[$i]"
                ) ,
                '#suffix' => '</td>',
            );

            $form['Media_submit' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#attributes' => array(
                    'name' => "media_submit[$i]"
                ) ,
                '#default_value' => $Media_submit_csap['media_submit'][$i],
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
            );
            $form['media_date' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#date_format' => 'm/d/Y',
                '#default_value' => $media_date_csap['media_date'][$i],
                '#attributes' => array(
                    'name' => "media_date[$i]"
                ) ,
                '#suffix' => '</td>',
            );
            $form['Published' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#default_value' => $Published_csap['published'][$i],
                '#attributes' => array(
                    'name' => "published[$i]"
                ) ,
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
            );
            $form['if_yes_publication' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#date_format' => 'm/d/Y',
                '#suffix' => '</td>',
                '#default_value' => $if_yes_publication_csap['media_publish'][$i],
                '#attributes' => array(
                    'name' => "media_publish[$i]"
                ) ,
            );
            $form['Reach' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#suffix' => '</td>',
                '#default_value' => $Reach_csap['reach'][$i],
                '#attributes' => array(
                    'name' => "reach[$i]"
                ) ,
            );
            $form['media_notes' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textarea',
                '#suffix' => '</td>',
                '#default_value' => $media_notes_csap['media_notes'][$i],
                '#attributes' => array(
                    'name' => "media_notes[$i]"
                ) ,
            );

            $form['media_row_end' . $i] = array(
                '#markup' => "</tr>"
            );

            $i++;

        }

        $form['media_end'] = array(
            '#markup' => '</tr></table></div>'
        );
    }


}



   $provide_social_media= 'Social Media';
    // presentation for information dissemination

       if (isset($information_dissemination[$provide_social_media]) && $information_dissemination[$provide_social_media] )
        {

    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }



  // social media select files
    $Social_Media_profile_view = db_query("SELECT social_media_profile  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_Media_profile_view_csap = unserialize($Social_Media_profile_view);

    //echo "<pre>";print_r($Social_Media_profile);die();
    //sdfsdf


    $social_Media_submit = db_query("SELECT social_Media_Media_submit  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_Media_submit_csap = unserialize($social_Media_submit);

    //echo "<pre>";print_r($social_Media_submit_csap);
    $social_media_date = db_query("SELECT social_media_date  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_date_csap = unserialize($social_media_date);

    //echo "<pre>";print_r($social_media_date_csap);
    $Social_media_impression = db_query("SELECT Social_Media_media_impression  FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_media_impression_csap = unserialize($Social_media_impression);

    // echo "<pre>";print_r($Social_media_impression_csap);
    $social_media_notes = db_query("SELECT Social_Media_media_notes FROM {social_media} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_notes_csap = unserialize($social_media_notes);

    //echo "<pre>";print_r($social_media_notes_csap);die();

  // if($social_Media_submit_csap && $social_Media_submit_csap['social_media_submit'][0]){
    // social media information csap 6
    $form['social_media_start'] = array(
        '#markup' => "<div class='responsive_table'><h5>Social Media</h5><table id='social_media' class='imp_media_table'>
        <tr><th>Social Media Outlets </th><th>submitted </th><th>Date </th><th>Impressions </th><th>Notes </th></tr>"
    );

   // print_r($social_media_data);die();

    if (isset($social_media_data) && count($social_media_data) > 0)
    {
        $si = 0;
        foreach ($social_media_data as $mKey => $mNames)
        {
            $form['social_media_row_start' . $si] = array(
                '#markup' => "<tr>"
            );
            $form['Social_Media_profile' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#value' => $mNames,
                '#attributes' => array(
                    'readonly' => 'readonly'
                ) ,
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_profile[$si]"
                ) ,
            );

            $form['Social_Media_Media_submit' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#default_value'=>$social_Media_submit_csap['social_media_submit'][$si],
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_submit[$si]"
                ) ,
            );
            $form['social_media_date' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#date_format' => 'm/d/Y',
                '#suffix' => '</td>',
                '#default_value'=>$social_media_date_csap['social_media_date'][$si],
                '#attributes' => array(
                    'name' => "social_media_date[$si]"
                ) ,
            );
            $form['Social_Media_media_impression' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#default_value'=>$Social_media_impression_csap['social_media_impression'][$si],
                '#suffix' => '</td>',
                '#attributes' => array(
                    'name' => "social_media_impression[$si]"
                ) ,
            );
            $form['Social_Media_media_notes' . $si] = array(
                '#prefix' => '<td>',
                '#type' => 'textarea',
                '#suffix' => '</td>',
                '#default_value'=>$social_media_notes_csap['social_media_notes'][$si],
                '#attributes' => array(
                    'name' => "social_media_notes[$si]"
                ) ,
            );
            $form['social_media_row_end' . $si] = array(
                '#markup' => "</tr>"
            );
            $si++;

        }
    }

    $form['social_media_end'] = array(
        '#markup' => '</table></div>'
    );


}


    // presentation steps

    $needle = 'Presentations';

    // presentation for information dissemination

       if (isset($information_dissemination[$needle]) && $information_dissemination[$needle] )
        {

           $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }
  $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service(HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );
        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );



          $form['number_adult_served_information'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_csap_6,
        );


        $form['number_youth_served_information'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_csap_6,
        );




           $form['number_adult_served_presentation'] = array(
            '#type' => 'textfield',
            '#title' => t('How many Adults received written materials at this presentation?') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_presentation,
        );



        $form['number_youth_served_presentation'] = array(
            '#type' => 'textfield',
            '#title' => t('How many Youth received written materials at this presentation?') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_presentation,
        );
        }


        // Distribution steps

    $information_dissemination_materials = 'Distribution of Materials';
    // presentation for information dissemination

       if (isset($information_dissemination[$information_dissemination_materials]) && $information_dissemination[$information_dissemination_materials] )
        {
        $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }
  $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );
        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );




         $form['number_adult_served_presentation'] = array(
            '#type' => 'textfield',
            '#title' => t('How many Adults received written materials at this presentation?') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_presentation,
        );



        $form['number_youth_served_presentation'] = array(
            '#type' => 'textfield',
            '#title' => t('How many Youth received written materials at this presentation?') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_presentation,
        );
        }


// end of csap 6


    // cacad 7 view start here
    // Enhance skill
    $enhance_skills = db_query("SELECT Enhance_Skills, Enhance_Skills  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enhance_skills_data = implode(" ", $enhance_skills);

    $Enhance_Activity = db_query("SELECT Enhance_Activity, Enhance_Activity  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Enhance_Activity_data = implode(" ", $Enhance_Activity);

    $Enhance_Activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_enhance_skills = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {enhance_skills} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_enhance_skills = implode(" ", $Level_Success);

    if (isset($enhance_skills) && $enhance_skills)
    {
        $form['enhance_skills'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Enhance Skills') ,
            '#default_value' => $enhance_skills_data,
        );
        $form['Enhance_Activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Activity Type:') ,
            '#options' => array(
                '' => "<--select-->",
                'Youth Education Training Programs (providing information / skills)' => "Youth Education Training Programs (providing information / skills)",
                'Parent Education Training Programs' => "Parent Education Training Programs",
                'Teacher / Youth Worker Education and Training Programs' => "Teacher / Youth Worker Education and Training Programs",
                'Community Member Education and Training Programs' => "Community Member Education and Training Programs",
                'Business Training (e.g., responsible beverage service / vendor training [voluntary or mandatory])' => "Business Training (e.g., responsible beverage service / vendor training [voluntary or mandatory])",
                'Other' => "Other",
            ) ,

            '#attributes' => array(
                "onclick" => "enchance_other(this)"
            ) ,
            '#default_value' => $Enhance_Activity_data,
        );
        if (isset($Enhance_Activity_others_for_all) && $Enhance_Activity_others_for_all)
        {
            $form['Enhance_Activity_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $Enhance_Activity_others_for_all,
            );
        }
       // echo $Funding_supports_enhance_skills;die();
            $form['Funding_supports'] = array(
            '#type' => 'checkboxes',
            '#title' => t('Funding supports') ,
            '#options' => array(
                'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
            ) ,
            '#attributes' => ($Funding_supports_enhance_skills=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
        );

      /*  $form['Funding_supports'] = array(
            '#type' => 'radios',
            '#title' => t('Funding supports') ,
            '#options' => array(
                'Did your coalition use STOP Act funds for this activity? No' => "Did your coalition use STOP Act funds for this activity? No",
                'Did your coalition use STOP Act funds for this activity? yes ' => "Did your coalition use STOP Act funds for this activity? yes "
            ) ,
            '#default_value' => $Funding_supports_enhance_skills,
        );*/


           $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }
   $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service(HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );

        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
   $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );

    }



    //providing support
    $Providing_Support = db_query("SELECT Providing_Support, Providing_Support  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Providing_Support_data = implode(" ", $Providing_Support);

    $Providing_Support_activity = db_query("SELECT Providing_Support_activity, Providing_Support_activity  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Providing_Support_activity_data = implode(" ", $Providing_Support_activity);

    $Providing_Support_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Providing_Support = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {providing_Support} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Providing_Support = implode(" ", $Level_Success);

    if (isset($Providing_Support) && $Providing_Support)
    {
        $form['providing_Support'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Name of activity') ,
            '#default_value' => $Providing_Support_data,
        );
        $form['Providing_Support_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Activity Type:') ,
            '#options' => array(
                '' => "<--select-->",
                'Alternative/drug-free social events' => "Alternative/drug-free social events",
                'Youth organizations/ drop-in centers' => "Youth organizations/ drop-in centers",
                'Organized youth recreation programs (e.g., athletics, arts, outdoor activities)' => "Organized youth recreation programs (e.g., athletics, arts, outdoor activities)",
                'Youth/family community involvement (e.g., school or neighborhood cleanup)' => "Youth/family community involvement (e.g., school or neighborhood cleanup)",
                'Youth/family support groups' => "Youth/family support groups",
                'Other' => "Other",
            ) ,

            '#attributes' => array(
                "onclick" => "provide_other(this)"
            ) ,
            '#default_value' => $Providing_Support_activity_data,
        );
        if (isset($Providing_Support_others_for_all) && $Providing_Support_others_for_all)
        {
            $form['Providing_Support_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $Providing_Support_others_for_all,
            );
        }
        $form['Funding_supports_Providing_Support'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
          '#attributes' => ($Funding_supports_Providing_Support=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
    );

            $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }
   $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );

        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
   $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );

    }




$number_adult_cadca_7 = db_query("SELECT number_adult_information  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();

$number_youth_cadca_7 = db_query("SELECT number_youth_information  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();

$number_adult_cadca_7_presentation = db_query("SELECT number_adult_presentation  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();

$number_youth_cadca_7_presentation = db_query("SELECT number_youth_presentation  FROM {Provide_Information} WHERE implementation_id= " . $implementation_id)->fetchField();



    // provide information
    $Provide_Information = db_query("SELECT Provide_Information, Provide_Information  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Provide_Information_data = implode(" ", $Provide_Information);


    $Provide_Information_activity = db_query("SELECT Provide_Information_activity, Provide_Information_activity  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Provide_Information_activity_data = implode(" ", $Provide_Information_activity);

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Provide_Information = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {provide_Information} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Provide_Information = implode(" ", $Level_Success);

    if (isset($Provide_Information) && $Provide_Information)
    {
        $form['Provide_Information'] = array(
            '#type' => 'textfield',
            '#title' => t('Title: Name of activity') ,
            '#default_value' => $Provide_Information_data,
        );
        $form['Provide_Information_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Activity Type:') ,
            '#options' => array(
                '' => "<--select-->",
                'Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),' => "Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),",
                'Informational materials prepared/ produced' => "Informational materials prepared/ produced",
                'Informational materials disseminated' => "Informational materials disseminated",
                'Social networking (Facebook, Twitter, etc.)' => "Social networking (Facebook, Twitter, etc.)",
                ' Information on DFC Coalition Web site' => " Information on DFC Coalition Web site",
                ' Direct face-to-face information sessions or Special events (e.g., fairs, community celebrations)' => " Direct face-to-face information sessions orSpecial events (e.g., fairs, community celebrations)",
                'Others' => "Others",
            ) ,
            '#attributes' => array(
                "onclick" => "provide_information(this)"
            ) ,
            '#default_value' => $Provide_Information_activity_data,
        );
        $form['Funding_supports'] = array(
              '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
              '#attributes' => ($Funding_supports_Provide_Information=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
    );
    }


      $Provide_Information_activity_media= 'Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_activity_media]) && $Provide_Information_activity[$Provide_Information_activity_media] )
        {

$Media_Campaign_information_cadca = db_query("SELECT Media_Campaign_information FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();
$form['Media_Campaign_information_view_cadca'] = array( '#prefix' => '<div class="select_section">', '#suffix' => '</div>', '#type' => 'select', '#title' => t('Type') , '#options' => array( '' => "<--select-->", 'Media Campaign' => "Media Campaign", 'Media Coverage' => "Media Coverage", ) , '#default_value' => $Media_Campaign_information_cadca, );


  // cadca media


    $Media_outlet_view = db_query("SELECT Media_outlet  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Media_out_cadca = unserialize($Media_outlet_view);

    //echo "<pre>";print_r($Media_out_csap);
    //sdfsdf


    $Media_submit_view = db_query("SELECT Media_submit  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Media_submit_cadca = unserialize($Media_submit_view);

    //echo "<pre>";print_r($Media_submit_csap);
    $media_date_view = db_query("SELECT media_date  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $media_date_cadca = unserialize($media_date_view);

    //echo "<pre>";print_r($media_date_csap);
    $Published_view = db_query("SELECT Published  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Published_cadca = unserialize($Published_view);

    // echo "<pre>";print_r($Published_csap);
    $if_yes_publication_view = db_query("SELECT if_yes_publication  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $if_yes_publication_cadca = unserialize($if_yes_publication_view);

    // print($if_yes_publication_cadca);die();


    //echo "<pre>";print_r($if_yes_publication_csap);
    $Reach_view = db_query("SELECT Reach  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Reach_cadca = unserialize($Reach_view);

     //echo "<pre>";print_r($Media_submit_cadca);die;
    $media_notes_view = db_query("SELECT media_notes  FROM {media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $media_notes_cadca = unserialize($media_notes_view);

    // if($Media_submit_cadca && $Media_submit_cadca['media_submit'][0]){

    $form['media_start'] = array(
        '#markup' => "<div class='responsive_table'><h5>Media</h5><table id='media' class='imp_media_table'>
    <tr><th>Media outlets </th><th>Submitted </th><th>Date </th><th>Published </th><th>If yes, then Publication Date </th><th>Reach </th><th>Notes </th></tr><tr>"
    );

    // media information csap 6
    if (isset($media_company_names) && count($media_company_names) > 0)
    {
        $i = 0;
        foreach ($media_company_names as $mKey => $mNames)
        {

            $form['media_row_start' . $i] = array(
                '#markup' => "<tr>"
            );
            // media information csap 6
            $form['Media_outlet' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#value' => $mNames,
                '#attributes' => array(
                    'readonly' => 'readonly',
                    'name' => "media_outlet[$i]"
                ) ,
                '#suffix' => '</td>',
            );

            $form['Media_submit' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#attributes' => array(
                    'name' => "media_submit[$i]"
                ) ,
                '#default_value' => $Media_submit_cadca['media_submit'][$i],
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
            );
            $form['media_date' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#date_format' => 'm/d/Y',
                '#default_value' => $media_date_cadca['media_date'][$i],
                '#attributes' => array(
                    'name' => "media_date[$i]"
                ) ,
                '#suffix' => '</td>',
            );
            $form['Published' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'radios',
                '#default_value' => $Published_cadca['published'][$i],
                '#attributes' => array(
                    'name' => "published[$i]"
                ) ,
                '#options' => array(
                    'Yes' => "YES",
                    'No' => "No",
                ) ,
                '#suffix' => '</td>',
            );
            $form['if_yes_publication' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#date_format' => 'm/d/Y',
                '#suffix' => '</td>',
                '#default_value' => $if_yes_publication_cadca['media_publish'][$i],
                '#attributes' => array(
                    'name' => "media_publish[$i]"
                ) ,
            );
            $form['Reach' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textfield',
                '#suffix' => '</td>',
                '#default_value' => $Reach_cadca['reach'][$i],
                '#attributes' => array(
                    'name' => "reach[$i]"
                ) ,
            );
            $form['media_notes' . $i] = array(
                '#prefix' => '<td>',
                '#type' => 'textarea',
                '#suffix' => '</td>',
                '#default_value' =>  $media_notes_cadca['media_notes'][$i],
                '#attributes' => array(
                    'name' => "media_notes[$i]"
                ) ,
            );

            $form['media_row_end' . $i] = array(
                '#markup' => "</tr>"
            );

            $i++;

        }

        $form['media_end'] = array(
            '#markup' => '</tr></table></div>'
        );


    }








        $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

}




   $Provide_Information_activity_social_media= 'Social networking (Facebook, Twitter, etc.)';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$Provide_Information_activity_social_media]) && $Provide_Information_activity[$Provide_Information_activity_social_media] )
        {





    // social media cadca select files
    $Social_Media_profile_view_cadca = db_query("SELECT social_media_profile  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_Media_profile_cadca = unserialize($Social_Media_profile_view_cadca);

    //echo "<pre>";print_r($Social_Media_profile);die();
    //sdfsdf


    $social_Media_submit_view_cadca = db_query("SELECT social_Media_Media_submit  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_Media_submit_cadca = unserialize($social_Media_submit_view_cadca);

    //echo "<pre>";print_r($social_Media_submit_csap);
    $social_media_date_view_cadca = db_query("SELECT social_media_date  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_date_cadca = unserialize($social_media_date_view_cadca);

    //echo "<pre>";print_r($social_media_date_csap);
    $Social_media_impression_view_cadca = db_query("SELECT Social_Media_media_impression  FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Social_media_impression_cadca = unserialize($Social_media_impression_view_cadca);

    // echo "<pre>";print_r($Social_media_impression_csap);
    $social_media_notes_view_cadca = db_query("SELECT Social_Media_media_notes FROM {Social_Media_cadca} WHERE implementation_id= " . $implementation_id)->fetchField();

    $social_media_notes_cadca = unserialize($social_media_notes_view_cadca);

    //echo "<pre>";print_r($social_media_notes_csap);die();


    // if($social_Media_submit_cadca && $social_Media_submit_cadca['social_media_submit'][0]){
      // social media information csap 6
      $form['social_media_start'] = array(
          '#markup' => "<div class='responsive_table'><h5>Social Media</h5><table id='social_media' class='imp_media_table'>
          <tr><th>Social Media Outlets </th><th>submitted </th><th>Date </th><th>Impressions </th><th>Notes </th></tr>"
      );

      if (isset($social_media_data) && count($social_media_data) > 0)
      {
          $si = 0;
          foreach ($social_media_data as $mKey => $mNames)
          {
              $form['social_media_row_start' . $si] = array(
                  '#markup' => "<tr>"
              );
              $form['Social_Media_profile' . $si] = array(
                  '#prefix' => '<td>',
                  '#type' => 'textfield',
                  '#value' => $mNames,
                  '#attributes' => array(
                      'readonly' => 'readonly'
                  ) ,
                  '#suffix' => '</td>',
                  '#attributes' => array(
                      'name' => "social_media_profile[$si]"
                  ) ,
              );

              $form['Social_Media_Media_submit' . $si] = array(
                  '#prefix' => '<td>',
                  '#type' => 'radios',
                  '#options' => array(
                      'Yes' => "YES",
                      'No' => "No",
                  ) ,
                  '#default_value'=>$social_Media_submit_cadca['social_media_submit'][$si],
                  '#suffix' => '</td>',
                  '#attributes' => array(
                      'name' => "social_media_submit[$si]"
                  ) ,
              );
              $form['social_media_date' . $si] = array(
                  '#prefix' => '<td>',
                  '#type' => 'textfield',
                  '#date_format' => 'm/d/Y',
                  '#suffix' => '</td>',
                  '#default_value'=>$social_media_date_cadca['social_media_date'][$si],
                  '#attributes' => array(
                      'name' => "social_media_date[$si]"
                  ) ,
              );
              $form['Social_Media_media_impression' . $si] = array(
                  '#prefix' => '<td>',
                  '#type' => 'radios',
                  '#options' => array(
                      'Yes' => "YES",
                      'No' => "No",
                  ) ,
                  '#default_value'=>$Social_media_impression_cadca['social_media_impression'][$si],
                  '#suffix' => '</td>',
                  '#attributes' => array(
                      'name' => "social_media_impression[$si]"
                  ) ,
              );
              $form['Social_Media_media_notes' . $si] = array(
                  '#prefix' => '<td>',
                  '#type' => 'textarea',
                  '#suffix' => '</td>',
                  '#default_value'=>$social_media_notes_cadca['social_media_notes'][$si],
                  '#attributes' => array(
                      'name' => "social_media_notes[$si]"
                  ) ,
              );
              $form['social_media_row_end' . $si] = array(
                  '#markup' => "</tr>"
              );
              $si++;

          }


      $form['social_media_end'] = array(
          '#markup' => '</table></div>'
      );
    }




    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
  $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {

            $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }


}



    $provide_prepared_produced = 'Informational materials prepared/ produced';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$provide_prepared_produced]) && $Provide_Information_activity[$provide_prepared_produced] )
        {
        $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }
     $form['number_adult_served_information'] = array(
                '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_cadca_7,
        );



        $form['number_youth_served_information'] = array(
                 '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_cadca_7,
        );
}


    $provide_dfc_web_site = ' Information on DFC Coalition Web site';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$provide_dfc_web_site]) && $Provide_Information_activity[$provide_dfc_web_site] )
        {

           $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

      $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );


        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
            '#attributes' => array(
            ' type' => 'number',
            'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );

}


    $provide_materials = 'Informational materials disseminated';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$provide_materials]) && $Provide_Information_activity[$provide_materials] )
        {

           $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

  $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );
        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );

            $form['number_adult_served_information'] = array(
                '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_cadca_7,
        );



        $form['number_youth_served_information'] = array(
                 '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_cadca_7,
        );


     $form['number_adult_served_presentation'] = array(
                '#type' => 'textfield',
            '#title' => t('How many Adult received written materials at this presentation?') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_cadca_7_presentation,
        );



        $form['number_youth_served_presentation'] = array(
                 '#type' => 'textfield',
        '#title' => t('How many Youth received written materials at this presentation?') ,
         '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_cadca_7_presentation,
        );

        }





            $provide_Other_edit = 'Others';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$provide_Other_edit]) && $Provide_Information_activity[$provide_Other_edit] )
        {

          $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

  $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );
        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );
   $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );
        }



         $provide_face_to_face = ' Direct face-to-face information sessions or Special events (e.g., fairs, community celebrations)';
    // presentation for information dissemination

       if (isset($Provide_Information_activity[$provide_face_to_face]) && $Provide_Information_activity[$provide_face_to_face] )
        {

          $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);

    if (isset($item->personConductingContent))
    {
        $personConduct_id_arr = unserialize($item->personConductingContent);
    }
    //echo "<pre>";print_r($personConduct_id_arr);die;

if($change_consequences_data=="" && $Change_Access_data=="" && $Change_Policies_data=="" && $Physical_Design_data==""){
    $form['personConductiongToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Person Conducting <span class="form-required" title="This field is required.">*</span>') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

    $form['personConductiongToggle']['personConducting'] = array(
        '#markup' => '<div class="responsive_table"><label>Person Conducting</label><table id="personConductingTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="conSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th> </tr></thead>
<tbody>'
    );
    $usersRow = '';
    foreach ($all_user_details as $usersList)
    { //echo "<pre>";print_r($usersList);die;
        if($usersList['uid']!="0" && (isset($usersList['roles'][7]) && $usersList['roles'][7]=="Staff User") || (isset($usersList['roles'][5]) && $usersList['roles'][5]=="Admin") || (isset($usersList['roles'][6]) && $usersList['roles'][6]=="Manager" ))
        {
  $pid=db_query("SELECT pid FROM profile WHERE uid =" . $usersList['uid'])->fetchField();

            $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $pid)->fetchField();
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $pid)->fetchField();

            $personChkVal = (in_array($usersList['uid'], $personConduct_id_arr['person_conducting'])) ? 'checked="checked"' : '';
            $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="person_conducting[]" value="' . $usersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $personChkVal . '>
              </div>
              </td><td>' . (($usersList['name'] != "") ? $usersList['name'] : "") . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td>
              <td>' . (($usersList['mail'] != "") ? $usersList['mail'] : "") . '</td><td>' . (($cell_phone != "") ? $cell_phone : "") . '</td></tr>';
        }

    }

    $form['personConductiongToggle']['personConductingContent'] = array(
        '#markup' => $usersRow,

        '#default_value' => $item->personConductingContent,

    );

    $form['personConductiongToggle']['personConductingEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );
  }

  $form['startdatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->startdatetime,
        );
        $form['end_date_wrapper'] = array(
            '#prefix' => '<div id="end_date_wrapper">',
            '#suffix' => '</div>',
            '#markup' => '',
        );

        $form['enddatetime'] = array(
            '#type' => 'date_popup',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $item->enddatetime,
        );

        $Length_of_services_csap_6 = $item->Length_of_services;
        $form['Length_of_services'] = array(
            '#type' => 'textfield',
            '#date_format' => 'H:i',
            '#title' => 'Length of Service (HH:MM)',
            '#default_value' => $Length_of_services_csap_6,

        );

        $form['location'] = array(
            '#type' => 'textfield',
            '#title' => 'Location',
            '#default_value' => $item->location,
            '#suffix' => '<hr>',
        );

        $form['address_1'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 1') ,
            '#default_value' => $item->address_1,
        );

        $form['address_2'] = array(
            '#type' => 'textfield',
            '#title' => t('Address 2') ,
            '#default_value' => $item->address_2,
        );

        $form['city'] = array(
            '#type' => 'textfield',
            '#title' => 'City',
            '#default_value' => $item->city,
        );

        $form['states'] = array(
            '#prefix' => '<div class="select_section capacity_select_Section">',
            '#suffix' => '</div>',
            '#title' => t('State') ,
            '#type' => 'select',
            '#options' => get_state_lists(),
            '#default_value' => $item->states,
        );
        $form['zip_code'] = array(
            '#type' => 'textfield',
            '#title' => t('Zipcode') ,
            '#element_validate' => array(
                'element_validate_number'
            ) ,
            '#maxlength' => 6,
            '#default_value' => $item->zip_code,
            '#suffix' => '</table>
    ', // Don't forget to close the table rows, and finally the table.

        );

      $form['number_adult_served_information'] = array(
                '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' =>  $number_adult_cadca_7,
        );



        $form['number_youth_served_information'] = array(
                 '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_youth_cadca_7,
        );
        }





    // change consequences
    $change_consequences = db_query("SELECT change_consequences, change_consequences  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $change_consequences_data = implode(" ", $change_consequences);

    $change_consequences_activity = db_query("SELECT change_activity, change_activity  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $change_consequences_activity_data = implode(" ", $change_consequences_activity);

    $change_consequences_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_change_consequences = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_change_consequences = implode(" ", $Level_Success);

    $number_adult_Business_design = db_query("SELECT number_adult_Business_design, number_adult_Business_design  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Business_change_consequences = implode(" ", $number_adult_Business_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_change_consequences = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {change_consequences} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_change_consequences = implode(" ", $enddatetime_physical);

    if (isset($change_consequences) && $change_consequences)
    {
        $form['change_consequences_edit'] = array(
            '#type' => 'textfield',
            '#title' => t('Title of the Change:') ,
            '#default_value' => $change_consequences_data,
        );
        $form['change_consequences_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Type of Change:') ,
            '#attributes' => array(
                "onclick" => "change_activity_others(this)"
            ) ,
            '#options' => array(
                '' => "<--select-->",
                'Strengthening Enforcement' => "Strengthening Enforcement",
                'Strengthening Surveillance' => "Strengthening Surveillance",
                'Recognition Programs' => "Recognition Programs",
                'Publicize Non-Compliance' => "Publicize Non-Compliance",
                'Other' => "Other",
            ) ,
            '#default_value' => $change_consequences_activity_data,
        );

        if (isset($change_consequences_others_for_all) && $change_consequences_others_for_all)
        {
            $form['change_consequences_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $change_consequences_others_for_all,
            );
        }
        $form['Funding_supports_change_consequences'] = array(

              '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
            '#attributes' => ($Funding_supports_change_consequences=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
    );
    }

    // change_access


    $Change_Access = db_query("SELECT Change_Access, Change_Access  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Access_data = implode(" ", $Change_Access);

    $Change_Access_activity = db_query("SELECT Change_Access_activity, Change_Access_activity  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Access_activity_data = implode(" ", $Change_Access_activity);

    $Change_Access_activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Change_Access = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Change_Access = implode(" ", $Level_Success);



    $number_youth_physical_design = db_query("SELECT number_youth_physical_design, number_youth_physical_design  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_youth_Change_Access = implode(" ", $number_youth_physical_design);

    $number_adult_physical_design = db_query("SELECT number_adult_physical_design, number_adult_physical_design  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Change_Access = implode(" ", $number_adult_physical_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_Change_Access = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {change_access} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_Change_Access = implode(" ", $enddatetime_physical);

    if (isset($Change_Access) && $Change_Access)
    {
        $form['Change_Access'] = array(
            '#type' => 'textfield',
            '#title' => t('Title of the Change:') ,
            '#default_value' => $Change_Access_data,
        );
        $form['Change_Access_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Type of Change:') ,
            '#attributes' => array(
                "onclick" => "Change_Access_activity_others(this)"
            ) ,
            '#options' => array(
                '' => "<--select-->",
                'Increased Access to Substance Use Services' => " Increased Access to Substance Use Services",
                'Reducing Home and Social Access to Alcohol and Other Substances' => "Reducing Home and Social Access to Alcohol and Other Substances",
                'Improve supports for service use' => "Improve supports for service use",
                'Improve access through culturally sensitive outreach' => "Improve access through culturally sensitive outreach",
                'Other' => "Other",
            ) ,
            '#default_value' => $Change_Access_activity_data,
        );
        if (isset($Change_Access_activity_others_for_all) && $Change_Access_activity_others_for_all)
        {

            $form['Change_Access_activity_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $Change_Access_activity_others_for_all,
            );
        }
        $form['Funding_supports_Change_Access'] = array(
        '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
          '#attributes' => ($Funding_supports_Change_Access=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
    );
    }

    // Change Policies
    $Change_Policies = db_query("SELECT Change_Policies, Change_Policies  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Policies_data = implode(" ", $Change_Policies);

    $Change_Policies_activity = db_query("SELECT Change_Policies_activity, Change_Policies_activity  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Change_Policies_activity_data = implode(" ", $Change_Policies_activity);

    $Change_Policies_activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Change_Policies = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Change_Policies = implode(" ", $Level_Success);

    $number_youth_physical_design = db_query("SELECT number_youth_physical_design, number_youth_physical_design  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_youth_Change_Policies = implode(" ", $number_youth_physical_design);

    $number_adult_physical_design = db_query("SELECT number_adult_physical_design, number_adult_physical_design  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Change_Policies = implode(" ", $number_adult_physical_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_Change_Policies = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {Change_Policies} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_Change_Policies = implode(" ", $enddatetime_physical);

    if (isset($Change_Policies) && $Change_Policies)
    {
        $form['Change_Policies'] = array(
            '#type' => 'textfield',
            '#title' => t('Title of the Change:') ,
            '#default_value' => $Change_Policies_data,
        );
        $form['Change_Policies_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Type of Change:') ,
            '#attributes' => array(
                "onclick" => "Change_Policies_activity_others(this)"
            ) ,
            '#options' => array(
                '' => "<--select-->",
                'Cost: Laws/public policies concerning cost (e.g. alcohol or tobacco tax, fees)' => "Cost: Laws/public policies concerning cost (e.g. alcohol or tobacco tax, fees)",
                'Underage Use: Laws/public policies targeting use, possession, or behavior under the influence of minors' => "Underage Use: Laws/public policies targeting use, possession, or behavior under the influence of minors",
                'Schools: Policies promoting drug-free schools' => "Schools: Policies promoting drug-free schools",
                'Treatment/Prevention: Laws/ public policies promoting treatment or prevention alternatives (e.g. diversion treatment programs for underage substance use offenders)' => "Treatment/Prevention: Laws/ public policies promoting treatment or prevention alternatives (e.g. diversion treatment programs for underage substance use offenders)",
                'Workplace: Policies promoting drug-free workplaces' => "Workplace: Policies promoting drug-free workplaces",
                'Citizen enabling/Liability: Laws/ public policies concerning adult (including parent) social enabling or liability (e.g. social host ordinances)' => "Citizen enabling/Liability: Laws/ public policies concerning adult (including parent) social enabling or liability (e.g. social host ordinances)",
                'Supplier Promotion/ Liability: Laws/ public policies concerning supplier advertising, promotion, liability (e.g. server liability, product placeent, happy hours, drink specials' => "Supplier Promotion/ Liability: Laws/ public policies concerning supplier advertising, promotion, liability (e.g. server liability, product placeent, happy hours, drink specials",
                'mandatory compliance checks, responsible beverage service' => "mandatory compliance checks, responsible beverage service",
                'Outlet Location / Density: Laws/ public policies concerning limitation and restrictions of location and density of alcohol outlets' => "Outlet Location / Density: Laws/ public policies concerning limitation and restrictions of location and density of alcohol outlets",
                'Sales Restrictions: Laws/ publicpolicies concerning restrictions on product sales (e.g., methamphetamine pre-cursor access, alcohol at gas stations)' => "Sales Restrictions: Laws/ publicpolicies concerning restrictions on product sales (e.g., methamphetamine pre-cursor access, alcohol at gas stations)",
                'Other' => "Other",
            ) ,
            '#default_value' => $Change_Policies_activity_data,
        );

        if (isset($Change_Policies_activity_others_for_all) && $Change_Policies_activity_others_for_all)
        {
            $form['Change_Policies_activity_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $Change_Policies_activity_others_for_all,
            );
        }
        $form['Funding_supports_Change_Policies'] = array(
                '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
        '#attributes' => ($Funding_supports_Change_Policies=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",

    );
    }

    // physical design
    $Physical_Design = db_query("SELECT Physical_Design, Physical_Design  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Physical_Design_data = implode(" ", $Physical_Design);

    $Physical_Design_activity = db_query("SELECT Physical_Design_activity, Physical_Design_activity  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Physical_Design_activity_data = implode(" ", $Physical_Design_activity);

    $Physical_Design_activity_others_for_all = db_query("SELECT others_for_all, others_for_all  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchField();

    $Funding_supports = db_query("SELECT Funding_supports, Funding_supports  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Funding_supports_Physical_Design = implode(" ", $Funding_supports);

    $Level_Success = db_query("SELECT Level_Success, Level_Success  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $Level_Success_Physical_Design = implode(" ", $Level_Success);


    $number_youth_physical_design = db_query("SELECT number_youth_physical_design, number_youth_physical_design  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_youth_Physical_Design = implode(" ", $number_youth_physical_design);

    $number_adult_physical_design = db_query("SELECT number_adult_physical_design, number_adult_physical_design  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $number_adult_Physical_Design = implode(" ", $number_adult_physical_design);

    $startdatetime_physical = db_query("SELECT startdatetime_physical, startdatetime_physical  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $startdatetime_Physical_Design = implode(" ", $startdatetime_physical);

    $enddatetime_physical = db_query("SELECT enddatetime_physical, enddatetime_physical  FROM {physical_design} WHERE implementation_id= " . $implementation_id)->fetchAllKeyed();
    $enddatetime_Physical_Design = implode(" ", $enddatetime_physical);

   if (isset($Physical_Design) && $Physical_Design)
    {
        $form['Physical_Design'] = array(
            '#type' => 'textfield',
            '#title' => t('Title of the Change:') ,
            '#default_value' => $Physical_Design_data,
        );
        $form['Physical_Design_activity'] = array(
            '#prefix' => '<div class="select_section">',
            '#suffix' => '</div>',
            '#type' => 'select',
            '#title' => t('Type of Change:') ,
            '#attributes' => array(
                "onclick" => "Physical_Design_activity_others(this)"
            ) ,
            '#options' => array(
                '' => "<--select-->",
                'Identify Physical Design Problems,' => "Identify Physical Design Problems,",
                'Cleanup and Beautification,' => "Cleanup and Beautification,",
                'Improve visibility/ease of surveillance in public places and substance use hotspots,' => "Improve visibility/ease of surveillance in public places and substance use hotspots,",
                'Promote improved signage / advetising/ practices by suppliers,' => "Promote improved signage / advetising/ practices by suppliers,",
                'Identify problem establishments for closure,' => "Identify problem establishments for closure,",
                'Encourage business/ supplier designation of "no alcohol" or "no tobacco" zones' => "Encourage business/ supplier designation of 'no alcohol' or 'no tobacco' zones",
                'Other' => "Other",
            ) ,
            '#default_value' => $Physical_Design_activity_data,
        );

        if (isset($Physical_Design_activity_others_for_all) && $Physical_Design_activity_others_for_all)
        {
            $form['physical_design_others_for_all'] = array(
                '#type' => 'textfield',
                '#title' => t('Others') ,
                '#default_value' => $Physical_Design_activity_others_for_all,
            );
        }

        $form['Funding_supports_Physical_Design'] = array(
               '#type' => 'checkboxes',
        '#title' => t('Funding supports') ,
        '#options' => array(
            'YES; Our coalition used STOP Act Funds for this activity' => "YES; Our coalition used STOP Act Funds for this activity",
        ) ,
        '#attributes' => ($Funding_supports_Physical_Design=="YES; Our coalition used STOP Act Funds for this activity")?array('checked' => 'checked'):"",
    );
    }

    // change consequences
    if (isset($change_consequences) && $change_consequences)
    {
        $form['startdatetime_physical'] = array(
            '#type' => 'textfield',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $startdatetime_change_consequences,
        );
        $form['enddatetime_physical'] = array(
            '#type' => 'textfield',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $enddatetime_change_consequences,
        );
    }

    // change access
    if (isset($Change_Access) && $Change_Access)
    {
        $form['startdatetime_physical'] = array(
            '#type' => 'textfield',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $startdatetime_Change_Access,
        );
        $form['enddatetime_physical'] = array(
            '#type' => 'textfield',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $enddatetime_Change_Access,
        );
    }

    // change policies
    if (isset($Change_Policies) && $Change_Policies)
    {
        $form['startdatetime_physical_Change_Policies'] = array(
            '#type' => 'textfield',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $startdatetime_Change_Policies,
        );

        $form['enddatetime_physical_Change_Policies'] = array(
            '#type' => 'textfield',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $enddatetime_Change_Policies,
        );
    }

    // change policies
    if (isset($Physical_Design) && $Physical_Design)
    {
        $form['startdatetime_physical_Physical_Design'] = array(
            '#type' => 'textfield',
            '#title' => 'Start Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $startdatetime_Physical_Design,
        );

        $form['enddatetime_physical_Physical_Design'] = array(
            '#type' => 'textfield',
            '#title' => 'End Date',
            '#date_format' => 'm/d/Y',
            '#default_value' => $enddatetime_Physical_Design,
        );
    }

    if (isset($change_consequences) && $change_consequences)
    {
        $form['number_adult_Business_design'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of adult design') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $number_adult_Business_change_consequences,
        );


    }

    //Change Access and Barries
    if (isset($Change_Access) && $Change_Access)
    {

        $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );


        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
            '#attributes' => array(
            ' type' => 'number',
            'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );

    }

    //Change /Policies
    if (isset($Change_Policies) && $Change_Policies)
    {

        $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );


        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
            '#attributes' => array(
            ' type' => 'number',
            'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );

    }

    //Physical Design
    if (isset($Physical_Design) && $Physical_Design)
    {

        $form['number_adult_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of Adult Attending') ,
             '#attributes' => array(
             'type' => 'number',
             'min' =>"0",
             ),
            '#default_value' => $item->number_adult_served,

        );

        $form['number_youth_served'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of youth Attending') ,
            '#attributes' => array(
            ' type' => 'number',
            'min' =>"0",
             ),
            '#default_value' => $item->number_youth_served,
        );
    }

    //enhance skills
    if (isset($enhance_skills) && $enhance_skills)
    {
        $form['Level_Success_enhance_skills'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_enhance_skills,
        );
    }

    //Providing Support
    if (isset($Providing_Support) && $Providing_Support)
    {
        $form['Level_Success_Providing_Support'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_Providing_Support,
        );
    }

    //Provide Information
    if (isset($Provide_Information) && $Provide_Information)
    {
        $form['Level_Success_Provide_Information'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_Provide_Information,
        );
    }

    // change consequences
    if (isset($change_consequences) && $change_consequences)
    {
        $form['Level_Success_change_consequences'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_change_consequences,
        );
    }

    // change consequences
    if (isset($Change_Access) && $Change_Access)
    {
        $form['Level_Success_Change_Access'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_Change_Access,
        );
    }

    // Change Policies
    if (isset($Change_Policies) && $Change_Policies)
    {
        $form['Level_Success_Change_Policies'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_Change_Policies,
        );
    }

    // Physical Design
    if (isset($Physical_Design) && $Physical_Design)
    {
        $form['Level_Success_Physical_Design'] = array(
            '#prefix' => '<hr>',
            '#type' => 'radios',
            '#title' => t('Level of Success:') ,
            '#options' => array(
                'Not Successful ' => "Not Successful ",
                'Moderately Successful' => "Moderately Successful",
                'Very Successful ' => "Very Successful"
            ) ,
            '#default_value' => $Level_Success_Physical_Design,
        );
    }


        $form['description_of_purpose'] = array(
            '#prefix' => '<hr>',
            '#type' => 'textarea',
            '#title' => t('Description of Purpose') ,
            '#default_value' => $item->description_of_purpose,
        );



        $form['description_of_outcome'] = array(
            '#type' => 'textarea',
            '#title' => t('Description of Outcome') ,
            '#default_value' => $item->description_of_outcome,
        );



    $all_user_lists = entity_load('user');

    $all_user_details = json_decode(json_encode($all_user_lists) , true);
    // prerson conducting activities
    if (isset($item->Members_Invloved))
    {
        $members_id_arr = unserialize($item->Members_Invloved);
    }
      $form['volunteerInvolvedToggle'] = array(
        '#type' => 'fieldset',
        '#title' => t('Volunteers Involved') ,
        '#collapsible' => true,
        '#collapsed' => true,
        '#attributes' => array(
            'class' => array(
                "planning-fieldset"
            )
        ) ,
    );

   // echo "<pre>";print_r($item);die;
    $form['volunteerInvolvedToggle']['membersInvolvedStart'] = array(
        '#markup' => '<div class="responsive_table"><label>Volunteers Involved</label><table id="membersInvolvedTab" class="sticky-enabled table-select-processed">
 <thead><tr><th class="select-all"><input id="memSelectAll" class="form-checkbox" title="Select all rows in this table" type="checkbox"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Cell phone</th><th>Company organization</th> </tr></thead>
<tbody>'
    );
    $membersRow = '';
    foreach ($all_user_details as $membersList)
    {
           if ($membersList['uid'] != "0" && (isset($membersList['roles'][8]) && $membersList['roles'][8] == "volunteers"))
        {
               $last_name_staff = db_query("SELECT field_last_name_value FROM field_data_field_last_name WHERE entity_id =" . $membersList['uid'])->fetchField(); //echo $last_name_staff."<pre>";print_r($usersList);die;
            $cell_phone = db_query("SELECT field_cell_phone_value FROM field_data_field_cell_phone WHERE entity_id =" . $membersList['uid'])->fetchField();
            $org_name = db_query("SELECT field_company_organization_value FROM field_data_field_company_organization WHERE entity_id =" . $membersList['uid'])->fetchField();

            $org_name = db_query("SELECT field_company_organization_value FROM field_data_field_company_organization WHERE entity_id =" . $membersList['uid'])->fetchField();
            $memChkVal = (in_array($membersList['uid'], $members_id_arr['Members_Invloved'])) ? 'checked="checked"' : '';
            $membersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
                <input id="edit-person-conducting-0" name="Members_Invloved[]" value="' . $membersList['uid'] . '" class="form-checkbox" type="checkbox" ' . $memChkVal . '>
              </div>
              </td><td>' . $membersList['name'] . '</td><td>' . (($last_name_staff != "") ? $last_name_staff : "") . '</td><td>' . $membersList['mail'] . '</td>
              <td>' . (($cell_phone != "") ? $cell_phone : "") . '</td><td>' . (($org_name != "") ? $org_name : "") . '</td></tr>';
        }

    }

    $form['volunteerInvolvedToggle']['Members_Invloved'] = array(
        '#markup' => $membersRow
    );

    $form['volunteerInvolvedToggle']['membersInvolvedEnd'] = array(
        '#markup' => '</tbody></table></div>'
    );




   $form['contact_starts'] = array(
      '#markup' => "<div id='person_Conducting_changehidden'>"
  );


     //echo $item->contact_person_conducting;die;

     $form['contactInvolvedToggle'] = array(
         '#type' => 'fieldset',
         '#title' => t('Contact Lists') ,
         '#collapsible' => true,
         '#collapsed' => true,
         '#attributes' => array(
             'class' => array(
                 "planning-fieldset"
             )
         ) ,
     );


  $form['contactInvolvedToggle']['personContact'] = array(
      '#markup' => '<div class="responsive_table"><table id="personConductingTab" class="sticky-enabled table-select-processed">
<thead><tr><th class="select-all"></th><th>First Name</th><th>Last Name</th><th>Email</th><th>Phone</th><th>Company Organization</th><th>Primary Sector</th></tr></thead>
<tbody>'
  );
  $contact_lists =db_query("SELECT * from {estar_contacts_details}")->fetchAll();
  $usersRow = '';
 if(isset($contact_lists) && count($contact_lists)>0){
  foreach ($contact_lists as $usersList)
  { //echo "<pre>";print_r($all_user_details);die;


    $person_conducting_data = db_query("SELECT contact_person_conducting,  contact_person_conducting  FROM {implementation_details} WHERE implementation_id= " . $implementation_id)->fetchField();

        $contact_id_arr = unserialize($person_conducting_data);



//print_r($contact_id_arr);die()

     $contactChkVal = (in_array($usersList->contact_id, $contact_id_arr['contact_person_conducting'])) ? 'checked="checked"' : '';

      if (isset($usersList) && $usersList!="")
      {
          $usersRow .= '<tr class="odd"><td><div class="form-item form-type-checkbox form-item-person-conducting-0">
              <label><input id="mouManagerId1" name="contact_person_conducting[]" value="' . $usersList->contact_id. '" class="form-checkbox required " type="checkbox" title="contact" '.$contactChkVal.'></label>

            </td><td>' . (($usersList->first_name != "") ? $usersList->first_name : "") . '</td>
            <td>' . (($usersList->last_name != "") ? $usersList->last_name : "") . '</td>
            <td>' . (($usersList->email != "") ? $usersList->email : "") . '</td>
            <td>' . (($usersList->phone != "") ? $usersList->phone : "") . '</td>
            <td>' . (($usersList->organization != "") ? $usersList->organization : "") . '</td>
            <td>' . (($usersList->primary_sector_select != "") ? $usersList->primary_sector_select : "") . '</td></tr>';
      }

  }
}else{
  $usersRow='<tr><td colspan="6">Contacts list is empty.</td></tr>';
}



  $form['contactInvolvedToggle']['personContactContent'] = array(
      '#markup' => $usersRow,
  );


  $form['contactInvolvedToggle']['personContactEnd'] = array(
      '#markup' => '</tbody></table></div>'
  );
  $form['contactInvolvedToggle']['person_Contact_end'] = array(
      '#markup' => '</div>'
  );



    if (isset($item->Donation_select) && $item->Donation_select != '')
    {
        $Donation_select_id = $item->Donation_select;
    }

    if (isset($item->Monetary_Value) && $item->Monetary_Value != '')
    {
        $Monetary_Value_id = $item->Monetary_Value;
    }

    if (isset($item->Comment) && $item->Comment != '')
    {
        $Comment_id = $item->Comment;
    }

    $Donation_data = unserialize($Donation_select_id);

    $Monetary_Value_data = unserialize($Monetary_Value_id);

    $Comment_data = unserialize($Comment_id);

    //echo "<pre>";print_r($Monetary_Value_data);die;
    $donation_data = "";
    if (isset($Donation_data['Donation_select']) && count($Donation_data['Donation_select']) > 0)
    {
        foreach ($Donation_data['Donation_select'] as $key => $value)
        {

            $donation_data .= '<tr>
          <td class="table_heading">
            <div id="remove-Donation' . $key . '" class="new_data">
              <div class="remove-edit' . $key . '" >
                <div class="select_section capacity_select_Section">
                   <select name="Donation_select[' . $key . ']" id="edit-' . $key . '" class="form-select">
                     <option value="Materials" ' . (($value == "Materials") ? "selected=selected" : "") . '>Materials</option>
                     <option value="Food and refreshments" ' . (($value == "Food and refreshments") ? "selected=selected" : "") . '>Food and refreshments</option>
                     <option value="Marketing" ' . (($value == "Marketing") ? "selected=selected" : "") . '>Marketing</option>
                     <option value="Support" ' . (($value == "Support") ? "selected=selected" : "") . '>Support</option>
                      <option value="Other" ' . (($value == "Other") ? "selected=selected" : "") . '>Other</option>
                   </select>
                </div>
              </div>
            </div>
          </td>';

            $donation_data .= '<td class="table_heading">
          <div id="remove-Monetary' . $key . '">
            <div class="remove-edit' . $key . '">
              <input name="Monetary_Value[' . $key . ']" id="edit-' . $key . '" value="' . $Monetary_Value_data['Monetary_Value'][$key] . '" size="60" maxlength="128" class="form-text" type="text">
            </div>
          </div>
        </td>';

            $donation_data .= '<td class="table_heading">
          <div id="remove-Comment' . $key . '" class="remove-edit' . $key . '">
            <div class="form-item form-type-textarea form-item-' . $key . '">
              <div class="form-textarea-wrapper resizable textarea-processed resizable-textarea">
                <textarea name="Comment[' . $key . ']" id="edit-' . $key . '" cols="60" rows="5" class="form-textarea">' . $Comment_data['Comment'][$key] . '</textarea>
              </div>
            </div>
          </div>
        </td>';
            $donation_data .= '<td class="table_heading">
          <div  class="button button_remove">
            <input type="button" id="remove-edit' . $key . '" class="remove-edit btn-danger" onclick="donation(this,' . $key . ')" value="Remove">
          </div>
        </td>
      </tr>';

        }
    }

    $form['Donation1'] = array(
        '#markup' => '<div class="responsive_table"><label>Donation</label><table id="myTableedit" class=" table order-list-edit">
    <thead>
        <tr>
            <th>Donation</th>
            <th>Monetary Value</th>
            <th>Comment</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody>
' . $donation_data . '
    </tbody>
    </table>
'
    );

    $form['donatio_table'] = array(
        '#markup' => '</tbody></table></div>
    <div id="addrowedit" class="button button_addmore"><input type="button" class="btn btn-lg btn-block add_more_btn"  value="Add More field" /></div>',
    );

    if (isset($item->Attachments_fid) && $item->Attachments_fid != '')
    {
        $upload_ids = unserialize($item->Attachments_fid);
    } //echo "<pre>";print_r($upload_ids);die;


    $form['Attachments-title'] = array(
        '#markup' => ''
    );

    $form['Attachments_files'] = array(
        '#prefix' => '<div class="responsive_table"><label>Attachment</label>
    <table id="myTable2" class="table order-list-att">
      <tr><th>' . t('Attachments') . '</th><th>' . t('Comments') . '</th></tr>' . '<tr><td class="table_heading">
    ',
    );

    if (isset($upload_ids['upload_id']) && count($upload_ids['upload_id']) > 0)
    {

        foreach ($upload_ids['upload_id'] as $uploadId)
        {
            $fid = $uploadId;
            $file_upload_details = db_query("SELECT * FROM {file_managed} WHERE fid = " . $fid)->fetchAll();

            $fURI = $file_upload_details[0]->uri;
            $fname = $file_upload_details[0]->filename;
            $fileURI = file_create_url($fURI);
            if ($fname != "")
            {
                $form['Attachments_fid' . $uploadId] = array(
                    '#markup' => t('<div class="upload_data"><a href=' . $fileURI . '><i class="fa fa-cloud-download" aria-hidden="true"></i>
 ' . $fname . '</a></div>') ,
                );
            }
        }

    }

    $form['Attachments_fid'] = array(
        '#type' => 'managed_file_multiple',
        '#title' => 'Upload files',
        '#upload_validators' => array(
            'file_validate_extensions' => array(
                'pdf doc docx png gif jpg  xls ppt'
            )
        ) ,
        '#upload_location' => 'public://capacity_documents/',
        //'#description' => t('<a href='.$fileURI.'>'.$fname.'</a> <br>Please use the Choose file button to attach a response document<br><strong>Allowed extensions: pdf doc docx</strong>.'),
        '#prefix' => '<tr><td class="table_heading">',
        '#suffix' => '</td>',
    );
    $form['Attachments_notes'] = array(
        '#prefix' => '<td class="table_heading">',
        '#type' => 'textarea',
        '#rows' => 5,
        '#cols' => 30,
        '#suffix' => '</td></tr>
        </table></div>
    <td colspan="5" style="text-align: left;">
                <input style="display:none;" type="button" class="btn btn-lg btn-block " id="addrow-list" value="Add More field" />
            </td>
    ', // Don't forget to close the table rows, and finally the table.
        '#default_value' => $item->Attachments_notes,
    );


    /*$form['pending_field'] = array(
        '#type' => 'checkboxes',
       //'#title' => t('Pending'),
       '#options' => array('1'=>"Pending"),
       '#attributes' => ($item->is_pending=="1")?array('checked' => 'checked'):"",
    );*/
  $form['signature'] = array(
        '#type' => 'radios',
        '#title' => t('Signature') ,
        '#options' => array(
            '2' => "Pending",
            '0' => "Save a Copy/Add a Component",
            '1' => "Review and Sign"
        ) ,
        '#attributes' => array(
          'required' => true,
             ),
    );

    $form['imp_user_id'] = array(
        '#type' => "hidden",
        '#value' => $user->uid,
    );

    $form['attachment_upload_id'] = array(
        '#type' => "hidden",
        '#value' => $item->Attachments_fid,
    );

    $form['problem_referral_hiiden_end'] = array(
        '#markup' => '</div>'
    );

    $form['next_btn_div_start2'] = array(
        '#markup' => "<div class='next_button'>"
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save & Exit') ,
    );
    $form['next_btn_div_end2'] = array(
        '#markup' => "</div>"
    );

    $form['submit-btn-separator'] = array(
        '#markup' => '&nbsp;&nbsp;&nbsp;'
    );


    return $form;
}


// implementation edit submit end here


  // validation start

function implementation_save_and_copy_form_alter(&$form, &$form_state, $form_id) {
  // There will already be some validate handlers added so you need to add to the
  // array rather than overwrite it.
  $form['#validate'][] = 'implementation_save_and_copy_form_validate';
}
function implementation_save_and_copy_form_validate($form, &$form_state) { //echo "<pre>";print_r($form_state);die;
  // Random example, if the title is 'test' throw an error

//echo "<pre>";print_r($_REQUEST);die;


if($form_state['input']['signature']=="2"){

      if ($_REQUEST['logic_model_title_link0_0'] == '') {//echo "in";die;
    form_set_error('logic_model_title_link0_0', '<div class="implementation-requried">Logic Model is required.</div>');

  }

  if($form_state['input']['csap_6']=="Alternative Activities"){
         $Alternative_unique = $form_state['values']['Alternative_Activities'];
    $check_unique_query = db_query("SELECT Alternative_Activities FROM {alternative_activitity}")->fetchAll();
   $Alternative_Activities_unique = $check_unique_query;
   $getCount=count($Alternative_Activities_unique);
   for($i=0;$i<$getCount;$i++){
   if($Alternative_unique==$Alternative_Activities_unique[$i]->Alternative_Activities) {
   form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Alternative_Activities']==''){
        form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is required.</div>');
      }

}



  if($form_state['input']['csap_6']=="Recruitment Effort"){


         $Community_unique = $form_state['values']['Community_based_Process'];
    $Community_unique_query = db_query("SELECT Community_based_Process FROM {community_based}")->fetchAll();

   $Community_based_unique = $Community_unique_query;
   $getCount=count($Community_based_unique);
   for($i=0;$i<$getCount;$i++){
   if($Community_unique==$Community_based_unique[$i]->Community_based_Process) {
   form_set_error('Community_based_Process', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }
        if($form_state['input']['Community_based_Process']==''){
        form_set_error('Community_based_Process', '<div class="implementation-requried">Title is required.</div>');
      }


}


    if($form_state['input']['csap_6']=="Education"){


     $education_csap = $form_state['values']['education_csap'];
     $education_unique_query = db_query("SELECT education_csap FROM {education}")->fetchAll();
     $education_unique = $education_unique_query;
     $getCount=count($education_unique);
     for($i=0;$i<$getCount;$i++){
     if($education_csap==$education_unique[$i]->education_csap) {
     form_set_error('education_csap', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }
      if($form_state['input']['education_csap']==''){
        form_set_error('education_csap', '<div class="implementation-requried">Title is required.</div>');
      }

}

  if($form_state['input']['csap_6']=="Environmental"){

      $environmental = $form_state['values']['environmental'];
     $environmental_unique_query = db_query("SELECT environmental FROM {environmental}")->fetchAll();
     $environmental_unique = $environmental_unique_query;
     $getCount=count($environmental_unique);
     for($i=0;$i<$getCount;$i++){
     if($environmental==$environmental_unique[$i]->environmental) {
     form_set_error('environmental', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }
     if($form_state['input']['environmental']==''){
        form_set_error('environmental', '<div class="implementation-requried">Title is required.</div>');
      }


}

     if($form_state['input']['csap_6']=="Information Dissemination"){
     $Information_Dissemination_csap6 = $form_state['values']['Information_Dissemination_csap6'];
     $Information_Dissemination_unique_query = db_query("SELECT Information_Dissemination_csap6 FROM {information_dissemination_details}")->fetchAll();
     $Information_Dissemination_unique = $Information_Dissemination_unique_query;
     $getCount=count($Information_Dissemination_unique);
     for($i=0;$i<$getCount;$i++){
     if($Information_Dissemination_csap6==$Information_Dissemination_unique[$i]->Information_Dissemination_csap6) {
     form_set_error('Information_Dissemination_csap6', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }
          if($form_state['input']['information_dissemination_edit']==''){

        form_set_error('information_dissemination_edit', '<div class="implementation-requried">Title is required.</div>');
      }

    }

         if($form_state['input']['csap_7']=="Enhance Skills"){
    $Enhance_Skills = $form_state['values']['Enhance_Skills'];
     $Enhance_Skills_unique_query = db_query("SELECT Enhance_Skills FROM {enhance_skills}")->fetchAll();
     $Enhance_Skills_unique = $Enhance_Skills_unique_query;
     $getCount=count($Enhance_Skills_unique);
     for($i=0;$i<$getCount;$i++){
     if($Enhance_Skills==$Enhance_Skills_unique[$i]->Enhance_Skills) {
     form_set_error('Enhance_Skills', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

   if($form_state['input']['enhance_skills']==''){
        form_set_error('enhance_skills', '<div class="implementation-requried">Title is required.</div>');
      }


}


      if($form_state['input']['csap_7']=="Providing Support"){
    $Providing_Support = $form_state['values']['providing_Support'];
     $Providing_Support_unique_query = db_query("SELECT Providing_Support FROM {providing_Support}")->fetchAll();
     $Providing_Support_unique = $Providing_Support_unique_query;
     $getCount=count($Providing_Support_unique);
     for($i=0;$i<$getCount;$i++){
     if($Providing_Support==$Providing_Support_unique[$i]->Providing_Support) {
     form_set_error('providing_Support', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['providing_Support']==''){
        form_set_error('providing_Support', '<div class="implementation-requried">Title is required.</div>');
      }
}


       if($form_state['input']['csap_7']=="Provide Information"){

        $Provide_Information = $form_state['values']['Provide_Information'];
     $Provide_Information_unique_query = db_query("SELECT Provide_Information FROM {Provide_Information}")->fetchAll();
     $Provide_Information_unique = $Provide_Information_unique_query;
     $getCount=count($Provide_Information_unique);
     for($i=0;$i<$getCount;$i++){
     if($Provide_Information==$Provide_Information_unique[$i]->Provide_Information) {
     form_set_error('Provide_Information', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

 if($form_state['input']['Provide_Information']==''){
        form_set_error('Provide_Information', '<div class="implementation-requried">Title is required.</div>');
      }


    }


        if($form_state['input']['csap_7']=="Change Consequences"){
     $change_consequences = $form_state['values']['change_consequences_edit'];
     $change_consequences_unique_query = db_query("SELECT change_consequences FROM {change_consequences}")->fetchAll();
     $change_consequences_unique = $change_consequences_unique_query;
     $getCount=count($change_consequences_unique);
     for($i=0;$i<$getCount;$i++){
     if($change_consequences==$change_consequences_unique[$i]->change_consequences) {
     form_set_error('change_consequences_edit', '<div class="implementation-requried">Title is already taken.</div>');
      }
      }

    if($form_state['input']['change_consequences_edit']==''){
        form_set_error('change_consequences_edit', '<div class="implementation-requried">Title is required.</div>');
      }
  }

        if($form_state['input']['csap_7']=="Change Access and Barries"){

       $Change_Access = $form_state['values']['Change_Access'];
     $Change_Access_unique_query = db_query("SELECT Change_Access FROM {change_access}")->fetchAll();
     $Change_Access_unique = $Change_Access_unique_query;
     $getCount=count($Change_Access_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Access==$Change_Access_unique[$i]->Change_Access) {
     form_set_error('Change_Access', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

   if($form_state['input']['Change_Access']==''){
        form_set_error('Change_Access', '<div class="implementation-requried">Title is required.</div>');
      }

}


          if($form_state['input']['csap_7']=="Modify/Change Policies"){
     $Change_Policies = $form_state['values']['Change_Policies'];
     $Change_Policies_unique_query = db_query("SELECT Change_Policies FROM {Change_Policies}")->fetchAll();
     $Change_Policies_unique = $Change_Policies_unique_query;
     $getCount=count($Change_Policies_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Policies==$Change_Policies_unique[$i]->Change_Policies) {
     form_set_error('Change_Policies', '<div class="implementation-requried">title is already taken.</div>');
      }
    }

  if($form_state['input']['Change_Policies']==''){
        form_set_error('Change_Policies', '<div class="implementation-requried">Title is required.</div>');
      }


    }

    if($form_state['input']['csap_7']=="Physical Design"){

           $Physical_Design = $form_state['values']['Physical_Design'];
     $Physical_Design_unique_query = db_query("SELECT Physical_Design FROM {physical_design}")->fetchAll();
     $Physical_Design_unique = $Physical_Design_unique_query;
     $getCount=count($Physical_Design_unique);
     for($i=0;$i<$getCount;$i++){
     if($Physical_Design==$Physical_Design_unique[$i]->Physical_Design) {
     form_set_error('Physical_Design', '<div class="implementation-requried">title is already taken.</div>');
      }

    }

   if($form_state['input']['Physical_Design']==''){
        form_set_error('Physical_Design', '<div class="implementation-requried">title is required.</div>');
      }

}


}


if($form_state['input']['signature']=="0"){

      if ($_REQUEST['logic_model_title_link0_0'] == '') {//echo "in";die;
    form_set_error('logic_model_title_link0_0', '<div class="implementation-requried">Logic Model is required.</div>');

  }


  if($form_state['input']['csap_6']=="Alternative Activities"){
         $Alternative_unique = $form_state['values']['Alternative_Activities'];
    $check_unique_query = db_query("SELECT Alternative_Activities FROM {alternative_activitity}")->fetchAll();
   $Alternative_Activities_unique = $check_unique_query;
   $getCount=count($Alternative_Activities_unique);
   for($i=0;$i<$getCount;$i++){
   if($Alternative_unique==$Alternative_Activities_unique[$i]->Alternative_Activities) {
   form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Alternative_Activities']==''){
        form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is required.</div>');
      }

}



  if($form_state['input']['csap_6']=="Community-based Process"){


         $Community_unique = $form_state['values']['Community_based_Process'];
    $Community_unique_query = db_query("SELECT Community_based_Process FROM {community_based}")->fetchAll();

   $Community_based_unique = $Community_unique_query;
   $getCount=count($Community_based_unique);
   for($i=0;$i<$getCount;$i++){
   if($Community_unique==$Community_based_unique[$i]->Community_based_Process) {
   form_set_error('Community_based_Process', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }
        if($form_state['input']['Community_based_Process']==''){
        form_set_error('Community_based_Process', '<div class="implementation-requried">Title is required.</div>');
      }


}


    if($form_state['input']['csap_6']=="Education"){


     $education_csap = $form_state['values']['education_csap'];
     $education_unique_query = db_query("SELECT education_csap FROM {education}")->fetchAll();
     $education_unique = $education_unique_query;
     $getCount=count($education_unique);
     for($i=0;$i<$getCount;$i++){
     if($education_csap==$education_unique[$i]->education_csap) {
     form_set_error('education_csap', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }
      if($form_state['input']['education_csap']==''){
        form_set_error('education_csap', '<div class="implementation-requried">Title is required.</div>');
      }

}

  if($form_state['input']['csap_6']=="Environmental"){

      $environmental = $form_state['values']['environmental'];
     $environmental_unique_query = db_query("SELECT environmental FROM {environmental}")->fetchAll();
     $environmental_unique = $environmental_unique_query;
     $getCount=count($environmental_unique);
     for($i=0;$i<$getCount;$i++){
     if($environmental==$environmental_unique[$i]->environmental) {
     form_set_error('environmental', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }
     if($form_state['input']['environmental']==''){
        form_set_error('environmental', '<div class="implementation-requried">Title is required.</div>');
      }


}

     if($form_state['input']['csap_6']=="Information Dissemination"){
     $Information_Dissemination_csap6 = $form_state['values']['Information_Dissemination_csap6'];
     $Information_Dissemination_unique_query = db_query("SELECT Information_Dissemination_csap6 FROM {information_dissemination_details}")->fetchAll();
     $Information_Dissemination_unique = $Information_Dissemination_unique_query;
     $getCount=count($Information_Dissemination_unique);
     for($i=0;$i<$getCount;$i++){
     if($Information_Dissemination_csap6==$Information_Dissemination_unique[$i]->Information_Dissemination_csap6) {
     form_set_error('Information_Dissemination_csap6', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }
          if($form_state['input']['information_dissemination_edit']==''){

        form_set_error('information_dissemination_edit', '<div class="implementation-requried">Title is required.</div>');
      }

    }

         if($form_state['input']['csap_7']=="Enhance Skills"){
    $Enhance_Skills = $form_state['values']['Enhance_Skills'];
     $Enhance_Skills_unique_query = db_query("SELECT Enhance_Skills FROM {enhance_skills}")->fetchAll();
     $Enhance_Skills_unique = $Enhance_Skills_unique_query;
     $getCount=count($Enhance_Skills_unique);
     for($i=0;$i<$getCount;$i++){
     if($Enhance_Skills==$Enhance_Skills_unique[$i]->Enhance_Skills) {
     form_set_error('Enhance_Skills', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

   if($form_state['input']['enhance_skills']==''){
        form_set_error('enhance_skills', '<div class="implementation-requried">Title is required.</div>');
      }


}


      if($form_state['input']['csap_7']=="Providing Support"){
    $Providing_Support = $form_state['values']['providing_Support'];
     $Providing_Support_unique_query = db_query("SELECT Providing_Support FROM {providing_Support}")->fetchAll();
     $Providing_Support_unique = $Providing_Support_unique_query;
     $getCount=count($Providing_Support_unique);
     for($i=0;$i<$getCount;$i++){
     if($Providing_Support==$Providing_Support_unique[$i]->Providing_Support) {
     form_set_error('providing_Support', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['providing_Support']==''){
        form_set_error('providing_Support', '<div class="implementation-requried">Title is required.</div>');
      }
}


       if($form_state['input']['csap_7']=="Provide Information"){

        $Provide_Information = $form_state['values']['Provide_Information'];
     $Provide_Information_unique_query = db_query("SELECT Provide_Information FROM {Provide_Information}")->fetchAll();
     $Provide_Information_unique = $Provide_Information_unique_query;
     $getCount=count($Provide_Information_unique);
     for($i=0;$i<$getCount;$i++){
     if($Provide_Information==$Provide_Information_unique[$i]->Provide_Information) {
     form_set_error('Provide_Information', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

 if($form_state['input']['Provide_Information']==''){
        form_set_error('Provide_Information', '<div class="implementation-requried">Title is required.</div>');
      }


    }


        if($form_state['input']['csap_7']=="Change Consequences"){
     $change_consequences = $form_state['values']['change_consequences_edit'];
     $change_consequences_unique_query = db_query("SELECT change_consequences FROM {change_consequences}")->fetchAll();
     $change_consequences_unique = $change_consequences_unique_query;
     $getCount=count($change_consequences_unique);
     for($i=0;$i<$getCount;$i++){
     if($change_consequences==$change_consequences_unique[$i]->change_consequences) {
     form_set_error('change_consequences_edit', '<div class="implementation-requried">Title is already taken.</div>');
      }
      }

    if($form_state['input']['change_consequences_edit']==''){
        form_set_error('change_consequences_edit', '<div class="implementation-requried">Title is required.</div>');
      }
  }

        if($form_state['input']['csap_7']=="Change Access and Barries"){

       $Change_Access = $form_state['values']['Change_Access'];
     $Change_Access_unique_query = db_query("SELECT Change_Access FROM {change_access}")->fetchAll();
     $Change_Access_unique = $Change_Access_unique_query;
     $getCount=count($Change_Access_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Access==$Change_Access_unique[$i]->Change_Access) {
     form_set_error('Change_Access', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

   if($form_state['input']['Change_Access']==''){
        form_set_error('Change_Access', '<div class="implementation-requried">Title is required.</div>');
      }

}


          if($form_state['input']['csap_7']=="Modify/Change Policies"){
     $Change_Policies = $form_state['values']['Change_Policies'];
     $Change_Policies_unique_query = db_query("SELECT Change_Policies FROM {Change_Policies}")->fetchAll();
     $Change_Policies_unique = $Change_Policies_unique_query;
     $getCount=count($Change_Policies_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Policies==$Change_Policies_unique[$i]->Change_Policies) {
     form_set_error('Change_Policies', '<div class="implementation-requried">title is already taken.</div>');
      }
    }

  if($form_state['input']['Change_Policies']==''){
        form_set_error('Change_Policies', '<div class="implementation-requried">Title is required.</div>');
      }


    }

    if($form_state['input']['csap_7']=="Physical Design"){

           $Physical_Design = $form_state['values']['Physical_Design'];
     $Physical_Design_unique_query = db_query("SELECT Physical_Design FROM {physical_design}")->fetchAll();
     $Physical_Design_unique = $Physical_Design_unique_query;
     $getCount=count($Physical_Design_unique);
     for($i=0;$i<$getCount;$i++){
     if($Physical_Design==$Physical_Design_unique[$i]->Physical_Design) {
     form_set_error('Physical_Design', '<div class="implementation-requried">title is already taken.</div>');
      }

    }

   if($form_state['input']['Physical_Design']==''){
        form_set_error('Physical_Design', '<div class="implementation-requried">title is required.</div>');
      }

}

}


if($form_state['input']['signature']=="1"){

  if ($_REQUEST['logic_model_title_link0_0'] == '') {//echo "in";die;
    form_set_error('logic_model_title_link0_0', '<div class="implementation-requried">Logic Model is required.</div>');

  }
  if($form_state['input']['Strategies']=="CSAP 6"){
      if($form_state['input']['csap_6']==''){
        form_set_error('csap_6', '<div class="implementation-requried">CSAP 6 Title required.</div>');
      }
  }

  if($form_state['input']['csap_6']=="Alternative Activities"){

        $Alternative_unique = $form_state['values']['Alternative_Activities'];
    $check_unique_query = db_query("SELECT Alternative_Activities FROM {alternative_activitity}")->fetchAll();
   $Alternative_Activities_unique = $check_unique_query;
   $getCount=count($Alternative_Activities_unique);
   for($i=0;$i<$getCount;$i++){
   if($Alternative_unique==$Alternative_Activities_unique[$i]->Alternative_Activities) {
   form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Alternative_Activities']==''){
        form_set_error('Alternative_Activities', '<div class="implementation-requried">Title is required.</div>');
      }

    if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
       }
       if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }

  }


  if($form_state['input']['csap_6']=="Community-based Process"){


         $Community_unique = $form_state['values']['Community_based_Process'];
    $Community_unique_query = db_query("SELECT Community_based_Process FROM {community_based}")->fetchAll();

   $Community_based_unique = $Community_unique_query;
   $getCount=count($Community_based_unique);
   for($i=0;$i<$getCount;$i++){
   if($Community_unique==$Community_based_unique[$i]->Community_based_Process) {
   form_set_error('Community_based_Process', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }
      if($form_state['input']['Community_based_Process']==''){
        form_set_error('Community_based_Process', '<div class="implementation-requried">Title is required.</div>');
      }
        if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
       }
       if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }

  }


    if($form_state['input']['csap_6']=="Education"){


     $education_csap = $form_state['values']['education_csap'];
     $education_unique_query = db_query("SELECT education_csap FROM {education}")->fetchAll();
     $education_unique = $education_unique_query;
     $getCount=count($education_unique);
     for($i=0;$i<$getCount;$i++){
     if($education_csap==$education_unique[$i]->education_csap) {
     form_set_error('education_csap', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['education_csap']==''){
        form_set_error('education_csap', '<div class="implementation-requried">Title is required.</div>');
      }
        if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
       }
       if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }

}
    if($form_state['input']['csap_6']=="Environmental"){

      $environmental = $form_state['values']['environmental'];
     $environmental_unique_query = db_query("SELECT environmental FROM {environmental}")->fetchAll();
     $environmental_unique = $environmental_unique_query;
     $getCount=count($environmental_unique);
     for($i=0;$i<$getCount;$i++){
     if($environmental==$environmental_unique[$i]->environmental) {
     form_set_error('environmental', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['environmental']==''){
        form_set_error('environmental', '<div class="implementation-requried">Title is required.</div>');
      }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
       }
    }

     if($form_state['input']['csap_6']=="Information Dissemination"){


     $Information_Dissemination_csap6 = $form_state['values']['Information_Dissemination_csap6'];
     $Information_Dissemination_unique_query = db_query("SELECT Information_Dissemination_csap6 FROM {information_dissemination_details}")->fetchAll();
     $Information_Dissemination_unique = $Information_Dissemination_unique_query;
     $getCount=count($Information_Dissemination_unique);
     for($i=0;$i<$getCount;$i++){
     if($Information_Dissemination_csap6==$Information_Dissemination_unique[$i]->Information_Dissemination_csap6) {
     form_set_error('Information_Dissemination_csap6', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['information_dissemination_edit']==''){

        form_set_error('information_dissemination_edit', '<div class="implementation-requried">Title is required.</div>');
      }
    }
      if($form_state['input']['information_dissemination']=="Media"){


     if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');

       }if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }
    }

       if($form_state['input']['information_dissemination']=="Social Media"){


       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }
    }

     if($form_state['input']['information_dissemination']=="Presentations"){


       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }


     if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
    }
    if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }
}

     if($form_state['input']['information_dissemination']=="Distribution of Materials"){


       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }


     if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
    }
    if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }
}


// cadca 7

     if($form_state['input']['Strategies']=="CADCA 7"){

     if($form_state['input']['csap_7']==''){
       form_set_error('csap_7', '<div class="implementation-requried">CSAP 7 Title required.</div>');
     }


      if($form_state['input']['csap_7']=="Enhance Skills"){


    $Enhance_Skills = $form_state['values']['Enhance_Skills'];
     $Enhance_Skills_unique_query = db_query("SELECT Enhance_Skills FROM {enhance_skills}")->fetchAll();
     $Enhance_Skills_unique = $Enhance_Skills_unique_query;
     $getCount=count($Enhance_Skills_unique);
     for($i=0;$i<$getCount;$i++){
     if($Enhance_Skills==$Enhance_Skills_unique[$i]->Enhance_Skills) {
     form_set_error('Enhance_Skills', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['enhance_skills']==''){
        form_set_error('enhance_skills', '<div class="implementation-requried">Title is required.</div>');
      }
        if($form_state['input']['Enhance_Activity']==''){
        form_set_error('Enhance_Activity', '<div class="implementation-requried">Activity title is required.</div>');
      }


     if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

     if($form_state['input']['Level_Success_enhance_skills']==""){
         form_set_error('Level_Success', '<div class="implementation-requried">Level of Success is required.</div>');
     }

          if($form_state['input']['Funding_supports']==""){
         form_set_error('Funding_supports', '<div class="implementation-requried"> Funding supports is required.</div>');
     }

      }


      if($form_state['input']['csap_7']=="Providing Support"){


    $Providing_Support = $form_state['values']['providing_Support'];
     $Providing_Support_unique_query = db_query("SELECT Providing_Support FROM {providing_Support}")->fetchAll();
     $Providing_Support_unique = $Providing_Support_unique_query;
     $getCount=count($Providing_Support_unique);
     for($i=0;$i<$getCount;$i++){
     if($Providing_Support==$Providing_Support_unique[$i]->Providing_Support) {
     form_set_error('providing_Support', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }


      if($form_state['input']['providing_Support']==''){
        form_set_error('providing_Support', '<div class="implementation-requried">Title is required.</div>');
      }
       if($form_state['input']['Providing_Support_activity']==''){
        form_set_error('Providing_Support_activity', '<div class="implementation-requried">Activity title is required.</div>');
      }

    if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }

     if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }
        if($form_state['input']['Level_Success_Providing_Support']==""){
         form_set_error('Level_Success_Providing_Support', '<div class="implementation-requried">Level of Success is required.</div>');
     }
          if($form_state['input']['Funding_supports_Providing_Support']==""){
         form_set_error('Funding_supports_Providing_Support', '<div class="implementation-requried"> Funding supports is required.</div>');
     }

      }

       if($form_state['input']['csap_7']=="Provide Information"){

        $Provide_Information = $form_state['values']['Provide_Information'];
     $Provide_Information_unique_query = db_query("SELECT Provide_Information FROM {Provide_Information}")->fetchAll();
     $Provide_Information_unique = $Provide_Information_unique_query;
     $getCount=count($Provide_Information_unique);
     for($i=0;$i<$getCount;$i++){
     if($Provide_Information==$Provide_Information_unique[$i]->Provide_Information) {
     form_set_error('Provide_Information', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Provide_Information']==''){
        form_set_error('Provide_Information', '<div class="implementation-requried">Title is required.</div>');
      }
        if($form_state['input']['Provide_Information_activity']==''){
        form_set_error('Provide_Information_activity', '<div class="implementation-requried">Activity title is required.</div>');
      }
          if($form_state['input']['Level_Success_Provide_Information']==""){
         form_set_error('Level_Success_Providing_Support', '<div class="implementation-requried">Level of Success is required.</div>');
     }
          if($form_state['input']['Funding_supports']==""){
         form_set_error('Funding_supports_Providing_Support', '<div class="implementation-requried"> Funding supports is required.</div>');
     }
      }


    if($form_state['input']['Provide_Information_activity']=="Informational materials disseminated"){

       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
    }
      if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }
}



    if($form_state['input']['Provide_Information_activity']=="Informational materials disseminated"){

       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
    }
      if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }

}



    if($form_state['input']['Provide_Information_activity']==" Direct face-to-face information sessions or Special events (e.g., fairs, community celebrations)"){

       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
    }
      if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }
}


    if($form_state['input']['Provide_Information_activity']=="Others"){

       if(!isset($form_state['input']['person_conducting'])){
           form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
        }

      if($form_state['input']['startdatetime']['date']==""){
           form_set_error('startdatetime[date]', '<div class="implementation-requried">Start date is required.</div>');
       }

      if($form_state['input']['enddatetime']['date']==""){
           form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
    }
      if($form_state['input']['Length_of_services']['time']==""){
           form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
       }
}


        if($form_state['input']['csap_7']=="Change Consequences"){
     $change_consequences = $form_state['values']['change_consequences_edit'];
     $change_consequences_unique_query = db_query("SELECT change_consequences FROM {change_consequences}")->fetchAll();
     $change_consequences_unique = $change_consequences_unique_query;
     $getCount=count($change_consequences_unique);
     for($i=0;$i<$getCount;$i++){
     if($change_consequences==$change_consequences_unique[$i]->change_consequences) {
     form_set_error('change_consequences_edit', '<div class="implementation-requried">Title is already taken.</div>');
      }
      }

         if($form_state['input']['change_consequences_edit']==''){
        form_set_error('change_consequences_edit', '<div class="implementation-requried">Title is required.</div>');
      }
         if($form_state['input']['change_consequences_activity']==''){
        form_set_error('change_consequences_activity', '<div class="implementation-requried">Activity Title is required.</div>');
      }
         if($form_state['input']['startdatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">Start Date is required.</div>');
      }
         if($form_state['input']['enddatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">End Date is required.</div>');
      }
          if($form_state['input']['Level_Success_change_consequences']==''){
        form_set_error('Level_Success_change_consequences', '<div class="implementation-requried">Level of Success is required.</div>');
      }
         }


        if($form_state['input']['csap_7']=="Change Access and Barries"){

       $Change_Access = $form_state['values']['Change_Access'];
     $Change_Access_unique_query = db_query("SELECT Change_Access FROM {change_access}")->fetchAll();
     $Change_Access_unique = $Change_Access_unique_query;
     $getCount=count($Change_Access_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Access==$Change_Access_unique[$i]->Change_Access) {
     form_set_error('Change_Access', '<div class="implementation-requried">Title is already taken.</div>');
      }
    }

      if($form_state['input']['Change_Access']==''){
        form_set_error('Change_Access', '<div class="implementation-requried">Title is required.</div>');
      }
        if($form_state['input']['Change_Access_activity']==''){
        form_set_error('Change_Access_activity', '<div class="implementation-requried">Activity title is required.</div>');
      }


         if($form_state['input']['startdatetime_physical']==''){
        form_set_error('startdatetime_physical', '<div class="implementation-requried">Start Date is required.</div>');
      }
         if($form_state['input']['enddatetime_physical']==''){
        form_set_error('enddatetime_physical', '<div class="implementation-requried">End Date is required.</div>');
      }
             if($form_state['input']['Level_Success_Change_Access']==''){
        form_set_error('Level_Success_Change_Access', '<div class="implementation-requried">Level of Success is required.</div>');
      }

      }

          if($form_state['input']['csap_7']=="Modify/Change Policies"){
     $Change_Policies = $form_state['values']['Change_Policies'];
     $Change_Policies_unique_query = db_query("SELECT Change_Policies FROM {Change_Policies}")->fetchAll();
     $Change_Policies_unique = $Change_Policies_unique_query;
     $getCount=count($Change_Policies_unique);
     for($i=0;$i<$getCount;$i++){
     if($Change_Policies==$Change_Policies_unique[$i]->Change_Policies) {
     form_set_error('Change_Policies', '<div class="implementation-requried">title is already taken.</div>');
      }
    }
      if($form_state['input']['Change_Policies']==''){
        form_set_error('Change_Policies', '<div class="implementation-requried">Title is required.</div>');
      }
          if($form_state['input']['Change_Policies_activity']==''){
        form_set_error('Change_Policies_activity', '<div class="implementation-requried">Activity title is required.</div>');
      }
         if($form_state['input']['startdatetime_physical_Change_Policies']==''){
        form_set_error('startdatetime_physical_Change_Policies', '<div class="implementation-requried">Start Date is required.</div>');
      }

         if($form_state['input']['enddatetime_physical_Change_Policies']==''){
        form_set_error('enddatetime_physical_Change_Policies', '<div class="implementation-requried">End Date is required.</div>');
      }

            if($form_state['input']['Level_Success_Change_Policies']==''){
        form_set_error('Level_Success_Change_Policies', '<div class="implementation-requried">Level of Success is required.</div>');
      }
      }

     if($form_state['input']['csap_7']=="Physical Design"){

           $Physical_Design = $form_state['values']['Physical_Design'];
     $Physical_Design_unique_query = db_query("SELECT Physical_Design FROM {physical_design}")->fetchAll();
     $Physical_Design_unique = $Physical_Design_unique_query;
     $getCount=count($Physical_Design_unique);
     for($i=0;$i<$getCount;$i++){
     if($Physical_Design==$Physical_Design_unique[$i]->Physical_Design) {
     form_set_error('Physical_Design', '<div class="implementation-requried">title is already taken.</div>');
      }

    }


      if($form_state['input']['Physical_Design']==''){
        form_set_error('Physical_Design', '<div class="implementation-requried">title is required.</div>');
      }
          if($form_state['input']['Physical_Design_activity']==''){
        form_set_error('Physical_Design_activity', '<div class="implementation-requried">Activity Title is required.</div>');
      }

         if($form_state['input']['startdatetime_physical_Physical_Design']==''){
        form_set_error('startdatetime_physical_Physical_Design', '<div class="implementation-requried">Start Date is required.</div>');
      }
         if($form_state['input']['enddatetime_physical_Physical_Design']==''){
        form_set_error('enddatetime_physical_Physical_Design', '<div class="implementation-requried">End Date is required.</div>');
      }
                if($form_state['input']['Level_Success_Physical_Design']==''){
        form_set_error('Level_Success_Physical_Design', '<div class="implementation-requried">Level of Success is required.</div>');
      }


      }

     if(!isset($form_state['input']['person_conducting']) && ($form_state['input']['csap_7']=="Enhance Skills" || $form_state['input']['csap_7']=="Providing Support" || $form_state['input']['csap_7']=="Provide Information" )){
         form_set_error('person_conducting', '<div class="implementation-requried">Person Conducting is required.</div>');
     }



     if($form_state['input']['csap_7']!="Provide Information" && $form_state['input']['csap_7']!="Change Consequences" && $form_state['input']['csap_7']!="Change Access and Barries" && $form_state['input']['csap_7']!="Modify/Change Policies" && $form_state['input']['csap_7']!="Physical Design" && $form_state['input']['Provide_Information_activity']!="Informational materials prepared/ produced" && $form_state['input']['Provide_Information_activity']!="Information on DFC Coalition Web site")
     {


      if($form_state['input']['enddatetime']['date']==""){
          form_set_error('enddatetime[date]', '<div class="implementation-requried">End date is required.</div>');
      }
      if($form_state['input']['Length_of_services']['time']==""){
          form_set_error('Length_of_services[time]', '<div class="implementation-requried">Length of Service is required.</div>');
      }
     }
 }

      if($form_state['input']['description_of_purpose']==""){
      form_set_error('description_of_purpose', '<div class="implementation-requried">Description of Purpose is required.</div>');
}     if($form_state['input']['description_of_outcome']==""){
       form_set_error('description_of_outcome', '<div class="implementation-requried">Description of Outcome is required.</div>');
}

}

  //return $form_state;
}





function implementation_save_and_copy_form_submit($form, &$form_state)
{
        //echo "<pre>";print_r($_REQUEST);die;

        if(isset($form_state['values']['csap_6']) && $form_state['values']['csap_6']!=''){
            $eventTitle="CSAP 6 - ".$form_state['values']['csap_6'];
        }else{
            $eventTitle="CADCA 7 - ".$form_state['values']['csap_7'];
        }
        $eventStartDate=$form_state['values']['startdatetime'];
        $eventEndDate=$form_state['values']['enddatetime'];
        $event_status=(isset($form_state['values']['signature']) && $form_state['values']['signature'] == "1") ? "Completed" : "Pending";
        /* Calendar Event Creation */
        $event_node_id=create_data_event_node($eventTitle, $user->uid,$createdDate,$changedDate,$event_type="Implementation", $status="1",$eventStartDate,$eventEndDate,$event_status);


    $query = db_select('planning_details', 'a');
    $query->fields('a', array(
        'planning_id',
        'title'
    ));
    $query->orderBy('a.title', 'ASC');
    $planning_lists = $query->execute()
        ->fetchAll();
    // $lmCount = 0;
    // foreach ($planning_lists as $plankey => $planVal)
    // {
    //     $plan_id = $planVal->planning_id;
    //     $planning_data_lists = db_query("SELECT * FROM {planning_details} WHERE planning_id = " . $plan_id)->fetchAll();
    //     $chkSerialize = @unserialize($planning_data_lists[0]->contributing_factor);
    //     if ($chkSerialize !== false)
    //     {
    //         $contributingFactor = unserialize($planning_data_lists[0]->contributing_factor);
    //         $interventionsCheckedItems = unserialize($planning_data_lists[0]->interventions);
    //         $logicModelCount = count($contributingFactor['contributingCollection']);
    //         for ($i = 0;$i < $logicModelCount;$i++)
    //         {
    //             if (isset($_REQUEST['contributing_factor' . $plankey . '_' . $i]))
    //             {
    //                 $cfLogicModels['contributing_factor' . $plankey . '_' . $i] = $_REQUEST['contributing_factor' . $plankey . '_' . $i];
    //             }
    //             for ($inv = 0;$inv < count($_REQUEST['interventions' . $plankey . '_' . $i]);$inv++)
    //             {
    //                 if (isset($_REQUEST['interventions' . $plankey . '_' . $i]))
    //                 {
    //                     $inLogicModels['interventions' . $plankey . '_' . $i] = $_REQUEST['interventions' . $plankey . '_' . $i];
    //                 }
    //             }
    //             if (isset($_REQUEST['logic_model_title_link' . $plankey . '_' . $i]))
    //             {
    //                 $logicModelTitle = $_REQUEST['logic_model_title_link' . $plankey . '_' . $i];
    //             }
    //         }
    //
    //     }
    //     else
    //     {
    //         if (isset($_REQUEST['contributing_factor' . $plankey . '_' . $lmCount]))
    //         {
    //             $cfLogicModels['contributing_factor' . $plankey . '_' . $lmCount] = $_REQUEST['contributing_factor' . $plankey . '_' . $lmCount];
    //         }
    //         for ($inv = 0;$inv < count($_REQUEST['interventions' . $plankey . '_' . $lmCount]);$inv++)
    //         {
    //             if (isset($_REQUEST['interventions' . $plankey . '_' . $lmCount]))
    //             {
    //                 $inLogicModels['interventions' . $plankey . '_' . $lmCount] = $_REQUEST['interventions' . $plankey . '_' . $lmCount];
    //             }
    //         }
    //         $lmCount++;
    //     }
    //
    // }
    // $conArrModels['contributing_factor'] = $cfLogicModels;
    // $invArrModels['interventions'] = $inLogicModels;

    $logicModelTitle=$_REQUEST['logic_model_title_link0_0'];

    if(isset($_REQUEST['contributing_factor']) && $_REQUEST['contributing_factor']!=''){
      $cfLogicModels=$_REQUEST['contributing_factor'][0];
    }
    if(isset($_REQUEST['interventions'][0]) && $_REQUEST['interventions'][0]!=''){
      $inLogicModels=$_REQUEST['interventions'][0];
    }

    $conArrModels['contributing_factor'] = $cfLogicModels;
    $invArrModels['interventions'] = $inLogicModels;

    $person_conducting = "";
    if (count($_REQUEST['person_conducting']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['person_conducting']);$i++)
        {
            $person_conducting['person_conducting'][$i] = $_REQUEST['person_conducting'][$i];
        }
    }
    $person_conductin_data = serialize($person_conducting);

    $person_conducting = "";
    if (count($_REQUEST['person_conducting']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['person_conducting']);$i++)
        {
            $person_conducting['person_conducting'][$i] = $_REQUEST['person_conducting'][$i];
        }
    }
    $person_conductin_data = serialize($person_conducting);

    if (isset($_REQUEST['attachment_upload_id']) && $_REQUEST['attachment_upload_id'] != '')
    {
        $already_upload_ids = unserialize($_REQUEST['attachment_upload_id']);

    }
    if (isset($_REQUEST['Attachments_fid']['files']) && count($_REQUEST['Attachments_fid']['files']) > 0)
    {
        if (isset($already_upload_ids['upload_id']) && count($already_upload_ids['upload_id']) > 0)
        {
            $ui = count($already_upload_ids['upload_id']);
        }
        else
        {
            $ui = 0;
        }
        foreach ($_REQUEST['Attachments_fid']['files'] as $uploadId => $uploadVal)
        {
            $file_upload_ids['upload_id'][$ui] = $uploadId;
            $ui++;
        }
    }
    else
    {
        $file_upload_ids['upload_id'] = $file_upload_ids['upload_id'];
    }

    if (isset($already_upload_ids['upload_id']) && count($already_upload_ids['upload_id']) > 0)
    {
        $file_upload_ids['upload_id'] = array_merge($already_upload_ids['upload_id'], $file_upload_ids['upload_id']);
    }
    else
    {
        $file_upload_ids['upload_id'] = $file_upload_ids['upload_id'];
    }

    if (!isset($_REQUEST['Attachments_fid']['files']))
    {
        $file_upload_ids = $already_upload_ids;
    }

    $Members_Invloved = "";
    if (count($_REQUEST['Members_Invloved']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['Members_Invloved']);$i++)
        {
            $Members_Invloved['Members_Invloved'][$i] = $_REQUEST['Members_Invloved'][$i];
        }
    }
    $members_invloved_data = serialize($Members_Invloved);

    $counts = $_REQUEST['hidden_field'];

    $Donation_select = $Monetary_Value = $Comment = array();
    if (count($_REQUEST['Donation_select']) > 0)
    {
        $i = 0;
        foreach ($_REQUEST['Donation_select'] as $keyz => $valuez)
        {
            $Donation_select['Donation_select'][$i] = $valuez;
            $Monetary_Value['Monetary_Value'][$i] = $_REQUEST['Monetary_Value'][$keyz];
            $Comment['Comment'][$i] = $_REQUEST['Comment'][$keyz];
            $i++;
        }
    }
    $Donation_select_data = serialize($Donation_select);
    $Monetary_Value_data = serialize($Monetary_Value);
    $Comment_data = serialize($Comment);




    $contact_involuved = "";
    if (count($_REQUEST['contact_person_conducting']) > 0)
    {
        for ($i = 0;$i < count($_REQUEST['contact_person_conducting']);$i++)
        {
            $contact_involuved['contact_person_conducting'][$i] = $_REQUEST['contact_person_conducting'][$i];
        }
    }
    $contact_involuved_data = serialize($contact_involuved);

   // print_r($contact_involuved_data);die();



    //echo "<pre>";print_r($_REQUEST);die;


//echo "<pre>";print_r($_REQUEST);die;
$Media_outlet=$Media_submit=$media_date=$Published=$if_yes_publication=$Reach=$media_notes=array();
if(count($_REQUEST['media_outlet'])>0){
$i = 0;
foreach ($_REQUEST['media_outlet'] as $keyz => $valuez) {
    $Media_outlet['media_outlet'][$i]=$valuez;
    $m_type_information['media_type_information'][$i]=$_REQUEST['media_type_information'][$keyz];
    $Media_submit['media_submit'][$i]=$_REQUEST['media_submit'][$keyz];
    $media_date['media_date'][$i]=$_REQUEST['media_date'][$keyz];
    $Published['published'][$i]=$_REQUEST['published'][$keyz];
    $if_yes_publication['media_publish'][$i]=$_REQUEST['media_publish'][$keyz];
    $Reach['reach'][$i]=$_REQUEST['reach'][$keyz];
    $media_notes['media_notes'][$i]=$_REQUEST['media_notes'][$keyz];
    $i++;
  }
}
$Media_outlet_data=serialize($Media_outlet);
$Media_submit_data=serialize($Media_submit);
$media_date_data=serialize($media_date);
$Published_data=serialize($Published);
$if_yes_publication_data=serialize($if_yes_publication);
$Reach_data=serialize($Reach);
$media_notes_data=serialize($media_notes);


$social_media_profile=$social_media_date=$social_media_submit=$social_media_impression=$social_media_notes=array();
if(count($_REQUEST['social_media_profile'])>0){
$j = 0;
foreach ($_REQUEST['social_media_profile'] as $keyz => $valuez) {
    $social_media_profile['social_media_profile'][$j]=$valuez;
    $social_media_submit['social_media_submit'][$j]=$_REQUEST['social_media_submit'][$keyz];
    $social_media_date['social_media_date'][$j]=$_REQUEST['social_media_date'][$keyz];
    $social_media_impression['social_media_impression'][$j]=$_REQUEST['social_media_impression'][$keyz];
    $social_media_notes['social_media_notes'][$j]=$_REQUEST['social_media_notes'][$keyz];
    $j++;
  }
}
$social_media_profile_data=serialize($social_media_profile);
$social_media_submit_data=serialize($social_media_submit);
$social_media_date_data=serialize($social_media_date);
$social_media_impression_data=serialize($social_media_impression);
$social_media_notes_data=serialize($social_media_notes);
    $imp_date_creation = date("F j, Y");


          $pending_status=($form_state['values']['signature'] == "2" || $form_state['values']['signature']=="0" || $form_state['values']['signature']=="1") ? "2" : "no";

    $implementation_id = db_insert('implementation_details')->fields(array(
            'contributing_factor_models' => serialize($conArrModels) ,
            'intervention_models' => serialize($invArrModels) ,
            'intervention_id' => (isset($_REQUEST['interventions0_0'][0]) && $_REQUEST['interventions0_0'][0]!='')?$_REQUEST['interventions0_0'][0]:$_REQUEST['interventions'][0],
            'contributing_factor_id' => (isset($_REQUEST['contributing_factor0_0']) && $_REQUEST['contributing_factor0_0']!='')?$_REQUEST['contributing_factor0_0']:$_REQUEST['contributing_factor'][0],
            'personConductingContent' => $person_conductin_data,
              'Strategies' => $form_state['values']['Strategies'],
             'csap_6' => $form_state['values']['csap_6'],
              'csap_7' => $form_state['values']['csap_7'],
            'startdatetime' => $form_state['values']['startdatetime'],
            'enddatetime' => $form_state['values']['enddatetime'],
            'Length_of_services' => $form_state['values']['Length_of_services'],
            'location' => $form_state['values']['location'],
            'country' => $form_state['values']['Country'],
            'address_1' => $form_state['values']['address_1'],
            'address_2' => $form_state['values']['address_2'],
            'city' => $form_state['values']['city'],
            'states' => $form_state['values']['states'],
            'zip_code' => $form_state['values']['zip_code'],
            'number_adult_served' => $form_state['values']['number_adult_served'],
            'number_youth_served' => $form_state['values']['number_youth_served'],
            'description_of_purpose' => $form_state['values']['description_of_purpose'],
            'description_of_outcome' => $form_state['values']['description_of_outcome'],
            'Members_Invloved' => $members_invloved_data,
            'Donation_select' => $Donation_select_data,
            'Monetary_Value' => $Monetary_Value_data,
             'contact_person_conducting' =>$contact_involuved_data,
            'Comment' => $Comment_data,
            'Attachments_fid' => (isset($file_upload_ids) && count($file_upload_ids) > "0") ? serialize($file_upload_ids) : "",
            'Attachments_notes' => $form_state['values']['Attachments_notes'],
            'logic_model_title_link' => $logicModelTitle,
            'is_pending' =>$pending_status,
            'signature' => ($form_state['values']['signature'] == "1") ? $form_state['values']['signature'] : "0",
              'user_id' => $form_state['values']['imp_user_id'],
              'event_node_id' => $event_node_id,
              'created_at' => $imp_date_creation,
              'updated_at' => $imp_date_creation,
            ))->execute();

    $lastId = Database::getConnection()->lastInsertId('implementation_id');


if(isset($_REQUEST['Alternative_Activities']) && $_REQUEST['Alternative_Activities']!='')
  {
           db_insert('alternative_activitity')
        ->fields(array(
             'implementation_id' => $lastId,
           'Alternative_Activities' => $form_state['values']['Alternative_Activities'],

          ))
      ->execute();
}

if(isset($_REQUEST['Community_based_Process']) && $_REQUEST['Community_based_Process']!='')
  {
           db_insert('community_based')
        ->fields(array(
             'implementation_id' => $lastId,
           'Community_based_Process' => $form_state['values']['Community_based_Process'],
          ))
          ->execute();
}

if(isset($_REQUEST['education_csap']) && $_REQUEST['education_csap']!='')
  {
           db_insert('education')
        ->fields(array(
             'implementation_id' => $lastId,
           'education_csap' => $form_state['values']['education_csap'],
          ))
        ->execute();
}

if(isset($_REQUEST['environmental']) && $_REQUEST['environmental']!='')
  {
           db_insert('environmental')
        ->fields(array(
             'implementation_id' => $lastId,
          'environmental' => $form_state['values']['environmental'],

          ))
      ->execute();
}
if(isset($_REQUEST['information_dissemination_edit']) && $_REQUEST['information_dissemination_edit']!='')
  {
           $info_dis_id = db_insert('information_dissemination_details')
        ->fields(array(
             'implementation_id' => $lastId,
           'Information_Dissemination_csap6' => $form_state['values']['information_dissemination_edit'],
           'information_dissemination' => $form_state['values']['information_dissemination_csap6'],
'number_adult_information' => $form_state['values']['number_adult_served_information'],
'number_youth_information' => $form_state['values']['number_youth_served_information'],
'number_adult_presentation' => $form_state['values']['number_adult_served_presentation'],
'number_youth_presentation' => $form_state['values']['number_youth_served_presentation'],

          ))
         ->execute();

    if(isset($_REQUEST['information_dissemination_edit']) && $_REQUEST['information_dissemination_edit']!='')
  {
        $m_type_information=(isset($_REQUEST['information_dissemination']) && $_REQUEST['information_dissemination']=="Media")?$_REQUEST['media_type_information']:"";
            db_insert('media')
          ->fields(array(
             'implementation_id' => $lastId,


           'information_dissemination_id' => $info_dis_id,
           'media_type_information' =>$form_state['values']['media_type_information_view'],
           'Media_outlet' => $Media_outlet_data,
           'Media_submit' => $Media_submit_data,
           'media_date' => $media_date_data,
           'Published' => $Published_data,
           'if_yes_publication' => $if_yes_publication_data,
           'Reach' => $Reach_data,
           'media_notes' => $media_notes_data,
          ))
         ->execute();
      }
  if(isset($_REQUEST['implementation_id']) && $_REQUEST['implementation_id']!='')
  {
            db_insert('social_media')
          ->fields(array(
             'implementation_id' => $lastId,
          'information_dissemination_id' => $info_dis_id,
          'Social_Media_profile' => $social_media_profile_data,
           'Social_Media_Media_submit' => $social_media_submit_data,
           'social_media_date' => $social_media_date_data,
           'Social_Media_media_impression' => $social_media_impression_data,
           'Social_Media_media_notes' => $social_media_notes_data,
          ))
      ->execute();
      }
}
// cacad 7 insert the values starts here

 if(isset($_REQUEST['Enhance_Activity']) && $_REQUEST['Enhance_Activity']!='')
  {

          db_insert('enhance_skills')
        ->fields(array(
             'implementation_id' => $lastId,
           'enhance_skills' => $form_state['values']['enhance_skills'],
           'Enhance_Activity' => $form_state['values']['Enhance_Activity'],
           'others_for_all' => $form_state['values']['Enhance_Activity_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports'],
           'Level_Success' => $form_state['values']['Level_Success_enhance_skills'],
          ))
   ->execute();
}



 if(isset($_REQUEST['providing_Support']) && $_REQUEST['providing_Support']!='')
  {
           db_insert('providing_Support')
        ->fields(array(
             'implementation_id' => $lastId,
           'providing_Support' => $form_state['values']['providing_Support'],
          'Providing_Support_activity' => $form_state['values']['Providing_Support_activity'],
          'others_for_all' => $form_state['values']['providing_Support_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports_Providing_Support'],
           'Level_Success' => $form_state['values']['Level_Success_providing_Support'],
          ))
          ->execute();
}

 if(isset($_REQUEST['Provide_Information_activity']) && $_REQUEST['Provide_Information_activity']!='')
  {
         db_insert('Provide_Information')
        ->fields(array(
             'implementation_id' => $lastId,
           'Provide_Information' => $form_state['values']['Provide_Information'],
          'Provide_Information_activity' => $form_state['values']['Provide_Information_activity'],
           'others_for_all' => $form_state['values']['others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports'],
           'Level_Success' => $form_state['values']['Level_Success_Provide_Information'],
           'number_adult_information' => $form_state['values']['number_adult_served_information'],
'number_youth_information' => $form_state['values']['number_youth_served_information'],
'number_adult_presentation' => $form_state['values']['number_adult_served_presentation'],
'number_youth_presentation' => $form_state['values']['number_youth_served_presentation'],
          ))
         ->execute();

           if(isset($_REQUEST['media_outlet']) && count($_REQUEST['media_outlet'])>0 && $_REQUEST['Provide_Information_activity']=="Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),")
      {
        $m_type_information_cacad=(isset($_REQUEST['Provide_Information_activity']) && $_REQUEST['Provide_Information_activity']=="Media campaigns (Television/ Radio/ Print/ Billboards/ Bus or other Posters),  Media coverage: (TV/ radio/ newspaper stories),")?$_REQUEST['media_type_information']:"";
          db_insert('media_cadca')
          ->fields(array(
             'implementation_id' => $lastId,
          'Media_Campaign_information' => $form_state['values']['Media_Campaign_information_view_cadca'],
           'Media_outlet' => $Media_outlet_data,
           'Media_submit' => $Media_submit_data,
           'media_date' => $media_date_data,
           'Published' => $Published_data,
           'if_yes_publication' => $if_yes_publication_data,
           'Reach' => $Reach_data,
           'media_notes' => $media_notes_data,
          ))
           ->execute();
      }
       if (isset($_REQUEST['Provide_Information_activity']) && count($_REQUEST['social_media_profile']) > 0 && $_REQUEST['Provide_Information_activity'] == "Social networking (Facebook, Twitter, etc.)")
        {
            db_insert('Social_Media_cadca')->fields(array(
                 'implementation_id' => $lastId,
                'Social_Media_profile' => $social_media_profile_data,
                'Social_Media_Media_submit' => $social_media_submit_data,
                'social_media_date' => $social_media_date_data,
                'Social_Media_media_impression' => $social_media_impression_data,
                'Social_Media_media_notes' => $social_media_notes_data,
            ))->execute();
        }

  }
   if(isset($_REQUEST['change_consequences_edit']) && $_REQUEST['change_consequences_edit']!='')
  {
           db_insert('change_consequences')
        ->fields(array(
             'implementation_id' => $lastId,
           'change_consequences' => $form_state['values']['change_consequences_edit'],
           'change_activity' => $form_state['values']['change_consequences_activity'],
            'others_for_all' => $form_state['values']['change_consequences_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports_change_consequences'],
           'Level_Success' => $form_state['values']['Level_Success_change_consequences'],
           'number_adult_Business_design' => $form_state['values']['number_adult_Business_design'],
          'startdatetime_physical' => $form_state['values']['startdatetime_physical'],
          'enddatetime_physical' => $form_state['values']['enddatetime_physical'],
          ))
          ->execute();
}

   if(isset($_REQUEST['Change_Access']) && $_REQUEST['Change_Access']!='')
  {
           db_insert('change_access')
        ->fields(array(
             'implementation_id' => $lastId,
           'Change_Access' => $form_state['values']['Change_Access'],
          'Change_Access_activity' => $form_state['values']['Change_Access_activity'],
         'others_for_all' => $form_state['values']['Change_Access_activity_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports_Change_Access'],
           'Level_Success' => $form_state['values']['Level_Success_Change_Access'],
          'startdatetime_physical' => $form_state['values']['startdatetime_physical'],
          'enddatetime_physical' => $form_state['values']['enddatetime_physical'],
          ))
      ->execute();
}
   if(isset($_REQUEST['Change_Policies_activity']) && $_REQUEST['Change_Policies_activity']!='')
  {
           db_insert('Change_Policies')
        ->fields(array(
             'implementation_id' => $lastId,
           'Change_Policies' => $form_state['values']['Change_Policies'],
          'Change_Policies_activity' => $form_state['values']['Change_Policies_activity'],
          'others_for_all' => $form_state['values']['Change_Policies_activity_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports_Change_Policies'],
           'Level_Success' => $form_state['values']['Level_Success_Change_Policies'],
          'startdatetime_physical' => $form_state['values']['startdatetime_physical_Change_Policies'],
          'enddatetime_physical' => $form_state['values']['enddatetime_physical_Change_Policies'],
          ))
       ->execute();
}
   if(isset($_REQUEST['Physical_Design_activity']) && $_REQUEST['Physical_Design_activity']!='')
  {
         db_insert('physical_design')
        ->fields(array(
             'implementation_id' => $lastId,
           'Physical_Design' => $form_state['values']['Physical_Design'],
          'Physical_Design_activity' => $form_state['values']['Physical_Design_activity'],
          'others_for_all' => $form_state['values']['physical_design_others_for_all'],
           'Funding_supports' => $form_state['values']['Funding_supports_Physical_Design'],
           'Level_Success' => $form_state['values']['Level_Success_Physical_Design'],
           'startdatetime_physical' => $form_state['values']['startdatetime_physical_Physical_Design'],
          'enddatetime_physical' => $form_state['values']['enddatetime_physical_Physical_Design'],
            ))
         ->execute();

}

   if (isset($_REQUEST['op']) && $_REQUEST['op'] == "Save & Exit" && $form_state['values']['signature']=="2")
    {
        $form_state['redirect'] = 'implementation/list';
    } else if(isset($form_state['values']['signature']) && $form_state['values']['signature']=="0"){
        $form_state['redirect'] = 'implementation/'.$lastId.'/component';
        drupal_set_message("<div class='modal' id='modal-name'><div class='modal-sandbox'></div>
             <div class='modal-box'>
            <div class='modal-body'>
         <div class='close-modal'>&#10006;</div>
       <p>A copy has been saved to pending. you may now edit this document and save it </p>
    </div>
  </div>
</div>");
    } else if(isset($form_state['values']['signature']) && $form_state['values']['signature']=="1"){
        $form_state['redirect'] = 'implementation/'.$lastId.'/edit';
    }else
    {
        return $form;
    }

}

function get_state_lists(){

  return array(
      '' => "<--Select-->",
      'Alabama' => "Alabama",
      'Alaska' => "Alaska",
      'Arizona' => "Arizona",
      'Arkansas' => "Arkansas",
      'California' => "California",
      'Colorado' => "Colorado",
      'Connecticut' => "Connecticut",
      'District of Columbia' => "District of Columbia",
      'Flocapacity_ida' => "Flocapacity_ida",
      'Georgia' => "Georgia",
      'Hawaii' => "Hawaii",
      'Iowa' => "Iowa",
      'Kansas' => "Kansas",
      'Louisiana' => "Louisiana",
      'Maine' => "Maine",
      'Massachusetts' => "Massachusetts",
      'Michigan' => "Michigan",
      'Minnesota' => "Minnesota",
      'Mississippi' => "Mississippi",
      'Missouri' => "Missouri",
      'Montana' => "Montana",
      'Nebraska' => "Nebraska",
      'Nevada' => "Nevada",
      'New Hampshire' => "New Hampshire",
      'New Jersey' => "New Jersey",
      'New Mexico' => "New Mexico",
      'New York' => "New York",
      'North Carolina' => "North Carolina",
      'North Dakota' => "North Dakota",
      'Ohio' => "Ohio",
      'Oklahoma' => "Oklahoma",
      'Oregon' => "Oregon",
      'Pennsylvania' => "Pennsylvania",
      'Rhode Island' => "Rhode Island",
      'South Carolina' => "South Carolina",
      'South Dakota' => "South Dakota",
      'Tennessee' => "Tennessee",
      'Texas' => "Texas",
      'Utah' => "Utah",
      'Vermont' => "Vermont",
      'Virginia' => "Virginia",
      'Washington' => "Washington",
      'West Virginia' => "West Virginia",
      'Wisconsin' => "Wisconsin",
      'Wyoming' => "Wyoming",
      'Armed Forces (Americas)' => "Armed Forces (Americas)",
      'Armed Forces (Europe, Canada, Middle East, Africa)' => "Armed Forces (Europe, Canada, Middle East, Africa)",
      'Armed Forces (Pacific)' => "Armed Forces (Pacific)",
      'American Samoa' => "American Samoa",
      'Federated States of Micronesia' => "Federated States of Micronesia",
      'Guam' => "Guam",
      'Marshall Islands' => "Marshall Islands",
      'Northern Mariana Islands' => "Northern Mariana Islands",
      'Palau' => "Palau",
      'Puerto Rico' => "Puerto Rico",
      'Virgin Islands' => "Virgin Islands"
  );

}

?>
